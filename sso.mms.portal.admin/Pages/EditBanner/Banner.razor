@page "/banner"
@using sso.mms.helper.Configs;
@using sso.mms.helper.Components.Footer
@using sso.mms.helper.Utility
@using sso.mms.portal.admin.Pages.Navbar
@using sso.mms.helper.PortalModel;
@using Blazored.LocalStorage;
@using sso.mms.login.Services;
@using AntDesign
@using sso.mms.portal.admin.Controller;
@using sso.mms.portal.admin.Services;
@inject BannerService bannerService
@inject NavigationManager Navigation
@inject ILocalStorageService localStorage
@inject UserRoleService userRoleService

<style>
        :root {
        --mdc-theme-primary: #334396;
    }

    .form-control, .form-select {
        display: block;
        width: 100%;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: var(--bs-body-color);
        background-color: var(--bs-body-bg);
        background-clip: padding-box;
        border: var(--bs-border-width) solid #9e9e9e;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: var(--bs-border-radius-sm);
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        height: 3rem;
    }

    @@media only screen and (min-width: 1000px) {
        .pm-xl {
            position: fixed;
            width: 100%;
            z-index: 1000;
        }
    }

    @@media only screen and (max-width: 1000px) {
        .position-class {
            position: relative
        }
    }

    @@media (min-width: 576px) {
        .modal-dialog {
            max-width: 800px;
            margin: 1.75rem auto;
        }
    }

    .mdc-table th {
        font-size: 1.143rem;
        color: #334396;
        border: 2px solid rgb(255 255 255);
        padding: 12px 12px 12px 24px;
        background: #FFCC41;
        font-family: 'Noto Sans Thai';
        font-style: normal;
        font-weight: 700;
        font-size: 18px;
        line-height: 27px;
        letter-spacing: 0.2px;
        color: #334396;
    }

    .mdc-table, .mdc-table--striped {
        width: 100%;
        max-width: 100%;
        background-color: transparent;
        border-collapse: collapse;
        border-spacing: 0;
        display: inline-block;
        overflow-x: auto;
        margin: 8px 0 32px;
        border: 0px solid rgba(0,0,0,.1);
        font-family: 'Noto Sans Thai';
        font-style: normal;
        font-weight: 500;
        font-size: 16px;
        align-items: center;
        color: #1A141F;
        border-radius: 10px;
    }

        .mdc-table td {
            border: 2px solid white;
            padding: 12px 12px 12px 24px;
        }

    tr.mdc-table-footer-row, tr.mdc-table-row {
        height: 48px;
        background: #a8a2ad17;
    }

    .mdc-table--striped tr:nth-of-type(odd) {
        background: #00000012;
    }

    .mdc-select__dropdown-icon {
        margin-left: 1px;
        margin-right: 1px;
        display: inline-flex;
        position: relative;
        align-self: center;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        pointer-events: none;
    }

    .mdc-select .mdc-select__anchor {
        height: 56px;
        display: flex;
        align-content: center;
        align-items: center;
    }

    .mat-paginator .mat-paginator-container .mat-paginator-page-size {
        display: flex;
        margin-right: 8px;
        align-items: center
    }

    .mat-paginator .mat-paginator-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        min-height: 56px;
        padding: 0 8px;
        flex-wrap: wrap-reverse;
    }

    .mdc-paginator-container {
        display: flex;
        justify-content: space-between;
        min-height: 56px;
        padding: 0 8px;
        flex-wrap: wrap-reverse;
        width: 100%;
        align-items: center;
    }

    .mdc-select:not(.mdc-select--disabled) .mdc-select__anchor {
        background-color: #ffffff;
        width: 80px;
        height: 30px;
        border-radius: 10px;
        border: 0px solid #D4D2D5;
    }

    .mdc-paginator-page-size {
        line-height: 0px;
    }

    .mat-elevation-z5 {
        box-shadow: 0px 3px 0px -1px rgb(0 0 0 / 0%), 0px 5px 0px 0px rgb(0 0 0 / 0%), 0px 1px 0px 0px rgb(0 0 0 / 0%);
    }

</style>


    <NavbarLoginAdmin ShortToken=@shortToken PageCode="@codeName"></NavbarLoginAdmin>

<MediaStyle></MediaStyle>



<div class="container mt-5 mb-4">
    <div class="bordcase-body">
        <div class="container container-class ">
            <p class="txt-title mt-4"> แบนเนอร์ </p>
            <div class="d-flex @((permit.isRoleCreate == true ? "justify-content-between" : "justify-content-end"))">
                @if (permit.isRoleCreate == true && permit.isRoleCreate != null)
                {
                    <div class="btn btn-primary btn-add-data txt-add-data" style="width:150px;" @onclick=addbanner>
                        <i class="fa-solid fa-circle-plus"></i>&nbsp; เพิ่ม
                    </div>
                }

                <div class="input-group w-25">
                    <input type="search" class="form-control" style="height: 48px;" placeholder="ข้อมูลที่ต้องการค้นหา" @bind=@text aria-label="Search" aria-describedby="search-addon" />
                    <button type="button" class="btn btn-outline-primary serch-bg" style="height: 48px;width:48px;" @onclick=@SearchText><i class="fa-solid fa-magnifying-glass"></i></button>
                </div>
            </div>

            <MatTable 
                Items="@bannerDataTsearch" 
                ShowPaging="false" 
                LoadInitialData="true" 
                Striped="true"
                RequestApiOnlyOnce="true" 
                AllowSelection="true" 
                RowClass="tester" 
                PageSize="@pageSize"
                      CurrentPage="@pageIndex">
                <MatTableHeader>
                    <th class="text-center" style="border-radius:10px 0 0 0;width:100px">ลำดับ</th>
                    <th class="text-center" style="width:350px">หัวข้อ</th>
                    <th class="text-center" style="width:350px">วันที่สร้าง</th>
                    <th class="text-center" style="width:220px">สถานะ </th>
                    <th class="text-center" style="border-radius:0 10px 0 0 ; width:100px;"></th>
                </MatTableHeader>
                <MatTableRow>
                    <td style="max-width:100px">@(bannerDataTsearch.IndexOf(context) + 1)</td>
                    <td style="width:350px">@context.BannerName</td>
                    <td style="width:350px">@ThaiDateFormat.FormattedDate(context?.CreateDate)</td>
                    <td style="width:220px">
                        @if (context.StatusAnnounce == 1)
                        {
                            <span style="color : #59AD46">ลงประกาศ</span>
                        }
                        else
                        {
                            <span style="color : red">ไม่ลงประกาศ</span>
                        }
                    </td>
                    <td style="width:100px">
                        @if (permit.isRoleUpdate == true && permit.isRoleUpdate != null)
                        {
                            <img src="helper_shared/PortalAdminImage/edit.png" @onclick="()=>editBannersadmin(context.Id)" title="แก้ไข" />
                        }

                    </td>
                </MatTableRow>
            </MatTable>

            @if (bannerDataT != null)
            {
                <div>
                    <AntDesign.Pagination ShowSizeChanger
                                           OnShowSizeChange="OnShowSizeChange"
                                           OnChange="OnPage"
                                           DefaultCurrent="3"
                                           PageSize=@pageSize
                                           Total="@bannerDataTsearch.Count()" />
                   @*  <MatPaginator Length="@bannerDataT.Count"PageSize="@pageSize" Page="@OnPage"></MatPaginator> *@
                </div>
            }

            <div class="d-flex justify-content-end align-content-end align-items-center py-4 mt-2">
                <button @onclick="GoToMainmenu" class="btn btn-secondary btn-bo-main px-4 p-2">
                    <i class="fa-solid fa-circle-chevron-left"></i>&nbsp; ย้อนกลับ
                </button>
            </div>

        </div>
    </div>
</div>
<div class="mt-4">
    <sso.mms.helper.Components.Footer.Footer></sso.mms.helper.Components.Footer.Footer>
</div>
@if (isloading == true)
{
    <style>body { overflow: hidden; }</style><LoadingPage></LoadingPage>
}

@code {
    public string? env = ConfigureCore.ConfigENV;
    private string prefixadmin = "";
    private string prefix = "";
    private string? text;
    public bool isloading = false;
    int pageSize = 5;
    int pageIndex = 1;

    public string StatusAnnounce = "";
    [Parameter]
    [SupplyParameterFromQuery(Name = "token")]
    public string? shortToken { get; set; } = "";

    private List<BannerT>? bannerDataT;
    private List<BannerT>? bannerDataTsearch;

    public UserRole userRole;
    public MenuPerMit permit = new MenuPerMit();
    public string? codeName = "DSP0501";

    void OnPage(PaginationEventArgs e)
    {

        Console.WriteLine(e);
        pageSize = e.PageSize;
        pageIndex = e.Page;
    }


    private void OnShowSizeChange(PaginationEventArgs args)
    {
        var (current, pageSize) = args;
        Console.WriteLine($"{current}, {pageSize}");
    }


    protected override async Task OnInitializedAsync()
    {

        if (env == "Development")
        {
            prefixadmin = "";
        }
        else
        {
            prefixadmin = "/admin";
        }
        isloading = true;
        Console.WriteLine(shortToken);
        bannerDataT = await bannerService.GetBannersT();
        bannerDataTsearch = bannerDataT;
        userRole = await localStorage.GetItemAsync<UserRole>("userRole");
        if (userRole != null && userRole.role != null)
        {
            try
            {
                permit = await userRoleService.GetUserAuth(userRole, "PSMBO005", "PORTAL-SSO");
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }
        }
        isloading = false;
        StateHasChanged();
    }

    private void addbanner()
    {
        Navigation.NavigateTo($"{prefixadmin}/addbanner?token={shortToken}");
    }
    private void SearchText()
    {
        bannerDataTsearch = bannerDataT.Where(w => w.BannerName.ToLower().Contains(text.ToLower())).ToList();
        pageIndex = 1;
    }
    void OnPage(MatPaginatorPageEvent e)
    {
        pageSize = e.PageSize;
        pageIndex = e.PageIndex + 1;
    }
    private void editBannersadmin(int id)
    {
        Navigation.NavigateTo($"{prefixadmin}/viewbanner?id={id}&token={shortToken}");
    }
    public void GoToMainmenu()
    {
        Navigation.NavigateTo(prefixadmin + "/mainmenu" + $"?token={shortToken}");
    }



}

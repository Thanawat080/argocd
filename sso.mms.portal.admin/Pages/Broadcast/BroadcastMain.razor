@page "/broadcastmain"
@using AntDesign;
@using sso.mms.helper.Components.Footer
@using sso.mms.helper.Configs;
@using sso.mms.helper.PortalModel;
@using sso.mms.helper.Utility
@using sso.mms.notification.ViewModel.BoardCast;
@using sso.mms.portal.admin.Pages.Navbar
@using sso.mms.notification.Services;
@using sso.mms.helper.ViewModels
@using Blazored.LocalStorage;
@using sso.mms.login.Services;


@inject IJSRuntime JsRuntime
@inject sso.mms.notification.Services.NotificationService notificationService
@inject NavigationManager NavigationManager
@inject SweetAlertService Swal;
@inject ILocalStorageService localStorage
@inject UserRoleService userRoleService

<style>
        :root {
        --mdc-theme-primary: #334396;
    }

    .form-control, .form-select {
        display: block;
        width: 100%;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: var(--bs-body-color);
        background-color: var(--bs-body-bg);
        background-clip: padding-box;
        border: var(--bs-border-width) solid #9e9e9e;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: var(--bs-border-radius-sm);
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        height: 3rem;
    }

    .swal2-container.swal2-center > .swal2-popup {
        grid-column: 2;
        grid-row: 2;
        align-self: center;
        justify-self: center;
        border-radius: 16px;
    }

    .swal2-title {
        position: relative;
        max-width: 100%;
        margin: 0;
        padding: 0.8em 1em 0;
        color: inherit;
        font-size: 1.875em;
        font-weight: 600;
        text-align: center;
        text-transform: none;
        word-wrap: break-word;
        color: #334396;
        font-family: Noto Sans Thai;
    }

    .swal2-styled.swal2-confirm {
        border: 0;
        color: #fff;
        font-size: 1em;
        border-radius: 4px;
        background: #334396;
        width: 150px;
    }

    @@media only screen and (min-width: 1000px) {
        .pm-xl {
            position: fixed;
            width: 100%;
            z-index: 1000;
        }
    }

    @@media only screen and (max-width: 1000px) {
        .position-class {
            position: relative
        }
    }

    @@media (min-width: 576px) {
        .modal-dialog {
            max-width: 800px;
            margin: 1.75rem auto;
        }
    }

    .mdc-table th {
        font-size: 1.143rem;
        color: #334396;
        border: 2px solid rgb(255 255 255);
        padding: 12px 12px 12px 24px;
        background: #FFCC41;
        font-family: 'Noto Sans Thai';
        font-style: normal;
        font-weight: 700;
        font-size: 18px;
        line-height: 27px;
        letter-spacing: 0.2px;
        color: #334396;
    }

    .mdc-table, .mdc-table--striped {
        width: 100%;
        max-width: 100%;
        background-color: transparent;
        border-collapse: collapse;
        border-spacing: 0;
        display: inline-block;
        overflow-x: auto;
        margin: 8px 0 32px;
        border: 0px solid rgba(0,0,0,.1);
        font-family: 'Noto Sans Thai';
        font-style: normal;
        font-weight: 500;
        font-size: 16px;
        align-items: center;
        color: #1A141F;
        border-radius: 10px;
    }

        .mdc-table td {
            border: 2px solid white;
            padding: 12px 12px 12px 24px;
        }

    tr.mdc-table-footer-row, tr.mdc-table-row {
        height: 48px;
        background: #a8a2ad17;
    }

    .mdc-table--striped tr:nth-of-type(odd) {
        background: #00000012;
    }

    .mdc-select__dropdown-icon {
        margin-left: 1px;
        margin-right: 1px;
        display: inline-flex;
        position: relative;
        align-self: center;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        pointer-events: none;
    }

    .mdc-select .mdc-select__anchor {
        height: 56px;
        display: flex;
        align-content: center;
        align-items: center;
    }

    .mat-paginator .mat-paginator-container .mat-paginator-page-size {
        display: flex;
        margin-right: 8px;
        align-items: center
    }

    .mat-paginator .mat-paginator-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        min-height: 56px;
        padding: 0 8px;
        flex-wrap: wrap-reverse;
    }

    .mdc-paginator-container {
        display: flex;
        justify-content: space-between;
        min-height: 56px;
        padding: 0 8px;
        flex-wrap: wrap-reverse;
        width: 100%;
        align-items: center;
    }

    .mdc-select:not(.mdc-select--disabled) .mdc-select__anchor {
        background-color: #ffffff;
        width: 80px;
        height: 30px;
        border-radius: 10px;
        border: 0px solid #D4D2D5;
    }

    .mdc-paginator-page-size {
        line-height: 0px;
    }

    .mat-elevation-z5 {
        box-shadow: 0px 3px 0px -1px rgb(0 0 0 / 0%), 0px 5px 0px 0px rgb(0 0 0 / 0%), 0px 1px 0px 0px rgb(0 0 0 / 0%);
    }

</style>


    <NavbarLoginAdmin ShortToken=@shortToken></NavbarLoginAdmin>

<MediaStyle></MediaStyle>



<div class="container mt-5 mb-4">
    <div class="bordcase-body">
        <div class="container container-class ">
            <p class="txt-title mt-4"> รายการเเจ้งเตือน Broadcast </p>
            <div class="d-flex @((permit.isRoleCreate == true ? "justify-content-between" : "justify-content-end"))">
                @if (permit.isRoleCreate == true && permit.isRoleCreate != null)
                {
                    <div class="btn btn-primary btn-add-data txt-add-data" data-bs-toggle="modal" data-bs-target="#qr" style="width:150px;" @onclick="@onClearData">
                        <i class="fa-solid fa-circle-plus"></i>&nbsp; เพิ่ม
                    </div>
                }

                <div class="input-group w-50">
                    <input type="search" class="form-control" style="height: 48px;" placeholder="ข้อมูลที่ต้องการค้นหา" @bind=@text aria-label="Search" aria-describedby="search-addon" />
                    <button type="button" class="btn btn-outline-primary serch-bg" style="height: 48px;width:48px;" @onclick="@SearchText"><i class="fa-solid fa-magnifying-glass"></i></button>
                </div>
            </div>

            <MatTable 
                ShowPaging="false" 
                Items="@notiTSearch" 
                LoadInitialData="true" 
                Striped="true" 
                RequestApiOnlyOnce="true" 
                AllowSelection="true" 
                RowClass="tester"
                      PageSize="@pageSize"
                      CurrentPage="@currentPage"
                DebounceMilliseconds="150" 
                class="mat-elevation-z5">
                <MatTableHeader>
                    <th class="text-center" style="width:100px">ลำดับ</th>
                    <th class="text-center" style="width:350px">หัวข้อเเจ้งเตือน</th>
                    <th class="text-center" style="width:350px">ข้อความเเจ้งเตือน</th>
                    <th class="text-center" style="width:220px">วันที่สร้าง</th>
                    <th class="text-center" style="border-radius:0 10px 0 0 ; width:100px;"></th>
                </MatTableHeader>
                <MatTableRow>
                    @*                    <td style="width:350px">@context.Id</td>
                    *@<td style="width:100px">@(notiTSearch.IndexOf(context) + 1)</td>
                    <td style="width:350px">@context.Title</td>
                    <td class="text-truncate" style="max-width: 350px;">@context.Content</td>
                    <td class="text-truncate" style="max-width:350px">@context.CreateDate</td>
                    <td style="width:100px" @onclick="@(()=>Goforwatch(context.Title,context.Content))" data-bs-toggle="modal" data-bs-target="#editbordcase"><img src="helper_shared/PortalAdminImage/eye.png"  title="ดู"/></td>
                </MatTableRow>
            </MatTable>
            <AntDesign.Pagination ShowSizeChanger
                        OnShowSizeChange="OnShowSizeChange"
                        OnChange="OnPage"
                        DefaultCurrent="3"
                        PageSize=@pageSize
                                   Total="@notiTSearch.Count()" />

            <div class="d-flex justify-content-end align-content-end align-items-center py-4 mt-2">
                <button @onclick="GoToMainmenu" class="btn btn-secondary btn-bo-main px-4 p-2">
                    <i class="fa-solid fa-circle-chevron-left"></i>&nbsp; ย้อนกลับ
                </button>

            </div>
        </div>
    </div>
</div>
<div class="mt-4">
     <sso.mms.helper.Components.Footer.Footer></sso.mms.helper.Components.Footer.Footer>
</div>

<div class="modal fade" id="qr" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" style="border-radius: 16px;">
            <div class="modal-header d-flex justify-content-between " style="background: #334396;border-radius: 16px 16px 0 0;">
                <div class="txt-add-data" style="color:white;"> เพิ่มเเจ้งเตือน Broadcast </div>
                <div>
                    <a class="btn" data-bs-dismiss="modal" aria-label="Close">
                        <i class="fa-regular fa-circle-xmark fa-2xl " style="color:#fff"></i>
                    </a>
                </div>
            </div>
            <div class="modal-body">
                <div class="container">
                    <form @onsubmit="@onSubmitBroadcast">
                        <div class="form-group">
                            <h3 class="txt-add-data" style="color: #334396; padding-top : 10px;">หัวข้อเเจ้งเตือน</h3>
                            <input class="form-control w-50" placeholder="หัวข้อเเจ้งเตือน..." @bind="@Title" required />
                            <br />
                            <h4 class="txt-add-data" style="color: #334396; padding-top : 10px;">รายละเอียดการเเจ้งเตือน</h4>
                            <textarea @bind="@Content" class="form-control" id="exampleFormControlTextarea1" rows="3" placeholder="รายละเอียดการเเจ้งเตือน..." required>
                            </textarea>
                        </div>
                        <div class="d-flex justify-content-end align-content-end align-items-center py-4 mt-2">
                            <button type="button" class="btn btn-secondary btn-bo-main px-4 p-2" data-bs-dismiss="modal">
                                <i class="fa-solid fa-circle-chevron-left"></i>&nbsp; ย้อนกลับ
                            </button>
                            &nbsp;&nbsp;
                            <button class="btn btn-primary btn-sa-main m-1 px-4 p-2" type="submit">
                                <i class="fa-regular fa-share-from-square"></i>&nbsp;  ส่ง Broadcast
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editbordcase" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" style="border-radius: 16px;">
            <div class="modal-header d-flex justify-content-between " style="background: #FFCC41;border-radius: 16px 16px 0 0;">
                <div class="txt-add-data" style="color:#334396;">ดูรายละเอียด Broadcast </div>
                <div>
                    <a class="btn" data-bs-dismiss="modal" aria-label="Close">
                        <i class="fa-regular fa-circle-xmark fa-2xl " style="color:#334396"></i>
                    </a>
                </div>
            </div>
            <div class="modal-body">
                <div class="container">
                    <form>
                        <div class="form-group">
                            <h3 class="txt-add-data" style="color: #334396; padding-top : 10px;">หัวข้อเเจ้งเตือน</h3>
                            <input class="form-control w-50" @bind="@Titleshow" readonly />
                            <br />
                            <h4 class="txt-add-data" style="color: #334396; padding-top : 10px;">รายละเอียดการเเจ้งเตือน</h4>
                            <textarea @bind="@Contentshow" class="form-control" id="exampleFormControlTextarea1" rows="3" readonly></textarea>
                        </div>
                    </form>
                    <div class="d-flex justify-content-end align-content-end align-items-center py-4 mt-2">
                        <button class="btn btn-secondary btn-bo-main px-4 p-2" data-bs-dismiss="modal">
                            <i class="fa-solid fa-circle-chevron-left"></i>&nbsp; ย้อนกลับ
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@if (isloading == true)
{
    <style>body { overflow: hidden; }</style><LoadingPage></LoadingPage>
}



@code {
    public bool isloading = false;

    [Parameter]
    [SupplyParameterFromQuery(Name = "token")]
    public string? shortToken { get; set; } = "";
    public int currentPage = 1;
    public string? env = ConfigureCore.ConfigENV;
    public string? url;
    public string? text;
    public string? getNotiTByUrl;
    public string? Title;
    public string? Titleshow;
    public string? Content;
    public string? Contentshow;
    public int? notimId = 8;

    public List<NotificationTModel> notiT = new List<NotificationTModel>();
    public List<NotificationTModel> notiTSearch = new List<NotificationTModel>();
    public List<NotiM> notiM { get; set; }

    public UserRole userRole;
    public MenuPerMit permit = new MenuPerMit();

    int pageSize = 5;

    void OnPage(PaginationEventArgs e)
    {

        Console.WriteLine(e);
        pageSize = e.PageSize;
        currentPage = e.Page;
    }

    private void OnShowSizeChange(PaginationEventArgs args)
    {
        var (current, pageSize) = args;
        Console.WriteLine($"{current}, {pageSize}");
    }

    public void Goforwatch(string Title, string Content)
    {
        this.Titleshow = Title;
        this.Contentshow = Content;
    }

    protected override async Task OnInitializedAsync()
    {
        isloading = true;
        url = ConfigureCore.redirectsPortalAdmin;

        notiT = await notificationService.GetNotiT();
        notiTSearch = notiT.Where(w => w.NotiMid == 8).OrderByDescending(o => o.Id).ToList();
        notiM = await notificationService.GetNotificationM();
        getNotiTByUrl = $"{url}api/Notification/getNotiT";
        userRole = await localStorage.GetItemAsync<UserRole>("userRole");
        if (userRole != null && userRole.role != null)
        {
            try
            {
                permit = await userRoleService.GetUserAuth(userRole, "PSMBO001", "PORTAL-SSO");
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }
        }
        isloading = false;
        StateHasChanged();
    }
    public void GoToMainmenu()
    {
        NavigationManager.NavigateTo(url + "/mainmenu" + $"?token={shortToken}");
    }
    public void SearchText()
    {
        if (notiT != null)
        {
            if (text != null)
            {
                notiTSearch = notiT.Where(w => w.Title.ToLower().Contains(text.ToLower()) && w.NotiMid == 8 ).ToList();
                currentPage = 1;
                StateHasChanged();
            }

        }

    }

    public async void onSubmitBroadcast()
    {
        isloading = true;

        NotificationT notifications = new NotificationT();
        notifications.NotiMId = notimId;
        notifications.Title = Title;
        notifications.Content = Content;
        await notificationService.AddNotiTransection(notifications);

        isloading = false;
        StateHasChanged();
        var result = await Swal.FireAsync("บันทึกข้อมูลสำเร็จ", null, SweetAlertIcon.Success);
        if (result.IsConfirmed)
        {
            Title = "";
            Content = "";
            await JsRuntime.InvokeVoidAsync("CloseModal", "#qr");
        }
        notiT = await notificationService.GetNotiT();
        notiTSearch = notiT.Where(w => w.NotiMid == 8).OrderByDescending(o => o.Id).ToList();
        StateHasChanged();
    }

    public void onClearData(){
        Title = "";
        Content = "";
    }

}

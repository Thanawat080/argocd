@page "/mamamenusubdetail"
@using sso.mms.helper.Utility
@using sso.mms.portal.admin.Services;
@using sso.mms.helper.Data;
@using AntDesign
@inject NavigationManager Navigation;
@inject ManageMentMenuService ManageMentMenuService;
@inject SweetAlertService Swal;

<style>
    :root {
        --mdc-theme-primary: #334396;
    }

    .form-control, .form-select {
        display: block;
        width: 100%;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: var(--bs-body-color);
        background-color: var(--bs-body-bg);
        background-clip: padding-box;
        border: var(--bs-border-width) solid #9e9e9e;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: var(--bs-border-radius-sm);
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        height: 3rem;
    }

    .swal2-container.swal2-center > .swal2-popup {
        grid-column: 2;
        grid-row: 2;
        align-self: center;
        justify-self: center;
        border-radius: 16px;
    }

    .swal2-title {
        position: relative;
        max-width: 100%;
        margin: 0;
        padding: 0.8em 1em 0;
        color: inherit;
        font-size: 1.875em;
        font-weight: 600;
        text-align: center;
        text-transform: none;
        word-wrap: break-word;
        color: #334396;
        font-family: Noto Sans Thai;
    }

    .swal2-styled.swal2-confirm {
        border: 0;
        color: #fff;
        font-size: 1em;
        border-radius: 4px;
        background: #334396;
        width: 150px;
    }

    @@media only screen and (min-width: 1000px) {
        .pm-xl {
            position: fixed;
            width: 100%;
            z-index: 1000;
        }
    }

    @@media only screen and (max-width: 1000px) {
        .position-class {
            position: relative
        }
    }

    @@media (min-width: 576px) {
        .modal-dialog {
            max-width: 800px;
            margin: 1.75rem auto;
        }
    }

    .mdc-table th {
        font-size: 1.143rem;
        color: #334396;
        border: 2px solid rgb(255 255 255);
        padding: 12px 12px 12px 24px;
        background: #FFCC41;
        font-family: 'Noto Sans Thai';
        font-style: normal;
        font-weight: 700;
        font-size: 18px;
        line-height: 27px;
        letter-spacing: 0.2px;
        color: #334396;
    }

    .mdc-table, .mdc-table--striped {
        width: 100%;
        max-width: 100%;
        background-color: transparent;
        border-collapse: collapse;
        border-spacing: 0;
        display: inline-block;
        overflow-x: auto;
        margin: 8px 0 32px;
        border: 0px solid rgba(0,0,0,.1);
        font-family: 'Noto Sans Thai';
        font-style: normal;
        font-weight: 500;
        font-size: 16px;
        align-items: center;
        color: #1A141F;
        border-radius: 10px;
    }

        .mdc-table td {
            border: 2px solid white;
            padding: 12px 12px 12px 24px;
        }

    tr.mdc-table-footer-row, tr.mdc-table-row {
        height: 48px;
        background: #a8a2ad17;
    }

    .mdc-table--striped tr:nth-of-type(odd) {
        background: #00000012;
    }

    .mdc-select__dropdown-icon {
        margin-left: 1px;
        margin-right: 1px;
        display: inline-flex;
        position: relative;
        align-self: center;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        pointer-events: none;
    }

    .mdc-select .mdc-select__anchor {
        height: 56px;
        display: flex;
        align-content: center;
        align-items: center;
    }

    .mat-paginator .mat-paginator-container .mat-paginator-page-size {
        display: flex;
        margin-right: 8px;
        align-items: center
    }

    .mat-paginator .mat-paginator-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        min-height: 56px;
        padding: 0 8px;
        flex-wrap: wrap-reverse;
    }

    .mdc-paginator-container {
        display: flex;
        justify-content: space-between;
        min-height: 56px;
        padding: 0 8px;
        flex-wrap: wrap-reverse;
        width: 100%;
        align-items: center;
    }

    .mdc-select:not(.mdc-select--disabled) .mdc-select__anchor {
        background-color: #ffffff;
        width: 80px;
        height: 30px;
        border-radius: 10px;
        border: 0px solid #D4D2D5;
    }

    .mdc-paginator-page-size {
        line-height: 0px;
        display: flex;
        align-items: center;
    }

    .mat-elevation-z5 {
        box-shadow: 0px 3px 0px -1px rgb(0 0 0 / 0%), 0px 5px 0px 0px rgb(0 0 0 / 0%), 0px 1px 0px 0px rgb(0 0 0 / 0%);
    }
</style>

<div class="container">
    <div class="MA-headder">
        <div class="MA-title p-3">
            จัดการเมนู
        </div>
    </div>
    <div class="MA-body">
        <div class="container">
            <br />
            <div class="w-100">
                <label class="form-label">ชื่อระบบ</label>
                <input type="text" id="firstName" class="form-control form-control-lg" @bind-value=@appdetail.Name />
            </div>
            <div class="w-100">
                <label class="form-label">URL</label>
                <input type="text" id="firstName" class="form-control form-control-lg" @bind-value=@appdetail.Url />
            </div>
            <div class="row radio-class mt-2">
                <div class="col-1 w-25 d-flex align-items-center"><p class="form-label">สถานะการใช้งาน :</p></div>
                <div class="col-3 d-flex align-items-center">
                    <div class="form-check w-50 check-d-flex">
                        <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault1" checked="@status1" @onchange="@(() => appdetail.IsStatus = 1)">
                        <label class="form-check-label radio-txt pt-1" for="flexRadioDefault1">
                            &nbsp; ใช่
                        </label>
                    </div>
                    <div class="form-check w-50 check-d-flex">
                        <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault2" checked="@status2" @onchange="@(() => appdetail.IsStatus = 0)">
                        <label class="form-check-label radio-txt pt-1" for="flexRadioDefault2">
                            &nbsp; ไม่ใช่
                        </label>
                    </div>
                </div>
            </div>
            <div class="py-4">
                <div class="d-flex justify-content-end align-content-center">
                    <div class="input-group w-50">
                        <input type="search" class="form-control" style="height: 48px;" placeholder="ข้อมูลที่ต้องการค้นหา" aria-label="Search" aria-describedby="search-addon" @bind-value=@text />
                        <button type="button" class="btn btn-outline-primary serch-bg" style="height: 48px;width:48px;" @onclick="@(() => SeachData())"><i class="fa-solid fa-magnifying-glass"></i></button>
                    </div>
                </div>
            </div>


            <MatTable 
                ShowPaging="false" 
                Items="@menulistForSearch" 
                LoadInitialData="true" 
                Striped="true" 
                RequestApiOnlyOnce="true" 
                AllowSelection="true" 
                RowClass="tester"
                DebounceMilliseconds="150" class="mat-elevation-z5" 
                PageSize="@pageSize"
                CurrentPage="@pageIndex">
                <MatTableHeader>
                    <th class="text-center" style="border-radius:10px 0 0 0;width:150px;">ลำดับ</th>
                    <th class="text-center" style="width:150px">รหัสเมนู</th>
                    <th class="text-center" style="width:750px">ชื่อเมนูย่อย</th>
                    <th class="text-center" style="width:250px;border-radius:0 10px 0 0 ;">สถานะ</th>

                </MatTableHeader>
                <MatTableRow>
                    <td style="max-width:150px">@String.Format("{0:d}", menulistForSearch.IndexOf(context) + 1)</td>
                    <td style="width:150px">@context.MenuCode</td>
                    <td style="width:750px">@context.MenuName</td>
                    <td class="text-center" style="width:250px">
                        @if (context.IsStatus == 1)
                        {
                            <a style="color:#67C23A">กำลังใช้งาน</a>
                        }
                        else
                        {
                            <a style="color:#F90909;">ไม่ใช้งาน</a>
                        }
                    </td>
                </MatTableRow>
            </MatTable>
            <div class="paginator-size">
                <AntDesign.Pagination  ShowSizeChanger
                                       OnShowSizeChange="OnShowSizeChange"
                                       OnChange="OnPage"
                                       DefaultCurrent="3"
                                       PageSize=@pageSize
                                       Total="@menulistForSearch.Count()" />
                 <div class="d-flex justify-content-end align-content-center pt-4 pb-4">
                     <button class="btn btn-primary btn-save" @onclick="()=>goMsubdetail(0)">
                         <div class="txt-btn-save">
                             <i class="fa-regular fa-floppy-disk"></i>&nbsp; บันทึก
                         </div>
                     </button>
                 </div>
             </div>
         </div>
     </div>
 </div>

 @if (DialogIsOpen)
{
    <ModalSaveChange OnClose="@OnDialogClose" title="ยืนยันการบันทึกข้อมูลใช่หรือไม่" description="">
    </ModalSaveChange>
}
@if (isloading == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}

@code {
    public bool isloading = false;
    private bool DialogIsOpen = false;
    [Parameter]
    [SupplyParameterFromQuery(Name = "token")]
    public string? shortToken { get; set; } = "";
    RoleAppM appdetail = new RoleAppM();
    [Parameter]
    public EventCallback<int> Callback { get; set; }

    [Parameter]
    public string AppCode { get; set; }


    [Parameter]
    public int AppId { get; set; }


    public bool status1 { get; set; } = false;
    public bool status2 { get; set; } = false;
    public int statusforsend { get; set; }
    public string url { get; set; }
    public string name { get; set; }
    public string text { get; set; } = "";

    public class Todo
    {
        public int UserId { get; set; }
        public int Id { get; set; }
        public string Title { get; set; }
        public bool Completed { get; set; }

        public Todo()
        {
        }
    }

    Todo[] todos;

    List<RoleMenuM> menulist1 = new List<RoleMenuM>();
    List<RoleMenuM> menulistForSearch = new List<RoleMenuM>();

    int pageSize = 5;
    int pageIndex = 1;

    void OnPage(PaginationEventArgs e)
    {

        Console.WriteLine(e);
        pageSize = e.PageSize;
        pageIndex = e.Page;
    }


    private void OnShowSizeChange(PaginationEventArgs args)
    {
        var (current, pageSize) = args;
        Console.WriteLine($"{current}, {pageSize}");
    }


    protected override async Task OnInitializedAsync()
    {
        isloading = true;
        menulist1 = await ManageMentMenuService.GetManageMentmenuEdit(AppCode);
        menulistForSearch = menulist1;
        appdetail = await ManageMentMenuService.GetAppById(AppId);

        if (appdetail.IsStatus == 1)
        {
            status1 = true;
        }
        else
        {
            status2 = true;
        }
        isloading = false;

        StateHasChanged();


    }
    public async void SeachData()

    {
        menulistForSearch = menulist1.Where(x => x.MenuName.ToLower().Contains(text.ToLower())).ToList();
        if (menulistForSearch.Count == 0)
        {
            await Swal.FireAsync(
                      "ไม่พบข้อมูล",
                      null,
                      SweetAlertIcon.Warning
             );
            menulistForSearch = menulist1;
        }

        StateHasChanged();
    }

    public async void goMsubdetail(int id)
    {
        DialogIsOpen = true;
        StateHasChanged();

    }
    private async Task OnDialogClose(bool isOk)
    {
        if (isOk)
        {
            isloading = true;
            var res = await ManageMentMenuService.UpdateApp(appdetail);
            if (res == "success")
            {
                isloading = false;
                StateHasChanged();
                await Swal.FireAsync(
                    "บันทึกสำเร็จ",
                    null,
                    SweetAlertIcon.Success
                    );

                await this.Callback.InvokeAsync(0);
            }
            else
            {
                isloading = false;
                StateHasChanged();
                await Swal.FireAsync(
                    "บันทึกไม่สำเร็จ",
                    null,
                    SweetAlertIcon.Error
                    );
                await this.Callback.InvokeAsync(0);
            }
        }
        DialogIsOpen = false;
    }
}

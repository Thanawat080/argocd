@page "/HospitalChatList"

@using System.Globalization;
@using sso.mms.chat.Models.ChatUserDetailList
@using sso.mms.chat.ViewModels;
@using sso.mms.helper.PortalModel;
<style>
        :root {
        --mdc-theme-primary: #334396;
    }

    .form-control, .form-select {
        display: block;
        width: 100%;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: var(--bs-body-color);
        background-color: var(--bs-body-bg);
        background-clip: padding-box;
        border: var(--bs-border-width) solid #9e9e9e;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: var(--bs-border-radius-sm);
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        height: 3rem;
    }

    .image-icon-user {
        width: 64px;
        height: 64px;
        border-radius: 50%;
    }

    .list-group-item .active {
        background: #C5CBE6 45%;
        color: #334396;
        border: none;
    }

    .user-font {
        font-family: Noto Sans Thai;
        font-style: normal;
        font-weight: 600;
        font-size: 20px;
        line-height: 144%;
        color: #334396;
    }

    .txt-detail {
        font-family: 'Noto Sans Thai';
        font-style: normal;
        font-weight: 400;
        font-size: 18px;
        line-height: 144%;
        color: #909399;
    }

    .txt-subdetail {
        font-family: 'Noto Sans Thai';
        font-style: normal;
        font-weight: 400;
        font-size: 12px;
        line-height: 144%;
        color: #909399;
    }

    .list-group-item.active {
        background: #C5CBE6 45%;
        color: #334396;
        border: none;
        border-right-style: solid;
        border-right-color: #334396;
        border-right-width: 8px;
    }
</style>

@if (searchChatRoomMList != null)
{
    @foreach (var item in searchChatRoomMList)
    {

        <div class="my-2" id="list-tab" role="tablist">
            <div class="py-4 list-group-item  @(selectedItem == item ? "active" : "")" id="list-profile-list" data-bs-toggle="list"
         href="#list-profile" role="tab" aria-controls="list-profile" @onclick="() => OnClickHospitalItem(item)">
                <div class="row">
                    @*<div class="col-3">
            <img src="@item.ImagePath" style="width:64px;height:64px;" />
            </div>*@
                    <div class="col">
                        <div class="d-flex w-100 justify-content-between px-4">
                            <h5 class="mb-1 user-font">@item.Name</h5>
                        </div>
                        <div class="row">
                            <div class="col">
                                <p class="mb-1 txt-detail">@item.IsStatus</p>
                            </div>
                            <div class="col-7">
                                @* <ul class="txt-subdetail" style="float:right;">@DateTime.Now.ToString("d MMMM yyyy", new CultureInfo("th-TH"))</ul> *@
                                <ul class="txt-subdetail" style="float:right;">
                                   
                                    @if (item.ChatRooms.Count > 0)
                                    {
                                        if (item.ChatRooms.FirstOrDefault().ChatTs.Count > 0)
                                        {
                                            var date = item.ChatRooms.FirstOrDefault().ChatTs.OrderByDescending(o => o.CreateDate).FirstOrDefault().CreateDate;
                                            @date?.ToString("d MMMM yyyy", new CultureInfo("th-TH"))
                                        }
                                       @*  var date = item.ChatRooms.FirstOrDefault().ChatTs.OrderByDescending(o => o.CreateDate).FirstOrDefault().CreateDate;
                                 
                                        @date?.ToString("d MMMM yyyy", new CultureInfo("th-TH")) *@
                                    }

                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    }
}



@code {
    [Parameter]
    public List<ChatRoomMListModel> ChatRoomMList { get; set; }

    [Parameter]
    public List<ChatRoomMListModel> searchChatRoomMList { get; set; }

    [Parameter]
    public EventCallback<List<HospitalMListModel>> OnGetHospitalData { get; set; }


    [Parameter]
    public EventCallback<string> OnGetChatRoomMTitle { get; set; }

    private ChatRoomMListModel selectedItem;


    async void OnClickHospitalItem(ChatRoomMListModel item)
    {
        List<HospitalMListModel> HospitalMList = new List<HospitalMListModel>();

        foreach (var chatrooms in item.ChatRooms)
        {
            HospitalMList.Add(new HospitalMListModel
                {
                    RoomId = chatrooms.Id,
                    Code = chatrooms.HospitalM.Code,
                    Name = chatrooms.HospitalM.Name,
                    IsActive = chatrooms.HospitalM.IsActive,
                    IsStatus = chatrooms.HospitalM.IsStatus,
                    ImagePath = chatrooms.HospitalM.ImagePath,
                    CreateDate = chatrooms.HospitalM.CreateDate,
                    CreateBy = chatrooms.HospitalM.CreateBy,
                    UpdateDate = chatrooms.HospitalM.UpdateDate,
                    UpdateBy = chatrooms.HospitalM.UpdateBy
                });
        }

        if (selectedItem == item)
        {
            selectedItem = null;
        }
        else
        {
            selectedItem = item;
        }


        await OnGetChatRoomMTitle.InvokeAsync(item.Name);
        await OnGetHospitalData.InvokeAsync(HospitalMList);
    }

}

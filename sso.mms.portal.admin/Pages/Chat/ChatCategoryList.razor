@page "/hospitalcategory"
@using sso.mms.chat.Models
@using sso.mms.chat.Services;
@using sso.mms.chat.ViewModels;
@using sso.mms.helper.PortalModel;
@inject ChatRoomService ChatRoomService;
@inject ChatService ChatService;


<style>
    :root {
        --mdc-theme-primary: #334396;
    }

    .form-control, .form-select {
        display: block;
        width: 100%;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: var(--bs-body-color);
        background-color: var(--bs-body-bg);
        background-clip: padding-box;
        border: var(--bs-border-width) solid #9e9e9e;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: var(--bs-border-radius-sm);
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        height: 3rem;
    }

    .windowws-chat-s1 {
        background: #FFFFFF;
        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);
        border-radius: 10px 10px 0px 0px;
        height: 141px;
        padding-bottom: 2px;
    }

    .windowws-chat-s2 {
        background: #FFFFFF;
        border-radius: 0px 0px 8px 8px;
        height: 678px;
        margin-top: 5px;
        overflow-y: scroll;
    }

    .scrollbar {
        /* margin-left: 30px; */
        float: left;
        height: 650px;
        width: 100%;
        background: #fff;
        overflow-y: scroll;
        margin-bottom: 25px;
    }

    .force-overflow {
        min-height: 0px;
    }

    .scrollbar-primary::-webkit-scrollbar {
        width: 12px;
        background-color: #F5F5F5;
    }

    .scrollbar-primary::-webkit-scrollbar-thumb {
        border-radius: 10px;
        -webkit-box-shadow: inset 0 0 6px rgb(255 255 255 / 0%);
        background-color: #ffffff;
    }

    .scrollbar-primary::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 0px rgb(0 0 0 / 0%);
        background-color: #ffffff;
        border-radius: 10px;
    }

    .btn-message {
        width: 3.188rem;
        height: 3.188rem;
        background: #C5CBE6;
        border-radius: 8px;
        border: 0px;
    }

    .input-message {
        height: 3.188rem;
        border: 1px solid #D4D2D5;
    }

    .fa-solid {
        color: #334396;
    }

    .row {
        --bs-gutter-x: 1.5rem;
        --bs-gutter-y: 0;
        display: flex;
        flex-wrap: wrap;
        margin-top: calc(var(--bs-gutter-y) * -1);
        margin-right: calc(var(--bs-gutter-x) * -.5);
        margin-left: calc(var(--bs-gutter-x) * -.5);
        justify-content: center;
        align-items: center;
    }

    .today-date {
        color: #909399;
    }

    .card-chat-u {
        background: #FFCC41;
        border-radius: 16px;
        max-width: 55%;
    }

    .card-chat-au {
        background: #D4D2D5;
        border-radius: 16px;
        max-width: 55%;
    }

    .scrollbar {
        /* margin-left: 30px; */
        float: left;
        height: 650px;
        width: 100%;
        background: #fff;
        overflow-y: scroll;
        margin-bottom: 25px;
    }

    .force-overflow {
        min-height: 0px;
    }

    .scrollbar-primary::-webkit-scrollbar {
        width: 12px;
        background-color: #F5F5F5;
    }

    .scrollbar-primary::-webkit-scrollbar-thumb {
        border-radius: 10px;
        -webkit-box-shadow: inset 0 0 6px rgb(255 255 255 / 0%);
        background-color: #ffffff;
    }

    .scrollbar-primary::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 0px rgb(0 0 0 / 0%);
        background-color: #ffffff;
        border-radius: 10px;
    }

    .btn-message {
        width: 3.188rem;
        height: 3.188rem;
        background: #C5CBE6;
        border-radius: 8px;
        border: 0px;
    }

    .input-message {
        height: 3.188rem;
        border: 1px solid #D4D2D5;
    }

    .fa-solid {
        color: #334396;
    }

    .row {
        --bs-gutter-x: 1.5rem;
        --bs-gutter-y: 0;
        display: flex;
        flex-wrap: wrap;
        margin-top: calc(var(--bs-gutter-y) * -1);
        margin-right: calc(var(--bs-gutter-x) * -.5);
        margin-left: calc(var(--bs-gutter-x) * -.5);
        justify-content: center;
        align-items: center;
    }

    .today-date {
        color: #909399;
    }

    .card-chat-u {
        background: #FFCC41;
        border-radius: 16px;
        max-width: 55%;
    }

    .card-chat-au {
        background: #D4D2D5;
        border-radius: 16px;
        max-width: 55%;
    }

    .list-group-item {
        position: relative;
        display: block;
        padding: 0.5rem 1rem;
        color: #212529;
        text-decoration: none;
        background-color: #fff;
        border: 0px solid rgba(0,0,0,.125);
    }

    .noti-box {
        width: 27px;
        height: 27px;
        left: 1308px;
        top: 410px;
        background: #F56C6C;
        border-radius: 15px;
    }

    .windowws-chat-s2::-webkit-scrollbar {
        display: none;
    }
</style>
<div class="windowws-chat-s1">
    <div class="row">
        <div class="col-sm-9">
            <div class="px-4 py-2 mt-4">
                <div class="d-flex w-100 justify-content-between">

                    <h5 class="mb-1 user-font">@ChatRoomMTitle</h5>

                </div>
                <div class="col">
                    <p class="mb-1 txt-detail"></p>
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            @*<div class="float-end" style="margin-right:24px;" @onclick=rollback>
            <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M11.56 19.1067L19.1067 11.56M19.1067 19.1067L11.56 11.56M15.3333 28.6667C22.6667 28.6667 28.6667 22.6667 28.6667 15.3333C28.6667 8 22.6667 2 15.3333 2C8 2 2 8 2 15.3333C2 22.6667 8 28.6667 15.3333 28.6667Z" stroke="#224183" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round" />
            </svg>
            </div>*@
        </div>
    </div>
</div>

<div class="windowws-chat-s2">
    <div class="container pt-3">

        @if (HospitalMList != null)
        {
            @foreach (var item in HospitalMList)
            {
                <div class="list-group-item list-group-item-action" id="list-profile-list"
                     data-bs-toggle="list" href="#list-profile" role="tab" aria-controls="list-profile" @onclick="() => OnClickChatRoom(item)">
                    <div class="row">
                        <div class="col-2">

                            <img src="@item.ImagePath" style="width:64px;height:64px;" />
                        </div>
                        <div class="col-9">
                            <div class="d-flex w-100 justify-content-between">

                                <h5 class="mb-1 user-font">
                                    @item.Name
                                </h5>
                            </div>
                            <div class="row">
                                <div class="col" style="display: flex;align-items: baseline;">
                                    @*<p class="mb-1 txt-detail">@item.StatusChat</p>&nbsp;<p class="txt-subdetail">13.42 น. 12 เม.ย. 66</p>*@
                                </div>
                            </div>
                        </div>
                        <div class="col-1">
                            @if(chat != null){
                            @if (chat.Where(w => w.ChatLogs.Count() != 0 && w.ChatRoomId == item.RoomId).Count() != 0)
                            {
                                <div class="noti-box d-flex justify-content-center ">
                                    <p style="color:white;padding-top: 2px;">
                                        @(getcount(item.RoomId))
                                    </p>
                                </div>
                            }
                            }
                        </div>
                    </div>
                </div>
                <hr style="border: 1px solid #DDDDDD;" />
            }
        }

    </div>
</div>

@code {


    [Parameter]
    public List<HospitalMListModel> HospitalMList { get; set; } = null;

    [Parameter]
    public string ChatRoomMTitle { get; set; }

    [Parameter]
    public EventCallback<int> OnGetChatRoomById { get; set; }

    [Parameter]
    public EventCallback<string> OnGetHospitalTitle { get; set; }

    private List<ChatT>? chat = new List<ChatT>();
    private List<ChatLog>? chatlog = new List<ChatLog>();

    public async void OnClickChatRoom(HospitalMListModel item)
    {
        var chatdata = chat.Where(w => w.ChatLogs.Any(cl => cl.IsStatus == 1) && w.ChatRoomId == item.RoomId).ToList();
        if (chatdata.Count !=0)
        {
            foreach (var chatTitem in chatdata)
            {
                foreach (var chatloglist in chatTitem.ChatLogs)
                {
                    if(chatloglist != null){
                        chatlog.Add(chatloglist);
                    }

                }

            }
            // Console.WriteLine(chatlog);
            var response = await ChatService.UpdateChatRead(chatlog);
            if (response == "Ok")
            {
                Console.WriteLine("สำเร็จ : " + response);
            }else{
                Console.WriteLine("ล้มเหลวสำเร็จ : " + response);
            }
        }


        OnGetHospitalTitle.InvokeAsync(item.Name);
        OnGetChatRoomById.InvokeAsync(item.RoomId);
    }

    protected override async Task OnInitializedAsync()
    {
        chat = await ChatService.GetChat();


        StateHasChanged();
    }


    private int? getcount(int roomid)
    {
        var result = chat.Where(w => w.ChatLogs.Count() != 0 && w.ChatRoomId == roomid).ToList();
        if (result.Count != 0)
        {
            return result.Where(w => w.ChatLogs.Count() != 0).Count();
            StateHasChanged();
        }
        return null;
        StateHasChanged();
    }
}

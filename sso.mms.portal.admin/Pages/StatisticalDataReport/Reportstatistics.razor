@page "/StatisticalDataReport"

@using MatBlazor
@using sso.mms.portal.admin.Pages.Navbar
@using sso.mms.helper.Utility
@using sso.mms.helper.Configs;
@using sso.mms.helper.Components.Footer;
@using sso.mms.helper.Data;
@using sso.mms.portal.admin.Services;
@using Blazored.LocalStorage;
@using sso.mms.login.Services;
@using sso.mms.helper.PortalModel;



@inject NavigationManager NavigationManager
@inject AdminService AdminService
@inject ILocalStorageService localStorage
@inject UserRoleService userRoleService

<style>
    :root {
        --mdc-theme-primary: #334396;
    }

    .form-control, .form-select {
        display: block;
        width: 100%;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: var(--bs-body-color);
        background-color: var(--bs-body-bg);
        background-clip: padding-box;
        border: var(--bs-border-width) solid #9e9e9e;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: var(--bs-border-radius-sm);
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        height: 3rem;
    }

    @@media only screen and (min-width: 1000px) {
        .pm-xl {
            position: fixed;
            width: 100%;
            z-index: 1000;
        }
    }

    @@media only screen and (max-width: 1000px) {
        .position-class {
            position: relative
        }
    }

    .mdc-table th {
        font-size: 1.143rem;
        color: #334396;
        border: 2px solid rgb(255 255 255);
        padding: 12px 12px 12px 24px;
        background: #FFCC41;
        font-family: 'Noto Sans Thai';
        font-style: normal;
        font-weight: 700;
        font-size: 18px;
        line-height: 27px;
        letter-spacing: 0.2px;
        color: #334396;
    }

    .mdc-table, .mdc-table--striped {
        width: 100%;
        max-width: 100%;
        background-color: transparent;
        border-collapse: collapse;
        border-spacing: 0;
        display: inline-block;
        overflow-x: auto;
        margin: 8px 0 32px;
        border: 0px solid rgba(0,0,0,.1);
        font-family: 'Noto Sans Thai';
        font-style: normal;
        font-weight: 500;
        font-size: 16px;
        align-items: center;
        color: #1A141F;
        border-radius: 10px;
    }

    tr.mdc-table-footer-row, tr.mdc-table-row {
        height: 48px;
        background: #a8a2ad17;
    }

    .mdc-table--striped tr:nth-of-type(odd) {
        background: #00000012;
    }

    .mdc-table td {
        border: 2px solid white;
        padding: 12px 12px 12px 24px;
    }

    .mdc-select__dropdown-icon {
        margin-left: 1px;
        margin-right: 1px;
        display: inline-flex;
        position: relative;
        align-self: center;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        pointer-events: none;
    }

    .mdc-select .mdc-select__anchor {
        height: 56px;
        display: flex;
        align-content: center;
        align-items: center;
    }

    .mat-paginator .mat-paginator-container .mat-paginator-page-size {
        display: flex;
        margin-right: 8px;
        align-items: center
    }

    .mat-paginator .mat-paginator-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        min-height: 56px;
        padding: 0 8px;
        flex-wrap: wrap-reverse;
    }

    .mdc-paginator-container {
        display: flex;
        justify-content: space-between;
        min-height: 56px;
        padding: 0 8px;
        flex-wrap: wrap-reverse;
        width: 100%;
        align-items: center;
    }

    .mdc-select:not(.mdc-select--disabled) .mdc-select__anchor {
        background-color: #ffffff;
        width: 80px;
        height: 30px;
        border-radius: 10px;
        border: 0px solid #D4D2D5;
    }

    .mdc-paginator-page-size {
        line-height: 0px;
        display: flex;
        align-items: center;
    }

    .mat-elevation-z5 {
        box-shadow: 0px 3px 0px -1px rgb(0 0 0 / 0%), 0px 5px 0px 0px rgb(0 0 0 / 0%), 0px 1px 0px 0px rgb(0 0 0 / 0%);
    }
</style>

<NavbarLoginAdmin ShortToken=@shortToken PageCode="DSP1101"></NavbarLoginAdmin>

<MediaStyle></MediaStyle>

<div class="container mt-4 pt-4">
    <div class="card-body-main">
        <div class="card-head d-flex justify-content-start p-4">
            <div class="header-txt">รายงานข้อมูลเชิงสถิติ</div>
        </div>
        <div class="container p-4">
            <div class="d-flex justify-content-end py-4">
                <div class="input-group" style="width:375px;">
                    <input type="search" class="form-control" style="height: 48px;" placeholder="ข้อมูลที่ต้องการค้นหา" aria-label="Search" aria-describedby="search-addon" @bind-value=@text />
                    <button type="button" class="btn btn-outline-primary serch-bg" style="height: 48px;width:48px;" @onclick=@search><i class="fa-solid fa-magnifying-glass"></i></button>
                </div>
            </div>
            <MatTable ShowPaging="false" Items="@filmenulist" LoadInitialData="true" Striped="true" RequestApiOnlyOnce="true" AllowSelection="true" RowClass="tester"
                      @bind-CurrentPage="@currentPage" DebounceMilliseconds="150" PageSize="10" class="mat-elevation-z5">
                <MatTableHeader>
                    <th class="text-center" style="border-radius:10px 0 0 0;width:150px;">ลำดับ</th>
                    <th class="text-center" style="width:950px">หัวข้อรายงาน</th>
                    <th class="text-center" style="width:150px;border-radius:0 10px 0 0 ;">สถานะ</th>

                </MatTableHeader>
                <MatTableRow>
                    <td class="text-center" style="max-width:150px">@(filmenulist.IndexOf(context) + 1)</td>
                    <td style="width:950px">@context.Name</td>
                    <td class="text-center" style="width:150px">
                        @if (permit.isRoleRead == true)
                        {
                            <img src="helper_shared/PortalAdminImage/eye.png" data-bs-placement="bottom" title="ดู" style="width:32px;height:32px;" />
                            @*   @onclick="()=>goMsubdetail(context.Name)"  *@
                        }

                    </td>

                </MatTableRow>
            </MatTable>
            <div class="d-flex justify-content-end align-items-center">
                <button @onclick="GoToMainmenu" class="btn btn-secondary btn-bo-main px-4 p-2">
                    <i class="fa-solid fa-circle-chevron-left"></i>&nbsp; ย้อนกลับ
                </button>
            </div>
        </div>
    </div>
</div>
@if (isloadding == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}
<div class="pt-5">
    <Footer></Footer>
</div>
@code {
    public int currentPage = 1;
    public bool isloadding = false;
    [Parameter]
    [SupplyParameterFromQuery(Name = "token")]
    public string? shortToken { get; set; } = "";

    public string? url;
    public string? prefix = "";

    [Parameter]
    public EventCallback<int> Callback { get; set; }

    public UserRole userRole;
    public MenuPerMit permit = new MenuPerMit();
    public string text { get; set; } = "";
    List<Models> filmenulist = new List<Models>();

    public class Models
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string url { get; set; }
        public int status { get; set; }
    }

    List<Models> menulist = new List<Models>()
    {
            new Models() {
               Id = 1,
               Name = "จำนวนการใช้บริการทางการแพทย์ของผู้ประกันตน",
            },
             new Models() {
                Id = 2,
                Name = "จำนวนและอัตราการใช้บริการทางการแพทย์ของผู้ประกันตน",
            },
            new Models() {
               Id = 3,
               Name = "จำนวนการใช้บริการทางการแพทย์ประเภท ผู้ป่วยใน แยกตามอายุ และ เพศ",
            },
            new Models() {
               Id = 4,
               Name = "จำนวนการใช้บริการทางการแพทย์ประเภท ผู้ป่วยใน แยกตามโรงพยาบาลหลัก อายุ และ เพศ",
            },
            new Models() {
               Id = 5,
               Name = "จำนวนการใช้บริการทางการแพทย์ประเภท ผู้ป่วยนอก แยกตามอายุ และ เพศ",
            },
             new Models() {
                Id = 6,
                Name = "จำนวนการใช้บริการทางการแพทย์ประเภท ผู้ป่วยนอก แยกตามโรงพยาบาลหลัก อายุ และ เพศ",
            },
            new Models() {
               Id = 7,
               Name = "จำนวนการใช้บริการทางการแพทย์ประเภทผู้ป่วยนอก ที่มารักษาด้วย 1 โรค",
            },
            new Models() {
               Id = 8,
               Name = "จำนวนการใช้บริการทางการแพทย์ประเภท ตามโรคหลัก จัดกลุ่มตามรหัส ICD10  3 หลักแรก",
            },
             new Models() {
               Id = 9,
               Name = "จำนวนการใช้บริการทางการแพทย์ประเภท ตามโรคหลัก",
            },
            new Models() {
               Id = 10,
               Name = "ข้อมูลการใช้บริการทางการแพทย์ประเภท",
            },
    };

    public string? env = ConfigureCore.ConfigENV;

    protected override async Task OnInitializedAsync()
    {

        prefix = ConfigureCore.redirectsPortalAdmin;

        userRole = await localStorage.GetItemAsync<UserRole>("userRole");
        if (userRole != null && userRole.role != null)
        {
            try
            {
                permit = await userRoleService.GetUserAuth(userRole, "PSMSW012", "PORTAL-SSO");
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }
        }

        filmenulist = menulist;

    }
    // public void goMsubdetail(string Name)
    // {
    //     switch (Name)
    //     {
    //         //case "รายงาน Log การ Download เอกสาร":
    //         //    NavigationManager.NavigateTo(prefix + "/phase2admin" + $"?token={shortToken}&Name={Name}");
    //         //    break;
    //         // case "รายงานข้อมูลสถิติการใช้งานการยืนยันตัวตนผ่านระบบ":
    //         //     NavigationManager.NavigateTo(prefix + "reportstatistics" + $"?token={shortToken}&Name={Name}");
    //         //     break;
    //         //case "รายงานประวัติการปรับปรุงข้อมูลที่ให้บริการ":
    //         //    NavigationManager.NavigateTo(prefix + "/phase2admin" + $"?token={shortToken}&Name={Name}");
    //         //    break;
    //         //case "รายงานประวัติการเรียกใช้ข้อมูล จำแนกตามประเภทข้อมูล ปี เดือน วัน":
    //         //    NavigationManager.NavigateTo(prefix + "/phase2admin" + $"?token={shortToken}&Name={Name}");
    //         //    break;
    //         default:
    //             NavigationManager.NavigateTo("/");
    //             break;
    //     }
    // }
    public void GoToMainmenu()
    {
        NavigationManager.NavigateTo(prefix + "mainmenu" + $"?token={shortToken}");
    }

    public async void search()
    {
        isloadding = true;
        filmenulist = menulist.Where(x => x.Name.ToLower().Contains(text.ToLower())).ToList();
        currentPage = 1;
        StateHasChanged();
        isloadding = false;

    }
}

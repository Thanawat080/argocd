@page "/nnnounce"
@using sso.mms.helper.ViewModels;
@using AntDesign

@using sso.mms.helper.Components.Footer
@using sso.mms.helper.Configs;
@using sso.mms.helper.Utility
@using sso.mms.portal.admin.Pages.Navbar
@using sso.mms.portal.admin.Services;
@using sso.mms.helper.PortalModel;

@inject AnnounceService AnnounceService;
@inject NavigationManager Navigation
@inject SweetAlertService Swal;

<style>
    :root {
        --mdc-theme-primary: #334396;
    }

    .form-control, .form-select {
        display: block;
        width: 100%;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: var(--bs-body-color);
        background-color: var(--bs-body-bg);
        background-clip: padding-box;
        border: var(--bs-border-width) solid #9e9e9e;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: var(--bs-border-radius-sm);
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        height: 3rem;
    }

    .swal2-container.swal2-center > .swal2-popup {
        grid-column: 2;
        grid-row: 2;
        align-self: center;
        justify-self: center;
        border-radius: 16px;
    }

    .swal2-title {
        position: relative;
        max-width: 100%;
        margin: 0;
        padding: 0.8em 1em 0;
        color: inherit;
        font-size: 1.875em;
        font-weight: 600;
        text-align: center;
        text-transform: none;
        word-wrap: break-word;
        color: #334396;
        font-family: Noto Sans Thai;
    }

    .swal2-styled.swal2-confirm {
        border: 0;
        color: #fff;
        font-size: 1em;
        border-radius: 4px;
        background: #334396;
        width: 150px;
    }

    @@media only screen and (min-width: 1000px) {
        .pm-xl {
            position: fixed;
            width: 100%;
            z-index: 1000;
        }
    }

    @@media only screen and (max-width: 1000px) {
        .position-class {
            position: relative
        }
    }

    @@media (min-width: 576px) {
        .modal-dialog {
            max-width: 800px;
            margin: 1.75rem auto;
        }
    }

    .mdc-table th {
        font-size: 1.143rem;
        color: #334396;
        border: 2px solid rgb(255 255 255);
        padding: 12px 12px 12px 24px;
        background: #FFCC41;
        font-family: 'Noto Sans Thai';
        font-style: normal;
        font-weight: 700;
        font-size: 18px;
        line-height: 27px;
        letter-spacing: 0.2px;
        color: #334396;
    }

    .mdc-table, .mdc-table--striped {
        width: 100%;
        max-width: 100%;
        background-color: transparent;
        border-collapse: collapse;
        border-spacing: 0;
        display: inline-block;
        overflow-x: auto;
        margin: 8px 0 32px;
        border: 0px solid rgba(0,0,0,.1);
        font-family: 'Noto Sans Thai';
        font-style: normal;
        font-weight: 500;
        font-size: 16px;
        align-items: center;
        color: #1A141F;
        border-radius: 10px;
    }

        .mdc-table td {
            border: 2px solid white;
            padding: 12px 12px 12px 24px;
        }

    tr.mdc-table-footer-row, tr.mdc-table-row {
        height: 48px;
        background: #a8a2ad17;
    }

    .mdc-table--striped tr:nth-of-type(odd) {
        background: #00000012;
    }

    .mdc-select__dropdown-icon {
        margin-left: 1px;
        margin-right: 1px;
        display: inline-flex;
        position: relative;
        align-self: center;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        pointer-events: none;
    }

    .mdc-select .mdc-select__anchor {
        height: 56px;
        display: flex;
        align-content: center;
        align-items: center;
    }

    .mat-paginator .mat-paginator-container .mat-paginator-page-size {
        display: flex;
        margin-right: 8px;
        align-items: center
    }

    .mat-paginator .mat-paginator-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        min-height: 56px;
        padding: 0 8px;
        flex-wrap: wrap-reverse;
    }

    .mdc-paginator-container {
        display: flex;
        justify-content: space-between;
        min-height: 56px;
        padding: 0 8px;
        flex-wrap: wrap-reverse;
        width: 100%;
        align-items: center;
    }

    .mdc-select:not(.mdc-select--disabled) .mdc-select__anchor {
        background-color: #ffffff;
        width: 80px;
        height: 30px;
        border-radius: 10px;
        border: 0px solid #D4D2D5;
    }

    .mdc-paginator-page-size {
        line-height: 0px;
    }

    .mat-elevation-z5 {
        box-shadow: 0px 3px 0px -1px rgb(0 0 0 / 0%), 0px 5px 0px 0px rgb(0 0 0 / 0%), 0px 1px 0px 0px rgb(0 0 0 / 0%);
    }

    .form-check-input:checked {
        background-color: #67C23A;
        border-color: #67C23A;
    }

    .form-switch .form-check-input {
        width: 2.5em;
        height: 1.2rem;
    }

    .form-check-input:focus {
        border-color: #ffffff;
        outline: 0;
        box-shadow: 0 0 0 0.25rem rgb(103 194 58 / 52%);
    }
</style>


<NavbarLoginAdmin ShortToken=@shortToken PageCode="@codeName"></NavbarLoginAdmin>

<MediaStyle></MediaStyle>



<div class="container mt-5 mb-4">
    <div class="bordcase-body">
        <div class="p-4" style="min-height: 750px;">
            <p class="txt-title mt-4"> ประกาศ </p>
            <div class="d-flex justify-content-between">
                <div class="btn btn-primary btn-add-data txt-add-data" style="width:150px;" @onclick=@(()=>GoAddNnonce(3))>
                    <i class="fa-solid fa-circle-plus"></i>&nbsp; เพิ่ม
                </div>
                <div class="input-group w-25">
                    <input type="search" class="form-control" style="height: 48px;" placeholder="ข้อมูลที่ต้องการค้นหา" @bind=@text aria-label="Search" aria-describedby="search-addon" />
                    <button type="button" class="btn btn-outline-primary serch-bg" style="height: 48px;width:48px;" @onclick=SearchText><i class="fa-solid fa-magnifying-glass"></i></button>
                </div>
            </div>

            <MatTable 
                ShowPaging="false" 
                Items="@AnnounceSearch" 
                LoadInitialData="true" 
                Striped="true" 
                RequestApiOnlyOnce="true" 
                AllowSelection="true" 
                RowClass="tester"
                PageSize="@pageSize"
            @bind-CurrentPage="@currentPage" DebounceMilliseconds="150" class="mat-elevation-z5">
                <MatTableHeader>
                    <th class="text-center" style="border-radius:10px 0 0 0;width:72px">ลำดับ</th>
                    <th class="text-center" style="width:380px">หัวข้อ</th>
                    <th class="text-center" style="width:250px">วันที่เริ่มต้นประกาศ</th>
                    <th class="text-center" style="width:250px">วันที่สิ้นสุดประกาศ</th>
                    <th class="text-center" style="width:200px">สถานะประกาศ</th>
                    <th class="text-center" style="border-radius:0 10px 0 0 ; width:120px;"></th>
                </MatTableHeader>
                <MatTableRow>
                    <td style="max-width:72px">@(AnnounceSearch.IndexOf(context) + 1)</td>
                    <td style="width:380px">@context.Title</td>
                    <td style="width:250px">@context.StartDate?.ToString("dd/MM/yyyy")</td>
                    <td style="width:250px">@context.EndDate?.ToString("dd/MM/yyyy")</td>
                    <td style="width:200px">
                        @if (@context.ActiveStatus == true)
                        {
                            <div style="color:#59AD46">กำลังลงประกาศ</div>
                        }
                        else
                        {
                            <div style="color:#D94827">สิ้นสุด</div>
                        }
                    </td>
                    <td style="width:120px">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="d-flex justify-content-center align-content-center">
                                <img @onclick="@(()=>Goforwatch(context.Id, 1))" src="helper_shared/PortalAdminImage/eye.png" title="ดู" style="margin-right: 0.5rem" />
                            </div>
                            <img @onclick="@(()=>GoEditNnounce(context.Id, 2))" src="helper_shared/icon_sso/save.png" title="แก้ไข" style="width:32px;height:32px; margin-right: 0.5rem;" />
                            @*<img @onclick="@(()=>Goforwatch(context.Id))" src="helper_shared/PortalAdminImage/eye.png" />*@
                        </div>
                    </td>
                </MatTableRow>
            </MatTable>
            <div class="row">
                <AntDesign.Pagination ShowSizeChanger
                                       OnShowSizeChange="@OnShowSizeChange"
                                       OnChange="@OnPage"
                                       DefaultCurrent="3"
                                       PageSize=@pageSize
                                       Total="@AnnounceSearch.Count()" />
             </div>



             <div class="d-flex justify-content-end align-content-end align-items-center py-4 mt-2">
                 <button @onclick="GoToMainmenu" class="btn btn-secondary btn-bo-main px-4 p-2">
                     <i class="fa-solid fa-circle-chevron-left"></i>&nbsp; ย้อนกลับ
                 </button>&nbsp;&nbsp;
                 @* <button class="btn btn-primary btn-add-data txt-add-data px-4 p-2" style="width:150px;" @onclick=SaveEdit>
                <i class="fa-solid fa-save"></i>&nbsp; บันทึก
                </button>*@
             </div>
         </div>
     </div>
 </div>
 <div class="mt-4">
     <sso.mms.helper.Components.Footer.Footer></sso.mms.helper.Components.Footer.Footer>
 </div>
 @*@foreach (var item in ListChangeSave)
{
    @item.ActiveStatus;
}*@
 @if (isloading == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}
@code {
    public string forwatch;
    public int currentPage = 1;
    [Parameter]
    [SupplyParameterFromQuery(Name = "token")]
    public string? shortToken { get; set; } = "";
    public string? env = ConfigureCore.ConfigENV;
    public string? url;
    public string? text;
    public bool isloading = false;
    public List<AnnounceT> Announce = new List<AnnounceT>();
    public List<AnnounceT> AnnounceSearch = new List<AnnounceT>();
    public List<AnnounceT> ListChangeSave = new List<AnnounceT>();
    public int checkedCount = 0;
    public bool showCountResult = false;
    public string? codeName = "DSP0701";

    int pageSize = 5;
    int pageIndex = 0;

    void OnPage(PaginationEventArgs e)
    {

        Console.WriteLine(e);
        pageSize = e.PageSize;
        pageIndex = e.Page;
    }


    private void OnShowSizeChange(PaginationEventArgs args)
    {
        var (current, pageSize) = args;
        Console.WriteLine($"{current}, {pageSize}");
    }

    protected override async Task OnInitializedAsync()
    {
        isloading = true;
        Announce = await AnnounceService.GetAnnounceT();
        AnnounceSearch = Announce.OrderByDescending(o => o.Id).ToList();

        if (env == "Development")
        {
            url = "";
        }
        else
        {
            url = "/admin";
        }
        StateHasChanged();
        isloading = false;

    }

    private void SearchText()
    {
        AnnounceSearch = Announce.Where(w => w.Title.ToLower().Contains(text.ToLower())).ToList();
        currentPage = 1;
        StateHasChanged();
    }
    public void Goforwatch(int Id, int viewannounce)
    {
        Navigation.NavigateTo(url + "/editnounce" + $"?token={shortToken}&Id={Id}&viewannounce={viewannounce}");
    }
    public void GoEditNnounce(int Id, int viewannounce)
    {
        Navigation.NavigateTo(url + "/editnounce" + $"?token={shortToken}&Id={Id}&viewannounce={viewannounce}");
    }
    public void GoAddNnonce(int viewannounce)
    {
        Navigation.NavigateTo(url + "/editnounce" + $"?token={shortToken}&viewannounce={viewannounce}");
    }
    public void GoToMainmenu()
    {
        Navigation.NavigateTo(url + "/mainmenu" + $"?token={shortToken}");
    }
    //public async void CheckChangeToggle(int id)
    //{
    //    var itemCount = Announce.Where(w => w.ActiveStatus == true).Count();

    //    showCountResult = true;
    //    if (itemCount > 0)
    //    {
    //        await Swal.FireAsync(
    //               "ไม่สามารถ เปิดการใช้งานได้มากกว่า 1 รายการ",
    //               null,
    //               SweetAlertIcon.Warning
    //               );
    //        //await JsRuntime.InvokeVoidAsync("alert", "ไม่สามารถ เปิดการใช้งานได้มากกว่า 9 รายการ");
    //        var item = Announce.FirstOrDefault(f => f.Id == id);
    //        ListChangeSave.RemoveAll(item => item.Id == id);
    //        item.ActiveStatus = false;
    //        ListChangeSave.Add(item);
    //        StateHasChanged();
    //    }
    //    else
    //    {
    //        ListChangeSave.RemoveAll(item => item.Id == id);
    //        var itemToAdd = Announce.FirstOrDefault(f => f.Id == id);
    //        if (itemToAdd != null)
    //        {
    //            ListChangeSave.Add(itemToAdd);
    //        }
    //        StateHasChanged();
    //    }
    //    StateHasChanged();
    //}
    //public async void SaveEdit()
    //{
    //    if (ListChangeSave.Count != 0)
    //    {
    //        ResponseModel response = await AnnounceService.EditAnnounceT(ListChangeSave);
    //        if (response.issucessStatus != true)
    //        {
    //            //await JsRuntime.InvokeVoidAsync("alert", "Error " + response.statusMessage);
    //            await Swal.FireAsync(
    //                "บันทึกไม่สำเร็จ" + response.statusMessage,
    //                null,
    //                SweetAlertIcon.Error
    //                );
    //        }
    //        else
    //        {
    //            await Swal.FireAsync(
    //                "บันทึกสำเร็จ",
    //                null,
    //                SweetAlertIcon.Success
    //                );
    //            //await JsRuntime.InvokeVoidAsync("alert", "บันทึกได้ สำเร็จ !");
    //            ListChangeSave.Clear();
    //            StateHasChanged();
    //        }

    //    }
    //    else
    //    {
    //        await Swal.FireAsync(
    //               "ไม่สามารถบันทึกได้ ! \n ไม่ได้มีการแก้ใขข้อมูล",
    //               null,
    //               SweetAlertIcon.Warning
    //               );
    //        //await JsRuntime.InvokeVoidAsync("alert", "ไม่สามารถบันทึกได้ ! ไม่ได้มีการแก้ใขข้อมูล");
    //    }

    //}
}

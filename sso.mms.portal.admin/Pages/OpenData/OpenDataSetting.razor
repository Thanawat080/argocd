@page "/opendatasetting"
@using Blazored.LocalStorage;
@using sso.mms.helper.Configs;
@using sso.mms.helper.ViewModels;
@using sso.mms.login.ViewModels;
@using sso.mms.portal.admin.Pages.Navbar
@using sso.mms.helper.Utility
@using sso.mms.helper.Components.Footer
@using sso.mms.portal.admin.Services;
@using sso.mms.portal.admin.ViewModels;
@inject SettingOpendataService settingOpendataService
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@inject ILocalStorageService _localstorage;
@inject SweetAlertService Swal;

<style>
        :root {
        --mdc-theme-primary: #334396;
    }

    .form-control, .form-select {
        display: block;
        width: 100%;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: var(--bs-body-color);
        background-color: var(--bs-body-bg);
        background-clip: padding-box;
        border: var(--bs-border-width) solid #9e9e9e;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: var(--bs-border-radius-sm);
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        height: 3rem;
    }

    .swal2-container.swal2-center > .swal2-popup {
        grid-column: 2;
        grid-row: 2;
        align-self: center;
        justify-self: center;
        border-radius: 16px;
    }

    .swal2-title {
        position: relative;
        max-width: 100%;
        margin: 0;
        padding: 0.8em 1em 0;
        color: inherit;
        font-size: 1.875em;
        font-weight: 600;
        text-align: center;
        text-transform: none;
        word-wrap: break-word;
        color: #334396;
        font-family: Noto Sans Thai;
    }

    .swal2-styled.swal2-confirm {
        border: 0;
        color: #fff;
        font-size: 1em;
        border-radius: 4px;
        background: #334396;
        width: 150px;
    }

    @@media only screen and (min-width: 1000px) {
        .pm-xl {
            position: fixed;
            width: 100%;
            z-index: 1000;
        }
    }

    @@media only screen and (max-width: 1000px) {
        .position-class {
            position: relative
        }
    }

    .custom-input-file {
        position: absolute;
        background: white;
        opacity: 0;
        width: 50%;
        height: 25%;
    }

    .img-upload {
        border-radius: 8px;
        width: inherit;
        height: 96%;
    }

    .txth-from-reg {
        font-family: 'Noto Sans Thai';
        font-style: normal;
        font-weight: 600;
        font-size: 19px;
        color: #334396;
    }
</style>

    <NavbarLoginAdmin ShortToken=@shortToken PageCode="@codeName"></NavbarLoginAdmin>

<MediaStyle></MediaStyle>

<div class="container pt-4 px-4">
    <div class="bg-card">
        <div class="m-4">
            <div class="d-flex justify-content-between align-items-center">
                <div class="card-txt-title py-4 px-2">ตั้งค่า Open Data </div>
            </div>
            <div class="row px-2 txth-from-reg">
                <form @onsubmit=@AddSettingOpendata>
                    <div class="p-4">
                        <div class="form-group">
                            <label class="title-sub-from d-flex flex-row">หัวข้อ<div class="title-red">*</div> </label>
                            <input type="text" class="form-control from-style" @bind="@Title" id="title" placeholder="หัวข้อ" required>
                        </div>
                    </div>
                    <div class="p-4">
                        <div class="form-group">
                            <label class="title-sub-from d-flex flex-row">URL<div class="title-red">*</div> </label>
                            <input type="text" class="form-control from-style" @bind="@PathUrl" id="url" placeholder="URL" required>
                        </div>
                    </div>
                    <div class="p-2 px-4">
                        <div class="form-group">
                            <label class="title-sub-from d-flex flex-row">คำอธิบาย<div class="title-red">*</div> </label>
                            <textarea class="form-control from-style" @bind="@Detail" id="detail" rows="4"></textarea>
                        </div>
                    </div>

                    <div class="row px-4 p-2">
                        <div class="col-sm-12 col-md-12 col-lg-6 co-xl-6 title-sub-from">
                            <div class="row">
                                <div class="col-sm-12 col-md-12 col-lg-4 co-xl-4 title-sub-from">
                                    สถานะการใช้งาน<span class="title-red">*</span>&nbsp;:
                                </div>
                                <div class="col-sm-12 col-md-12 col-lg-4 co-xl-4 form-check">
                                    <input class="form-check-input" type="radio" id="flexRadioDefault1" name="checkstatus" @onclick="@(()=>ChangeStatus(true))">
                                    <label class="form-check-label" for="flexRadioDefault1">
                                        ใช้
                                    </label>
                                </div>
                                <div class="col-sm-12 col-md-12 col-lg-4 co-xl-4 form-check">
                                    <input class="form-check-input" type="radio" id="flexRadioDefault2" name="checkstatus" checked @onclick="@(()=>ChangeStatus(false))">
                                    <label class="form-check-label" for="flexRadioDefault2">
                                        ไม่ใช้
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-12 col-lg-6 co-xl-6">
                        </div>
                    </div>
                    <div class="d-flex align-items-center mx-5 px-3">
                        @if (!String.IsNullOrEmpty(FileName))
                        {
                            <a href="@ImageUri" @onclick="@(() => IsAlert(ImageUri.Contains("https:")?false : true))" target="@(ImageUri.Contains("https:")?"_blank" : "")">@FileName</a>
                            @if (xmark == true)
                            {
                                <div @onclick="@isClose" class="px-2" style="color:red;cursor:pointer"><i class="fa-solid fa-circle-xmark"></i></div>
                            }
                        }
                        else
                        {
                            <div></div>
                        }
                    </div>
                    <div class="container banner-box-upload">
                        <div class="d-flex justify-content-center align-item-center ">
                            <div class="div-file-input">
                                <InputFile class="custom-input-file" style="cursor:pointer;" OnChange="@LoadFiles" multiple />
                                @if (!String.IsNullOrEmpty(FileName))
                                {
                                    <img class="img-upload" src="@ImageUri" />
                                }
                                else
                                {
                                    <div class="d-flex flex-column align-items-center">
                                        <div style="font-size: 40px;text-align:center;">
                                            <i class="fa-solid fa-arrow-up-from-bracket"></i>
                                        </div>
                                        <div class="m-2" style="font-size: 40px;">
                                            <p class="txt-upload m-1">วางไฟล์ที่นี่เพื่ออัปโหลด</p>
                                        </div>
                                        <button class="btn btn-primary btn-edit m-1">
                                            <i class="fa-regular fa-floppy-disk"></i> อัปโหลด
                                        </button>
                                        <div class="m-2" style="font-size: 30px;">
                                            <p class="txt-upload m-1">(อัพโหลดไฟล์ ได้เฉพาะ .jpg และ .png เท่านั้น ขนาดไฟล์ 5 MB)</p>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                    </div>
                    @*<div class="d-flex justify-content-center align-item-center mt-4">
                        <div class="div-file-upload">
                            @if (!String.IsNullOrEmpty(FileName))
                            {
                                <img class="img-upload" src="@ImageUri" />
                            }
                            else
                            {
                            <div class="d-flex flex-column justify-content-center align-items-center">
                                <div class="m-2" align="center">
                                    <i class="fa-solid fa-arrow-up-from-bracket" style="font-size:50px;color:#334396;"></i>
                                    <p class="txt-upload m-1">วางไฟล์ที่นี่เพื่ออัปโหลด</p>
                                </div>
                                <div class="m-2">
                                    <button class="btn btn-primary btn-edit m-1 px-4 p-2">
                                        <i class="fa-regular fa-floppy-disk"></i> อัปโหลด
                                    </button>
                                </div>
                                <InputFile class="custom-input-file" style="cursor:pointer;" OnChange="@LoadFiles" multiple />
                                <div>
                                    <p class="txt-label">
                                        @FileName
                                    </p>
                                </div>
                                <div style="color:gray;font-size:18px;">
                                    (ขนาด 5 MB สามารถอัพโหลดไฟล์ ได้เฉพาะ .jpg และ .png เท่านั้น)
                                </div>
                            </div>
                            }
                        </div>
                    </div>*@
                    <div class="d-flex justify-content-end align-content-end align-items-center py-4 mt-2">
                        <button @onclick="GoToMainmenu" class="btn btn-secondary btn-bo-main px-4 p-2" type="button">
                            <i class="fa-solid fa-circle-chevron-left"></i>&nbsp; ย้อนกลับ
                        </button>
                        &nbsp;&nbsp;
                        <button class="btn btn-primary btn-sa-main m-1 px-4 p-2" type="submit">
                            <i class="fa-regular fa-floppy-disk"></i>&nbsp; บันทึก
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<Footer></Footer>
@if (isloading == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}
@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "token")]
    public string? shortToken { get; set; } = "";
    public string? url;
    public string? prefix = "";
    public string ImageUri = "";
    public string Title = "";
    public string PathUrl = "";
    public string Detail = "";
    public bool Status = false;
    public bool isloading = false;
    public string? env = ConfigureCore.ConfigENV;
    private ResponseModel response;
    private ResponseLogin getUser { get; set; } = null!;
    public string? codeName = "DSP0902";
    protected override async Task OnInitializedAsync()
    {

        prefix = ConfigureCore.redirectsPortalAdmin;
        StateHasChanged();
        //getUser = await _localstorage.GetItemAsync<ResponseLogin>("userdata");
    }

    private void ChangeStatus(bool status)
    {
        Status = status;
    }

    public void GoToMainmenu()
    {
        NavigationManager.NavigateTo(prefix + "opendata" + $"?token={shortToken}");
    }

    public string FileName;

    public IBrowserFile browserFile;

    public async Task LoadFiles(InputFileChangeEventArgs e)
    {
       
     
        if (e.File.Size > 5242880)
        {
            isloading = false;
            StateHasChanged();

            await Swal.FireAsync(
                  "ไฟล์ใหญ่เกินไป !!",
                  null,
                  SweetAlertIcon.Error
                  );
        }
        else if (e.File.ContentType != "image/jpeg" && e.File.ContentType != "image/jpg" && e.File.ContentType != "image/png")
        {
            isloading = false;
            StateHasChanged();

            await Swal.FireAsync(
               "สามารถอัพโหลดไฟล์ ได้เฉพาะ .jpg และ .png เท่านั้น",
               null,
               SweetAlertIcon.Warning
               );
        }
        else
        {
            try
            {
                xmark = true;
               
                var image = await e.File.RequestImageFileAsync("image/png", 600, 600);
                using Stream imageStream = image.OpenReadStream(1024 * 1024 * 10);
                using MemoryStream ms = new();
                await imageStream.CopyToAsync(ms);
                ImageUri = $"data:image/png;base64,{Convert.ToBase64String(ms.ToArray())}";
                FileName = e.File.Name;
                browserFile = e.File;
                StateHasChanged();
            }
            catch (Exception ex){
                Console.WriteLine(ex);
            }
        }

    }
    public async Task AddSettingOpendata()
    {
        isloading = true;

        SettingOpendataModel data = new SettingOpendataModel
            {
                Title = Title,
                Url = PathUrl,
                Detail = Detail,
                ShowStatus = Status,
                File = browserFile,
                //CreateBy = getUser.Usr,
                //UpdateBy = getUser.Usr
            };
        response = await settingOpendataService.AddSettingOpendata(data);
        if (response.issucessStatus != true)
        {
            isloading = false;
            StateHasChanged();

            await Swal.FireAsync(
                  "บันทึกไม่สำเร็จ" + response.statusMessage,
                  null,
                  SweetAlertIcon.Error
                  );
            //await JsRuntime.InvokeVoidAsync("alert", "ผิดพลาด !!");
        }
        else
        {
            isloading = false;
            StateHasChanged();
         
            var result = await Swal.FireAsync(
                  "บันทึกสำเร็จ",
                  null,
                  SweetAlertIcon.Success
                  );
            //await JsRuntime.InvokeVoidAsync("alert", "สำเร็จ !!");
            if (result.IsConfirmed)
            {
                 NavigationManager.NavigateTo(prefix + "opendata" + $"?token={shortToken}");
            }
           
        }
    }
    private bool xmark;
    public void isClose()
    {
        xmark = false;
        FileName = "";
        StateHasChanged();
    }
    public async void IsAlert(bool status)
    {
        if (status)
        {
            await Swal.FireAsync(
               " ไม่สามารถคลิกดูรายละเอียด เนื้อไฟล์ได้ เนื่องจากยังไม่ได้บันทึกข้อมูล !",
               null,
               SweetAlertIcon.Warning
               );
        }
    }


}

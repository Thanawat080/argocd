@page "/Dental/TreatmentRecord"
@using System.IdentityModel.Tokens.Jwt;
@using Blazored.LocalStorage;
@using sso.mms.helper.PortalModel;
@using sso.mms.login.Services;
@using sso.mms.login.ViewModels;
@using sso.mms.portal.admin.Pages.Navbar
@using sso.mms.fees.ext.Shared.Dental.TreatmentRecord
@using sso.mms.fees.api.ViewModels.Dental

@inject NavigationManager NavigationManager
@inject ReadTokenService readTokenService
@inject UserRoleService userRoleService
@inject ILocalStorageService _localstorage;
@inject IconService iconService


<LayoutIndex ShortToken="@ShortToken" Page="DentalHop">

    @if (Page == 0)
    {
        <TreatmentRecordIndex IndexPage="@((args)=> Indexpage(args.Item1,args.Item2))" SentId="@((args)=> sentId(args))" />
    }
    else if(Page == 1)
    {
        @* <AddTreatmentIndex_1 IndexPage="@Indexpage" RegisData="FormData" OnRegis="@((args)=> OnRegister(args.Item1,args.Item2))" Page="Page" /> *@
        <RecordChecklistAuthenticate IndexPage="@((args)=> Indexpage(args.Item1,args.Item2))" Type="Dental"></RecordChecklistAuthenticate>
    }
    else if (Page== 2)
    { 
        <AddTreatmentIndex_2  IndexPage="@((args)=> Indexpage(args.Item1,args.Item2))"  RegisData="FormData" OnRegis="@((args)=> OnRegister(args.Item1,args.Item2))" Page="Page"/>
    }
    else if (Page == 3)
    {
        <AddTreatmentIndex_3 IndexPage="@((args)=> Indexpage(args.Item1,args.Item2))" checkHId="checkHId" />
    }
    else if (Page == 4)
    {
        <AddTreatmentIndex_4 IndexPage="@((args)=> Indexpage(args.Item1,args.Item2))" checkHId="checkHId" />
    }
</LayoutIndex>



@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "token")]
    public string? ShortToken { get; set; } = "";

    public int Page = 0;
    public int checkHId = 1;
    public AaiDentalCheckHView? FormData;

    public async Task Indexpage(int usepage, AuthenPerson person)
    {
        this.Page = usepage;
    }
    private ResponseShortToken responseShortToken { get; set; } = null!;

    public UserRole userRole;

    public async void OnRegister(AaiDentalCheckHView formData,int page)
    {
        this.Page = page;
        FormData = formData;
    }
    public async void sentId(int id)
    {
       checkHId = id;

    }

    protected override async Task OnInitializedAsync()
    {
        responseShortToken = await readTokenService.ReadToken(ShortToken!);

        Console.WriteLine("responseShortToken", responseShortToken);

        if (responseShortToken != null)
        {
            JwtSecurityTokenHandler tokenHandler = new JwtSecurityTokenHandler();
            JwtSecurityToken jwt = tokenHandler.ReadJwtToken(responseShortToken.accessToken);
            var t = jwt.Payload.ToList();
            KeyValuePair<string, object> result = t.FirstOrDefault(pair => pair.Key == "preferred_username");
            var username = result.Value.ToString();

            userRole = await userRoleService.GetRoleByUserName(username);
            await _localstorage.SetItemAsync("userRole", userRole);

        }
    }

}

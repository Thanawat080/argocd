@using sso.mms.fees.ext.Providers.PromoteHealth.DetermineReferenceValue;
@inject ModalService _modalService
@inject DetermineReferenceServices determineReferenceServices


<div class="site-layout-background" style="padding: 24px;">
    <div class="mms-nav-title">
        <div class="mms-text-title px-4 py-3">ค่าบริการทางการแพทย์ส่งเสริมสุขภาพและป้องกันโรค</div>
    </div>
    <div class="container py-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item" aria-current="page">
                    <span class="breadcum-process py-2">กำหนดค่าอ้างอิงผลการตรวจ</span>
                </li>
            </ol>
        </nav>
        <hr style="width:100%" />

        <div class="mms-media-end">

            <Space Direction="@DirectionVHType.Vertical" Class="mms-btn-serch">
                <SpaceItem>
                    <Search Placeholder="ข้อมูลที่ต้องการค้นหา.." EnterButton="true" />
                </SpaceItem>
            </Space>

        </div>

        <div class="mms-txt-headdetail pb-3">กำหนดค่าอ้างอิง</div>
        <Table DataSource="checkListM" TItem="AaiHealthChecklistM" RowClassName="@(_=>"editable-row")" Bordered ScrollX="1000">
            <ChildContent Context="data">
                <Column TData="string" Title="ลำดับ" Width="10%" Style="text-align:center;">
                    @String.Format("{0:d}", checkListM.IndexOf(data) + 1)
                </Column>
                <Column TData="string" Title="รายการตรวจ" Width="80%" Style="text-align:center;">
                    @data.ChecklistName
                </Column>
                <Column TData="string" Width="10%" Style="text-align:center;">
                    <img class="mx-2" title="แก้ไข" src="helper_shared/PortalAdminImage/edit.png" style="width:24px;height:24px; cursor:pointer;" @onclick=@(() => goEdit(2, data.ChecklistId, data.ChecklistName)) />
                </Column>
            </ChildContent>
        </Table>
    </div>
</div>

<Modal Title="@title"
       Visible="@_visible"
       OnOk="@HandleOk"
       OnCancel="@HandleCancel">
    <p>Some contents...</p>
    <p>Some contents...</p>
    <p>Some contents...</p>
</Modal>
@if (isloading == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}
@code {
    [Parameter]
    public EventCallback<(int, decimal, string)> IndexPage { get; set; }
    List<ItemData> listOfData = new List<ItemData>();
    List<AaiHealthChecklistM> checkListM = new List<AaiHealthChecklistM>();

    public bool isloading = false;
    public async Task goEdit(int item, decimal id, string maintitle)
    {
        await IndexPage.InvokeAsync((item, id, maintitle));
    }

    RenderFragment _audioIcon =@<Icon Type="audio" Theme="outline" Style="color: #1890ff" />;


    protected override async Task OnInitializedAsync()
    {
        isloading = true;
        DateTime now = DateTime.Now;
        int year = now.Year + 543;
        checkListM = await determineReferenceServices.GetCheckListMByNowYear(year);
        checkListM = checkListM.Where(x => x.IsSetRef == true).ToList();

        isloading = false;
        StateHasChanged();
    }

    private void OnSearch(string value)
    {
        Console.WriteLine($"search: {value}");
    }


    public class ItemData
    {
        public int Id { get; set; }
        public string list { get; set; }

    };



    string title = "BasicModal";
    bool _visible = false;

    private void HandleOk(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible = false;
    }

    private void HandleCancel(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible = false;
    }

}

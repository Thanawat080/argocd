@using sso.mms.fees.ext.Providers.PromoteHealth.BookHealthCheckup;
@inject BookHealthCheckupServices bookHealthCheckupServices;
@inject ModalService _modalService
@using Blazored.LocalStorage;
@inject ILocalStorageService _localstorage;
@inject IJSRuntime JsRuntime

<style>
    .layout {
        display: flex;
        align-items: center;
    }
</style>
<div class="site-layout-background" style="padding: 24px;">
    <div class="mms-nav-title">
        <div class="mms-text-title px-4 py-3">ค่าบริการทางการแพทย์ส่งเสริมสุขภาพและป้องกันโรค</div>
    </div>
    <div class="container py-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item" aria-current="page">
                    <span class="breadcum-process py-2">จองสิทธิ์การตรวจสุขภาพ</span>
                </li>
            </ol>
        </nav>
        <hr />

        <div class="row align-items-center py-4">
            <div class="col-sm-12 col-md-9">
                <Button Type="@ButtonType.Primary" @onclick=@(() => goEdit(2, 0)) style="padding: 4px 30px"><i class="fa-solid fa-circle-plus"></i> &nbsp; เพิ่ม</Button> &nbsp;&nbsp;
                <Button Type="@ButtonType.Default" style="padding: 4px 30px;margin-right: 1%" @onclick=@(() => downloadTemplate())> <i class="fa-solid fa-cloud-arrow-down"></i> &nbsp; ดาวน์โหลด Template การจอง</Button>
            </div>
            <div class="col-sm-12 col-md-3">
                <Space Direction="@DirectionVHType.Vertical" Class="mms-btn-serch w-100">
                    <SpaceItem>
                        <Search Placeholder="ข้อมูลที่ต้องการค้นหา.." EnterButton="true"/>
                    </SpaceItem>
                </Space>
            </div>
        </div>

        <Table DataSource='listReserve.Where(x => x.DocStatus == "1" || x.DocStatus == "2" || x.DocStatus == "3")' TItem="GetReServeHView" RowClassName="@(_=>"editable-row")" Bordered ScrollX="1000">
            <ChildContent Context="data">
                <Column TData="string" Title="ลำดับ" Width="7%" Style="text-align:center;">
                    @String.Format("{0:d}", listReserve.Where(x => x.DocStatus == "1" || x.DocStatus == "2" || x.DocStatus == "3").ToList().IndexOf(data) + 1)
                </Column>
                <Column TData="string" Title="เลขที่บัญชีนายจ้าง" Width="19%" Style="text-align:center;">
                    @data.CompanyAccNo
                </Column>
                <Column TData="string" Title="ชื่อสถานประกอบการ" Width="19%" Style="text-align:center;">
                    @data.CompanyName
                </Column>
                <Column TData="string" Title="วันที่จองตรวจ" Width="16%" Style="text-align:center;">
                    @data.ReserveStartDate.AddYears(543).ToString("dd/MM/yyyy")
                </Column>
                <Column TData="string" Title="จำนวนคน" Width="16%" Style="text-align:center;">
                    @data.PersonCount
                </Column>
                @if (data.DocStatus == "1")
                {
                    <Column TData="string" Title="สถานะ" Width="16%" Style="text-align:center; color: black;">
                        <div class="layout"><div class="box-color-e3b448"></div>จองล่วงหน้า</div>
                    </Column>
                }
                else if (data.DocStatus == "2")
                {
                    <Column TData="string" Title="สถานะ" Width="16%" Style="text-align:center; color: black; ">
                        <div class="layout"><div class="box-color-cbd28f"></div>อยู่ระหว่างการตรวจ</div>
                    </Column>
                }
                else if (data.DocStatus == "3")
                {
                    <Column TData="string" Title="สถานะ" Width="16%" Style="text-align:center; color: black;">
                        <div class="layout"><div class="box-color-3a6b34"></div>ตรวจเสร็จแล้ว</div>
                    </Column>
                }
                else
                {
                    <Column TData="string" Title="สถานะ" Width="16%" Style="text-align:center; color: black;">
                        ยกเลิกการจอง
                    </Column>
                }
                <Column TData="string" Width="7%" Style="text-align:center;">
                    @if (data.DocStatus == "1")
                    {
                        <img class="mx-2" title="แก้ไข" src="helper_shared/PortalAdminImage/edit.png" style="width:24px;height:24px; cursor:pointer;" @onclick=@(() => goEdit(3, data.ReserveId)) />
                    }
                    else
                    {
                        <img class="mx-2" title="เรียกดู" src="helper_shared/PortalAdminImage/eye.png" style="width:24px;height:24px; cursor:pointer;" @onclick=@(() => goEdit(4, data.ReserveId)) />
                    }

                </Column>
            </ChildContent>
        </Table>
    </div>
</div>


@if (isloading == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}
@code {

    [Parameter]
    public EventCallback<(int, decimal)> IndexPage { get; set; }
    List<ItemData> listOfData = new List<ItemData>();
    List<GetReServeHView> listReserve = new List<GetReServeHView>();
    public bool isloading = false;
    public async Task goEdit(int item, decimal reserveId)
    {
        await IndexPage.InvokeAsync((item, reserveId));
    }

    RenderFragment _audioIcon =@<Icon Type="audio" Theme="outline" Style="color: #1890ff" />;
    public string hosmCode { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        isloading = true;
        hosmCode = await _localstorage.GetItemAsync<String>("hospitalMCode");
        listReserve = await bookHealthCheckupServices.GetReserve(hosmCode);
        listOfData = new List<ItemData>()
        {
        new ItemData() {
                Id = 1,
                juristicId = "11124214124",
                place = "teamDev",
                date = "11/08/2524",
                count = 4,
                status = "จองล่วงหน้า"
            },
                new ItemData() {
                 Id = 2,
                juristicId = "11124214124",
                place = "teamDev2",
                date = "11/08/2525",
                count = 2,
                status = "ยกเลิกการจอง"
            },
                new ItemData() {
                 Id = 3,
                juristicId = "11124214124",
                place = "teamDev3",
                date = "11/08/2526",
                count = 6,
                status = "จองล่วงหน้า"
            },
                new ItemData() {
                 Id = 4,
                juristicId = "11124214124",
                place = "teamDev4",
                date = "11/08/2527",
                count = 4,
                status = "จองล่วงหน้า"
            },
        };
        StateHasChanged();
        isloading = false;

    }
    public async Task downloadTemplate()
    {
        await JsRuntime.InvokeAsync<object>("open", "RESERVE_TEMPLATE.xlsx", "_blank");
    }

    private void OnBlur()
    {
        Console.WriteLine("blur");
    }

    private void OnFocus()
    {
        Console.WriteLine("focus");
    }

    private void OnSearch(string value)
    {
        Console.WriteLine($"search: {value}");
    }


    public class ItemData
    {
        public int Id { get; set; }
        public string juristicId { get; set; }
        public string place { get; set; }
        public string date { get; set; }
        public int count { get; set; }
        public string status { get; set; }
    };



    string title = "BasicModal";
    bool _visible = false;

    private void HandleOk(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible = false;
    }

    private void HandleCancel(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible = false;
    }

}

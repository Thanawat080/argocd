@using MatBlazor
@using sso.mms.fees.ext.Providers.PromoteHealth.PayOrderHistory
@inject PayOrderHistoryServices payOrderHistoryServices
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime;
@using Blazored.LocalStorage;
@inject ILocalStorageService _localstorage;
@inject SweetAlertService Swal;
@inject IJSRuntime JsRuntime


<style>

    .mdc-table td {
        padding: 20px !important;
    }

    .mdc-table th {
        padding: 20px !important;
    }
</style>

<div class="site-layout-background" style="padding: 24px;">
    <div class="mms-nav-title">
        <div class="mms-text-title px-4 py-3">ค่าบริการทางการแพทย์ส่งเสริมสุขภาพและป้องกันโรค</div>
    </div>
    <div class="container py-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item" aria-current="page">
                    <span class="breadcum-process py-2">ประวัติใบคำสั่งจ่าย</span>
                </li>
            </ol>
        </nav>
        <hr style="width:100%" />

        <Table DataSource="@dataOrder" TItem="PayOrderView" RowClassName="@(_=>"editable-row")" Bordered ScrollX="1000">
            <ChildContent Context="data">
                <Column TData="string" Title="ลำดับ" Width="20%" Style="text-align:center;">
                    @String.Format("{0:d}", @dataOrder.IndexOf(data) + 1)
                </Column>
                <Column TData="string" Title="งวดที่" Width="44%" Style="text-align:center;">
                    @data.WithdrawalNo
                </Column>
                <Column TData="string" Title="เลขชุดคำสั่งจ่าย" Width="44%" Style="text-align:center;">
                    @data.PayOrderSetNo
                </Column>
                @*<Column TData="int" Title="จำนวนสถานพยาบาล" Width="44%" Style="text-align:center;">
                    @data.CountHos
                </Column>*@
                <Column TData="string" Title="วันที่อนุมัติ" Width="44%" Style="text-align:center;">
                    @data.ApproveDate?.AddYears(543).ToString("dd/MM/yyyy")
                </Column>
                <Column TData="string" Title="ยอดการเบิกรวม (บาท)" Width="44%" Style="text-align:center;">
                    @data.PayAmount?.ToString("N0")
                </Column>
                <Column TData="string" Title="สถานะ" Width="40%" Style="text-align:center;">
                    @if (@data.PayOrderStatus == "D")
                    {
                        <span style="color:#59AD46;">จ่ายเเล้ว</span>
                    }
                    else if (data.PayOrderStatus == "E")
                    {
                        <span style="color:#F56C6C;">ปฎิเสธการจ่าย</span>
                    }
                    else if (data.PayOrderStatus == "C")
                    {
                        <span style="color:#1890ff;">รอจ่าย</span>
                    }
                    else if (data.PayOrderStatus == "A")
                    {
                        <span>รออนุมัติ</span>
                    }
                    else if (data.PayOrderStatus == "B")
                    {
                        <span>อนุมัติ</span>
                    }
                </Column>
                <Column TData="string" Width="18%" Style="text-align:center; border-top-right-radius:8px;">
                    <img title="ดู" src="helper_shared/PortalAdminImage/eye.png" style="width:24px;height:24px; cursor:pointer;" @onclick="() => goEdit(data.PayOrderSetNo,data.HospitalCode)" />
                </Column>
            </ChildContent>
        </Table>

    </div>
</div>




@if (isloading == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}

@code {
    [Parameter]
    public EventCallback<(int, string , string)> IndexPage { get; set; }

    List<PayOrderView>? dataOrder = new List<PayOrderView>();
    bool active = true;
    string _okText = "ยืนยัน";
    string _cancelText = "ยกเลิก";
    //public string username;
    bool _visible1 = false;
    public string hosmCode;
    private void HandleOk(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible1 = false;
    }

    private void HandleCancel(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible1 = false;
    }
    public bool isloading = false;
    string txtValue { get; set; }
    List<Todo> todos = new List<Todo>();
    public async Task goEdit(string payordersetno, string hoscode)
    {
        await IndexPage.InvokeAsync((2, payordersetno, hoscode));
    }

    RenderFragment _audioIcon =@<Icon Type="audio" Theme="outline" Style="color: #1890ff" />;


    protected override async Task OnInitializedAsync()
    {
        isloading = true;
        StateHasChanged();
        hosmCode = await _localstorage.GetItemAsync<String>("hospitalMCode");
        dataOrder = await payOrderHistoryServices.GetPayOrderByHoscode(hosmCode);
        isloading = false;
        StateHasChanged();


    }



    public async void addItem()
    {
        _visible1 = true;
    }

    public class Todo
    {
        public int Id { get; set; }
        public string roundpayment { get; set; }
        public string idpayment { get; set; }
        public int hoscount { get; set; }
        public string datecommit { get; set; }
        public int price { get; set; }
        public bool status { get; set; }

    }


}

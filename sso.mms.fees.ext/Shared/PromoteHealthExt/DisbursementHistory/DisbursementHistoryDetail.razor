@using Blazored.LocalStorage;
@using sso.mms.helper.Configs;
@using sso.mms.fees.ext.Providers.PromoteHealth.DisbursementHistory;
@inject ModalService _modalService
@inject DisbursementHistoryServices disbursementHistoryServices
@inject ILocalStorageService _localstorage;
@inject SweetAlertService Swal;
@inject IJSRuntime JsRuntime
<style>
    html, body {
        overflow-x: visible;
    }

    input {
        color: black !important;
    }
</style>
<div class="site-layout-background" style="padding: 24px;">
    <div class="mms-nav-title">
        <div class="mms-text-title px-4 py-3">ค่าบริการทางการแพทย์ส่งเสริมสุขภาพและป้องกันโรค</div>
    </div>
    <div class="container py-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item " style="cursor: pointer;" aria-current="page" @onclick="()=> goBack(1)">
                    <span class="breadcum-sucress py-2">ประวัติการเบิกจ่าย</span>
                </li>
                <li class="breadcrumb-item" aria-current="page">
                    <span class="breadcum-process py-2">@WithdrawalNo</span>
                </li>
            </ol>
        </nav>
        <hr style="width:100%" />
        

        <div class="mms-media-start">
            <div class="mms-txt-headdetail" style="width: 26%">จำนวนผู้ป่วยทั้งหมด</div>&nbsp;
            <Input @bind-Value="@countPatient" Disabled  Style="width: 10%; margin-left: -12%;"/>
            <div class="mms-txt-headdetail" style="width: 9%; margin-left: 3%;">ยอดเงินรวม</div>&nbsp;
            <Input @bind-Value="@amountTotalPrice" Disabled  Style="width: 10%"/>
        </div>
        <div class="mms-media-end">
            @if(Checktype == 2)
            {
                <Button Type="@ButtonType.Primary" style="padding: 4px 30px; margin-right: 1%" @onclick="(() => ToUploadFile())">อัปโหลดใบขอเบิก</Button>
            }
            else if(Checktype == 3)
            {
                <Button Type="@ButtonType.Default" style="padding: 4px 30px; margin-right: 1%" @onclick="(() => DownloadPdf())"> <i class="fa-solid fa-cloud-arrow-down"></i> &nbsp;ดาวน์โหลดใบขอเบิก</Button>
                @*<a href = "https://mag.wcoomd.org/uploads/2018/05/blank.pdf" download >
                    โหลด
                </a>*@
                @*<a href="https://mag.wcoomd.org/uploads/2018/05/blank.pdf" download="blank.pdf">Download PDF</a>*@

                
            }
            
            <Space Direction="@DirectionVHType.Vertical" Class="mms-btn-serch">
                <SpaceItem>
                    <Search Placeholder="ข้อมูลที่ต้องการค้นหา.." EnterButton="true" />
                </SpaceItem>
            </Space>


        </div>


        <Table DataSource="listcheckupH" TItem="ViewAaiHealthCheckupH" RowClassName="@(_=>"editable-row")" Bordered ScrollX="1000">
            <ChildContent Context="data">
                <Column TData="string" Title="ลำดับ" Width="7%" Style="text-align:center;">
                    @String.Format("{0:d}", listcheckupH.IndexOf(data) + 1)
                </Column>
                <Column TData="string" Title="หมายเลขประจำตัวประชาชน" Width="29%" Style="text-align:center;">
                    @data.PersonalId
                </Column>
                <Column TData="string" Title="ชื่อ-นามสกุล" Width="29%" Style="text-align:center;">
                    @data.PatientName @data.PatientSurname
                </Column>

                <Column TData="string" Title="จำนวนรายการตรวจ" Width="14%" Style="text-align:center;">
                    @data.CountWithdraw
                </Column>
                <Column TData="string" Title="ยอดเบิก(บาท)" Width="14%" Style="text-align:center;">
                    @data.TotalPrice?.ToString("N0")
                </Column>
                <Column TData="string" Width="7%" Style="text-align:center;">
                    
                        <img class="mx-2" title="เรียกดู" src="helper_shared/PortalAdminImage/eye.png" style="width:24px;height:24px; cursor:pointer;"  />

                </Column>
            </ChildContent>
        </Table>
    </div>
</div>

@{
    RenderFragment footer = @<Template>
        <div class="justify-content-center align-content-center" style="display: flex">
            <Button OnClick="@HandleCancel" @key="@( "back" )" style="padding: 4px 30px"><i class="fa-regular fa-circle-xmark"></i>&nbsp; ยกเลิก</Button>
            <Button OnClick="@HandleOk" @key="@( "submit" )" Type="primary" style="padding: 4px 30px"><i class="fa-regular fa-circle-check"></i>&nbsp; ยืนยัน</Button>
        </div>
    </Template>;
}


<Modal Title="@("")"
       Visible="_visible"
       OnOk="@HandleOk"
       OnCancel="@HandleCancel"
       Footer="@footer">

    <p>วางไฟล์เอกสารที่ต้องการ (.pdf)</p>
    <div class="container banner-box-upload">
        <div class="d-flex justify-content-center align-item-center ">
            <div class="div-file-upload">

                <div class="d-flex flex-column justify-content-center align-items-center">
                    <div class="m-2">
                    </div>
                    <InputFile accept=".pdf" class="custom-input-file " type="file" OnChange="@LoadFiles" required />
                    <div>
                    </div>
                </div>
                <div class="d-flex flex-column justify-content-center align-items-center">
                    <i class="fa-solid fa-upload" style="font-size:91.432px;color:#334396"></i>
                    <p style="margin-top:1em">วางไฟล์ที่นี่เพื่ออัปโหลด</p>
                    <div class="label-btn-primary">
                        อัปโหลด
                    </div>
                    <p style="margin-top:1em">(ขนาดไม่เกิน 10 MB)</p>
                </div>

            </div>
        </div>

    </div>

</Modal>
@if (isloading == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}
@code {
    [Parameter]
    public EventCallback<int> IndexPage { get; set; }
    [Parameter]
    public int Checktype { get; set; }
    [Parameter]
    public string WithdrawalNo { get; set; }
    [Parameter]
    public string? WithdrawalDoc { get; set; }
    public bool isloading = false;
    List<ItemData> listOfData = new List<ItemData>();
    string txtValue { get; set; }
    public string hosmCode { get; set; } = "0";
    public string username { get; set; }
    List<ViewAaiHealthCheckupH> listcheckupH = new List<ViewAaiHealthCheckupH>();
    RenderFragment _audioIcon =@<Icon Type="audio" Theme="outline" Style="color: #1890ff" />;
    public string? countPatient;
    public string? amountTotalPrice;
    public string FileName;
    public IBrowserFile browserFile;
    WithdrawalDoc dataDoc = new WithdrawalDoc();



    protected override async Task OnInitializedAsync()
    {
        hosmCode = await _localstorage.GetItemAsync<String>("hospitalMCode");
        username = await _localstorage.GetItemAsync<String>("username");
        listcheckupH = await disbursementHistoryServices.GetCheckupHInWithdrawal(hosmCode, WithdrawalNo);
        countPatient = listcheckupH.Count().ToString("N0");
        amountTotalPrice = listcheckupH.Sum(x => x.TotalPrice)?.ToString("N0");
        
    }
    public async Task DownloadPdf()
    {
        // URL of the PDF file to download
        var pdfUrl = WithdrawalDoc;

        // JavaScript code to trigger the download
        var fileName = WithdrawalDoc;
        if(ConfigureCore.SiteName == "BT")
        {
            fileName = fileName.Split("https://mmsuat.demotoday.net/fees-api/Files/Module8/RequestForm/")[1];
        }
        else if(ConfigureCore.SiteName == "SSO")
        {
            fileName = fileName.Split("https://mmsuat.sso.go.th/fees-api/Files/Module8/RequestForm/")[1];
        }
        var jsCode = $@"var link = document.createElement('a');
                      link.href = '{pdfUrl}';
                      link.target = '_blank';
                      link.download = '{fileName}'; // You can specify the desired file name here
                      link.click();";

        await JsRuntime.InvokeVoidAsync("eval", jsCode);
    }
    private async Task DownloadPDF()
    {
        string pdfUrl = "https://localhost:7153/Files/8fc64c24-fe53-4ca6-ae2e-f12c27ec2cf4.pdf";

        // เรียกฟังก์ชัน JavaScript สำหรับดาวน์โหลดไฟล์
        await JsRuntime.InvokeAsync<object>("open", pdfUrl, "_blank");
        //await JsRuntime.InvokeVoidAsync("downloadFile", pdfUrl);
    }
    //public void DownloadPDF()
    //{
    //    JsRuntime.InvokeAsync<object>("open", "Files/8fc64c24-fe53-4ca6-ae2e-f12c27ec2cf4.pdf", "_blank");
    //}

    public async Task LoadFiles(InputFileChangeEventArgs e)
    {
        FileName = e.File.Name;
        browserFile = e.File;
    }

    private async Task HandleOk(MouseEventArgs e)
    {
        isloading = true;
        dataDoc.WithdrawalNo = WithdrawalNo;
        dataDoc.HospitalCode = hosmCode;
        dataDoc.File = browserFile;
        var res = await disbursementHistoryServices.EditWithdrawalDoc(dataDoc);
        if (res == "success")
        {
            isloading = false;
            StateHasChanged();
            await Swal.FireAsync(
                    "อัปโหลดไฟล์สำเร็จ",
                    null,
                    SweetAlertIcon.Success
                    );
            await IndexPage.InvokeAsync((1));
        }
        else
        {
            isloading = false;
            StateHasChanged();
            await Swal.FireAsync(
                    "อัปโหลดไฟล์ไม่สำเร็จ",
                    null,
                    SweetAlertIcon.Error
                    );

        }
        await IndexPage.InvokeAsync(1);
        _visible = false;
    }

    private void OnBlur()
    {
        Console.WriteLine("blur");
    }

    private void OnFocus()
    {
        Console.WriteLine("focus");
    }

    private void OnSearch(string value)
    {
        Console.WriteLine($"search: {value}");
    }

    public async Task goBack(int item)
    {
        await IndexPage.InvokeAsync(item);
    }
    public class ItemData
    {
        public int Id { get; set; }
        public string identification { get; set; }
        public string name { get; set; } 
        public int count { get; set; }
        public int amount { get; set; }
    };



    string title = "BasicModal";
    bool _visible = false;

    

    private void HandleCancel(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible = false;
    }

    private async Task ToUploadFile()
    {
        _visible = true;
    }

}

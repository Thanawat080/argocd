@using System.Text;
@using sso.mms.fees.ext.Providers.PromoteHealth.BookHealthCheckup;
@using System.Globalization;
@using Blazored.LocalStorage;
@using ClosedXML.Report;
@inject SweetAlertService Swal;
@inject BookHealthCheckupServices bookHealthCheckupServices;

<style>
    html, body {
        overflow-x: visible;
    }

    input {
        color: black !important;
    }
</style>
<div class="site-layout-background" style="padding: 24px;">
    <div class="mms-nav-title">
        <div class="mms-text-title px-4 py-3">ค่าบริการทางการแพทย์ส่งเสริมสุขภาพและป้องกันโรค</div>
    </div>
    <div class="container py-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item " style="cursor: pointer;" aria-current="page" @onclick="()=> goBack(1)">
                    <span class="breadcum-sucress py-2">บันทึกรายการตรวจ/รายสถานประกอบการ</span>
                </li>
                <li class="breadcrumb-item" aria-current="page">
                    <span class="breadcum-process py-2">@reserveH.CompanyName</span>
                </li>
            </ol>
        </nav>
        <hr />
        <div class="row pb-3">
            <div class="col-xl-4">
                <div class="row">
                    <div class="col-sm-12 col-md-3">
                        <div class="mms-txt-headdetail">วันที่สร้าง</div>&nbsp;
                    </div>
                    <div class="col-sm-12 col-md-7">
                        <Input @bind-Value="@showCreateDate" ReadOnly Disabled />
                    </div>
                </div>
            </div>
            <div class="col-xl-4">
                <div class="row">
                    <div class="col-sm-12 col-md-3">
                        <div class="mms-txt-headdetail">วันที่แก้ไขล่าสุด</div>&nbsp;
                    </div>
                    <div class="col-sm-12 col-md-7">
                        <Input @bind-Value="@showUpdateDate" ReadOnly Disabled />
                    </div>
                </div>
            </div>
            <div class="col-xl-4">
                <div class="row">
                    <div class="col-sm-12 col-md-3">
                        <div class="mms-txt-headdetail">แก้ไขล่าสุดโดย</div>&nbsp;
                    </div>
                    <div class="col-sm-12 col-md-7">
                        <Input @bind-Value="@reserveH.UpdateBy" ReadOnly Disabled />
                    </div>
                </div>
            </div>
        </div>
        <div class="row pb-4">
            <div class="col-xl-6">
                <div class="row">
                    <div class="col-sm-12 col-md-4">
                        <div class="mms-txt-headdetail">เลขที่บัญชีนายจ้าง</div>&nbsp;
                    </div>
                    <div class="col-sm-12 col-md-8">
                        <Input @bind-Value="@reserveH.CompanyAccNo" ReadOnly Disabled />
                        
                    </div>
                </div>
            </div>

            <div class="col-xl-6">
                <div class="row">
                    <div class="col-sm-12 col-md-4">
                        <div class="mms-txt-headdetail text-md-end">เลขที่นิติบุคคล</div>&nbsp;
                    </div>
                    <div class="col-sm-12 col-md-8">
                        <Input @bind-Value="@reserveH.CompanyTaxNo" ReadOnly Disabled />
                        
                    </div>
                </div>
            </div>
        </div>

        <div class="row pb-4">
            <div class="col-xl-6">
                <div class="row">
                    <div class="col-sm-12 col-md-4">
                        <div class="mms-txt-headdetail">ชื่อสถานประกอบการ</div>&nbsp;
                    </div>
                    <div class="col-sm-12 col-md-8">
                        <Input @bind-Value="@reserveH.CompanyName" ReadOnly Disabled />
                        
                    </div>
                </div>
            </div>
            <div class="col-xl-6 ">
                <div class="row">
                    <div class="col-sm-12 col-md-4">
                        <div class="mms-txt-headdetail text-md-end">เลขสาขา</div>&nbsp;
                    </div>
                    <div class="col-sm-12 col-md-8">
                        <Input @bind-Value="@reserveH.CompanyBranch" ReadOnly Disabled />
                       
                    </div>
                </div>
            </div>

        </div>
        <div class="row pb-4">
            <div class="col-xl-6">
                <div class="row">
                    <div class="col-sm-12 col-md-4">
                        <div class="mms-txt-headdetail">ชื่อ-นามสกุล HR</div>&nbsp;
                    </div>
                    <div class="col-sm-12 col-md-8">
                        <Input @bind-Value="@reserveH.HrName" ReadOnly Disabled />
                        
                    </div>
                </div>
            </div>

            <div class="col-xl-6">
                <div class="row">
                    <div class="col-sm-12 col-md-4">
                        <div class="mms-txt-headdetail text-md-end">เบอร์ติดต่อ HR</div>&nbsp;
                    </div>
                    <div class="col-sm-12 col-md-8">
                        <Input @bind-Value="@reserveH.HrPhone" ReadOnly Disabled />
                        
                    </div>
                </div>
            </div>
        </div>
        <div class="row pb-4">
            <div class="col-xl-6">
                <div class="row">
                    <div class="col-sm-12 col-md-4">
                        <div class="mms-txt-headdetail">อีเมล HR</div>&nbsp;
                    </div>
                    <div class="col-sm-12 col-md-8">
                        <Input @bind-Value="@reserveH.HrEmail" ReadOnly Disabled />
                        
                    </div>
                </div>
            </div>
        </div>
        <div class="row pb-4">
            <div class="col-xl-12">
                <div class="row">
                    <div class="col-sm-12 col-md-2">
                        <div class="mms-txt-headdetail">ที่อยู่สถานประกอบการ</div>&nbsp;
                    </div>
                    <div class="col-sm-12 col-md-10">
                        <TextArea @bind-Value="@reserveH.CompanyAddr" ReadOnly Disabled Style="color: black"/>
                        
                    </div>
                </div>
            </div>
        </div>

        <div class="row pb-4">
            <div class="col-xl-4">
                <div class="row">
                    <div class="col-sm-12 col-md-6">
                        <div class="mms-txt-headdetail">วันที่จองตรวจ</div>&nbsp;
                    </div>
                    <div class="col-sm-12 col-md-6">
                        <DatePicker @bind-Value="@reserveStartDate" Picker="@DatePickerType.Date" Format="dd/MM/yyyy" Disabled="true" />
                        
                    </div>
                </div>
            </div>
            <div class="col-xl-4 px-4">
                <div class="row">
                    <div class="col-sm-12 col-md-2">
                        <div class="mms-txt-headdetail">ถึง</div>&nbsp;
                    </div>
                    <div class="col-sm-12 col-md-9">
                        <DatePicker @bind-Value="@reserveEndDate" Picker="@DatePickerType.Date" Format="dd/MM/yyyy" Disabled="true" Style="width: 70%; color:black" />
                       
                    </div>
                </div>
            </div>
        </div>

        @if (Checktype == 2 || Checktype == 3)
        {
            <div class="row pb-3">
                <div class="col-xl-4 mms-media-start">
                    <div class="mms-txt-headdetail" style="width: 52%;">จำนวนคนทั้งหมด</div>&nbsp;
                    <Input @bind-Value="@AllPatient" Style="width: 27%;color:black " ReadOnly Disabled  />
                </div>
                <div class="col-xl-4 mms-media-center" style="margin-left: -6%">
                    <div class="mms-txt-headdetail" style="width: 100%">จำนวนคนที่มีสิทธิ์ตรวจ</div>&nbsp;
                    <Input @bind-Value="@PatientI" Style="width: 27%; margin-left: -50%; color:black" ReadOnly Disabled />
                </div>
                <div class="col-xl-4 mms-media-end" style="margin-left: -5%;">
                    <div class="mms-txt-headdetail" style="width: 120%;">จำนวนคนที่ไม่มีสิทธิ์ตรวจ</div>&nbsp;
                    <Input @bind-Value="@PatientN" Style="width: 27%; margin-left: -65%; color:black" ReadOnly Disabled/>
                </div>
            </div>
            <div class="row pb-5">
                <div class="col-xl-4 mms-media-start">
                    <div class="mms-txt-headdetail" style="width: 52%">จำนวนรายการทั้งหมด</div>&nbsp;
                    <Input @bind-Value="@AllList" Style="width: 27%; color:black" ReadOnly Disabled  />
                </div>
                <div class="col-xl-4 mms-media-center" style="margin-left: -6%">
                    <div class="mms-txt-headdetail" style="width: 100%">จำนวนเงินทั้งหมด</div>&nbsp;
                    <Input @bind-Value="@AllAmount" Style="width: 27%; margin-left: -50%; color:black" ReadOnly Disabled />
                </div>
            </div>
           
            <div class="mms-media-between">
                <div class="mms-txt-headdetail" style="margin-top: 15px">รายละเอียดผู้ที่มีสิทธิ์ตรวจ </div>
                <Space Direction="@DirectionVHType.Vertical" Class="mms-btn-serch">
                    <SpaceItem>
                        <Search Placeholder="ข้อมูลที่ต้องการค้นหา.." EnterButton="true" />
                    </SpaceItem>
                </Space>
            </div>
            <Table DataSource='listCheckPermission.Where(x => x.DeleteStatus == "I")' TItem="CheckPermissionCheckListView" Bordered Size="TableSize.Small">
                <ColumnDefinitions>
                    <ActionColumn Title="Action" Width="50" Align="ColumnAlign.Center">
                        <CellRender Context="cellData">
                            @String.Format("{0:d}", listCheckPermission.Where(x => x.DeleteStatus == "I").ToList().IndexOf(context) + 1)
                        </CellRender>
                    </ActionColumn>
                    <PropertyColumn Property="c=>c.PersonalId" Width="100" Align="ColumnAlign.Center" />
                    <ActionColumn Title="Action" Width="80" Align="ColumnAlign.Center">
                        <CellRender Context="cellData">
                            <div>@context.PatientName</div>
                            <div>@context.PatientSurname</div>
                        </CellRender>
                    </ActionColumn>

                    @if (context.checklistMs != null)
                    {

                        @foreach (var item in context.checklistMs)
                        {
                            <ActionColumn Title="Action" Width="10" Align="ColumnAlign.Center">
                                <CellRender Context="cellData">
                                    @if (item.statuscheck == true)
                                    {
                                        <i class="fa-solid fa-check"></i>
                                    }
                                    else
                                    {
                                        <i class="fa-solid fa-xmark" style="color: #F24E1E"></i>
                                    }
                                </CellRender>
                            </ActionColumn>
                        }




                    }

                    <PropertyColumn Property="c=>c.Allcount" Width="50" Align="ColumnAlign.Center" />
                    <PropertyColumn Property='c=>c.ChecklistPriceAll.ToString("N0")' Width="50" Align="ColumnAlign.Center" />
                    @{
                        checkHearing = listCheckPermission.Where(x => x.DeleteStatus == "I").Count(x => x.checklistMs[0].statuscheck == true);
                        checkBreast = listCheckPermission.Where(x => x.DeleteStatus == "I").Count(x => x.checklistMs[1].statuscheck == true);
                        checkEye1 = listCheckPermission.Where(x => x.DeleteStatus == "I").Count(x => x.checklistMs[2].statuscheck == true);
                        checkSnelleneye = listCheckPermission.Where(x => x.DeleteStatus == "I").Count(x => x.checklistMs[3].statuscheck == true);
                        checkCBC = listCheckPermission.Where(x => x.DeleteStatus == "I").Count(x => x.checklistMs[4].statuscheck == true);
                        checkUA = listCheckPermission.Where(x => x.DeleteStatus == "I").Count(x => x.checklistMs[5].statuscheck == true);
                        checkFBS = listCheckPermission.Where(x => x.DeleteStatus == "I").Count(x => x.checklistMs[6].statuscheck == true);
                        checkCR = listCheckPermission.Where(x => x.DeleteStatus == "I").Count(x => x.checklistMs[7].statuscheck == true);
                        checkLP = listCheckPermission.Where(x => x.DeleteStatus == "I").Count(x => x.checklistMs[8].statuscheck == true);
                        checkHBsAag = listCheckPermission.Where(x => x.DeleteStatus == "I").Count(x => x.checklistMs[9].statuscheck == true);
                        checkPapSmear = listCheckPermission.Where(x => x.DeleteStatus == "I").Count(x => x.checklistMs[10].statuscheck == true);
                        checkVIA = listCheckPermission.Where(x => x.DeleteStatus == "I").Count(x => x.checklistMs[11].statuscheck == true);
                        checkFOBT = listCheckPermission.Where(x => x.DeleteStatus == "I").Count(x => x.checklistMs[12].statuscheck == true);
                        checkChestXray = listCheckPermission.Where(x => x.DeleteStatus == "I").Count(x => x.checklistMs[13].statuscheck == true);
                        AllAmount = listCheckPermission.Where(x => x.DeleteStatus == "I").Sum(x => x.ChecklistPriceAll).ToString("N0");
                        AllList = listCheckPermission.Where(x => x.DeleteStatus == "I").Sum(x => x.Allcount).ToString("N0");
                    }
                    <ActionColumn Title="Action" Width="10" Align="ColumnAlign.Center">
                        <CellRender Context="cellData">
                            @if (context.ReadDate != null)
                            {
                                <img class="mx-2" title="แก้ไข" src="helper_shared/PortalAdminImage/edit.png" style="width:24px;height:24px; cursor:pointer;" @onclick=@(() => goEdit(6, null, context.CheckupId)) />

                            }
                            else
                            {
                                <i class="fa-solid fa-circle" style="color: #C3DA95; font-size: 25px; cursor:pointer;" @onclick=@(() => goEdit(4, @context.PersonalId, @context.CheckupId))></i>

                            }
                        </CellRender>
                    </ActionColumn>
                    <SummaryRow>
                        <SummaryCell ColSpan="3" Align="ColumnAlign.Center">รวม</SummaryCell>
                        <SummaryCell Align="ColumnAlign.Center">
                            <Text>@checkHearing</Text>
                        </SummaryCell>
                        <SummaryCell Align="ColumnAlign.Center">
                            <Text>@checkBreast</Text>
                        </SummaryCell>
                        <SummaryCell Align="ColumnAlign.Center">
                            <Text>@checkEye1</Text>
                        </SummaryCell>
                        <SummaryCell Align="ColumnAlign.Center">
                            <Text>@checkSnelleneye</Text>
                        </SummaryCell>
                        <SummaryCell Align="ColumnAlign.Center">
                            <Text>@checkCBC</Text>
                        </SummaryCell>
                        <SummaryCell Align="ColumnAlign.Center">
                            <Text>@checkUA</Text>
                        </SummaryCell>
                        <SummaryCell Align="ColumnAlign.Center">
                            <Text>@checkFBS</Text>
                        </SummaryCell>
                        <SummaryCell Align="ColumnAlign.Center">
                            <Text>@checkCR</Text>
                        </SummaryCell>
                        <SummaryCell Align="ColumnAlign.Center">
                            <Text>@checkLP</Text>
                        </SummaryCell>
                        <SummaryCell Align="ColumnAlign.Center">
                            <Text>@checkHBsAag</Text>
                        </SummaryCell>
                        <SummaryCell Align="ColumnAlign.Center">
                            <Text>@checkPapSmear</Text>
                        </SummaryCell>
                        <SummaryCell Align="ColumnAlign.Center">
                            <Text>@checkVIA</Text>
                        </SummaryCell>
                        <SummaryCell Align="ColumnAlign.Center">
                            <Text>@checkFOBT</Text>
                        </SummaryCell>
                        <SummaryCell Align="ColumnAlign.Center">
                            <Text>@checkChestXray</Text>
                        </SummaryCell>
                        <SummaryCell Align="ColumnAlign.Center">
                            <Text>@AllList</Text>
                        </SummaryCell>
                        <SummaryCell Align="ColumnAlign.Center">
                            <Text>@AllAmount</Text>
                        </SummaryCell>

                    </SummaryRow>

                </ColumnDefinitions>

                <HeaderTemplate>
                    <TableRow>

                        <SimpleTableHeader RowSpan="4">ลำดับ</SimpleTableHeader>
                        <SimpleTableHeader RowSpan="4">เลขประจำตัวประชาชน</SimpleTableHeader>
                        <SimpleTableHeader RowSpan="4">ชื่อ-นามสกุล </SimpleTableHeader>
                        <SimpleTableHeader ColSpan="15">รายการที่ตรวจได้</SimpleTableHeader>
                        <SimpleTableHeader RowSpan="4">จำนวนเงิน </SimpleTableHeader>
                        <SimpleTableHeader RowSpan="4">ยืนยันตัวตน </SimpleTableHeader>

                    </TableRow>
                    <TableRow>

                        @foreach (var dataM in chcklistMView)
                        {
                            <SimpleTableHeader>@dataM.ChecklistShortname</SimpleTableHeader>
                        }


                        <SimpleTableHeader>ทั้งหมด</SimpleTableHeader>
                        @*<SimpleTableHeader RowSpan="3">หู</SimpleTableHeader>
                    <SimpleTableHeader>เต้านม</SimpleTableHeader>
                    <SimpleTableHeader>ตา</SimpleTableHeader>
                    <SimpleTableHeader>ตา</SimpleTableHeader>
                    <SimpleTableHeader>CBC</SimpleTableHeader>
                    <SimpleTableHeader>UA</SimpleTableHeader>
                    <SimpleTableHeader>FBS</SimpleTableHeader>
                    <SimpleTableHeader>CR</SimpleTableHeader>
                    <SimpleTableHeader>LP</SimpleTableHeader>
                    <SimpleTableHeader>HBsAg</SimpleTableHeader>
                    <SimpleTableHeader>PaP Smear</SimpleTableHeader>
                    <SimpleTableHeader>VIA</SimpleTableHeader>
                    <SimpleTableHeader>FOBT</SimpleTableHeader>
                    <SimpleTableHeader>Chest X-Ray</SimpleTableHeader>
                    <SimpleTableHeader>ทั้งหมด</SimpleTableHeader>*@
                    </TableRow>

                </HeaderTemplate>

            </Table>

            <div class="mms-media-between pt-5">
                <div class="mms-txt-headdetail" style="margin-top: 15px">รายละเอียดผู้ที่ไม่มีสิทธิ์ตรวจ </div>
                <Space Direction="@DirectionVHType.Vertical" Class="mms-btn-serch">
                    <SpaceItem>
                        <Search Placeholder="ข้อมูลที่ต้องการค้นหา.." EnterButton="true" />
                    </SpaceItem>
                </Space>
            </div>
            <Table DataSource='listCheckPermission.Where(x => x.DeleteStatus == "N")' TItem="CheckPermissionCheckListView" RowClassName="@(_=>"editable-row")" Bordered ScrollX="1000">
                <ChildContent Context="data">
                    <Column TData="string" Title="ลำดับ" Width="10%" Style="text-align:center;">
                        @String.Format("{0:d}", listCheckPermission.Where(x => x.DeleteStatus == "N").ToList().IndexOf(data) + 1)
                    </Column>
                    <Column TData="string" Title="เลขประจำตัวประชาชน" Width="20%" Style="text-align:center;">
                        @data.PersonalId
                    </Column>
                    <Column TData="string" Title="ชื่อ-นามสกุล" Width="20%" Style="text-align:center;">
                        @data.PatientName @data.PatientSurname
                    </Column>
                    <Column TData="string" Title="หมายเหตุ" Width="50%" Style="text-align:center;">
                        @data.Remark
                    </Column>
                </ChildContent>
            </Table>
        }
        <div class="mms-media-between pt-5">
            <div>
                <Button Type="@ButtonType.Primary" @onclick=@(() => healthCheck()) style="padding: 4px 30px"><i class="fa-regular fa-floppy-disk"></i> &nbsp; ตรวจแล้ว</Button>
            </div>


            <div>
                <Button Type="@ButtonType.Default" @onclick=@(() => goBack(1)) style="padding: 4px 30px; margin-left: -10%;"><i class="fa-solid fa-circle-chevron-left"></i> &nbsp; ย้อนกลับ</Button>
            </div>
            @*<div>
            <Button Type="@ButtonType.Primary" style="padding: 4px 30px"><i class="fa-regular fa-floppy-disk"></i> &nbsp; บันทึก</Button>
            </div>*@

        </div>

    </div>
</div>

@if (DialogIsOpenSave)
{
    <ModalSaveChange OnClose="@OnDialogCloseSave" title="ยืนยันการตรวจใช่หรือไม่" description="">
    </ModalSaveChange>
}

@if (isloading == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}

@code {
    [Parameter]
    public EventCallback<(int, string, decimal, string)> IndexPage { get; set; }


    [Parameter]
    public decimal ReserveID { get; set; }

    [Parameter]
    public int Checktype { get; set; }

    public bool DialogIsOpenSave = false;
    List<CheckPermissionCheckListView> listCheckPermission = new List<CheckPermissionCheckListView>();
    ReserveH reserveH = new ReserveH();
    List<UploadFileItem> fileList = new List<UploadFileItem>();
    public IBrowserFile bannerFile;
    public string FileName = "";
    public string ImageUri = "";
    public string imgpreview = "";
    ManageBookHealthCheckupView ReserveAndCheckup = new ManageBookHealthCheckupView();
    bool active = true;
    string _okText = "ยืนยัน";
    string _cancelText = "ยกเลิก";
    bool _visible1 = false;
    public string? AllPatient;
    public string? PatientI;
    public string? PatientN;
    public string? AllList;
    public string? AllAmount;
    public int? checkHearing;
    public int? checkBreast;
    public int? checkEye1;
    public int? checkSnelleneye;
    public int? checkCBC;
    public int? checkUA;
    public int? checkFBS;
    public int? checkCR;
    public int? checkLP;
    public int? checkHBsAag;
    public int? checkPapSmear;
    public int? checkVIA;
    public int? checkFOBT;
    public int? checkChestXray;
    IList<IBrowserFile> files = new List<IBrowserFile>();
    public string? showCreateDate;
    public string? showUpdateDate;
    public DateTime? reserveStartDate;
    public DateTime? reserveEndDate;


    private void UploadFiles(InputFileChangeEventArgs e)
    {
        foreach (var file in e.GetMultipleFiles())
        {
            files.Add(file);
        }
        //TODO upload the files to the server

        fileList = files.Select(file => new UploadFileItem { FileName = file.Name, Size = file.Size }).ToList();
    }
    private void HandleOk(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible1 = false;
    }

    private void HandleCancel(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible1 = false;
    }
    public bool isloading = false;
    string txtValue { get; set; } = "";
    List<ChecklistM> chcklistMView = new List<ChecklistM>();
    string Value { get; set; } = "DevTest";
    List<Todo> todos = new List<Todo>();
    List<Todo> todose = new List<Todo>();
    public async Task goEdit(int item, string? identificationnumber, decimal checkupId)
    {
        await IndexPage.InvokeAsync((item, identificationnumber, checkupId, "Establishment"));
    }
    public async Task goBack(int item)
    {
        await IndexPage.InvokeAsync((item, null, 0, null));
    }


    RenderFragment _audioIcon =@<Icon Type="audio" Theme="outline" Style="color: #1890ff" />;


    protected override async Task OnInitializedAsync()
    {
        isloading = true;
        
        ReserveAndCheckup = await bookHealthCheckupServices.GetReserveById(Convert.ToInt32(ReserveID));
        listCheckPermission = ReserveAndCheckup.person;
        reserveH = ReserveAndCheckup.dataCompany;
        AllPatient = listCheckPermission.Count().ToString("N0");
        PatientI = listCheckPermission.Where(x => x.DeleteStatus == "I").Count().ToString("N0");;
        PatientN = listCheckPermission.Where(x => x.DeleteStatus == "N").Count().ToString("N0"); ;
        showCreateDate = reserveH.CreateDate?.AddYears(543).ToString("dd/MM/yyyy");
        showUpdateDate = reserveH.UpdateDate?.AddYears(543).ToString("dd/MM/yyyy");
        reserveStartDate = reserveH.ReserveStartDate?.AddYears(543);
        reserveEndDate = reserveH.ReserveEndDate?.AddYears(543);
        foreach (var data in listCheckPermission.Where(x => x.DeleteStatus == "I"))
        {
            AllAmount += Decimal.ToInt32(data.ChecklistPriceAll);
            AllList += data.Allcount;
        }
        for (var i = 0; i < listCheckPermission.Count(); i++)
        {
            chcklistMView = listCheckPermission[0].checklistMs;
        }

        if (Checktype == 3 || Checktype == 4)
        {
            txtValue = "test";
        }
        todos = new List<Todo>()
        {
        new Todo() {
                Id = 1,
                identification = "1103245294501",
                name = "นายสม ศรี"
            },
                     new Todo() {
                 Id = 2,
                identification = "1103245294502",
                name = "นายศรร ศรี"
            },
                    new Todo() {
                Id = 3,
                identification = "1103245294503",
                name = "นายสม ศรร"
            },
                    new Todo() {
                Id = 4,
                identification = "1103245294504",
                name = "นายนัม เบอวัน"
            },
                    new Todo() {
                Id = 5,
                identification = "1103245294505",
                name = "นายนัม เบอทรู"
            },
        };


        isloading = false;
        StateHasChanged();


    }

    public async void healthCheck()
    {
        DialogIsOpenSave = true;
    }

    private async Task OnDialogCloseSave(bool isOk)
    {
        if (isOk)
        {
            isloading = true;

            var res = await bookHealthCheckupServices.UpdateReserveStatus(ReserveID, "3");

            if (res == "success")
            {
                isloading = false;
                StateHasChanged();
                await Swal.FireAsync(
                      "ยืนยีนการตรวจเรียบร้อย",
                      null,
                      SweetAlertIcon.Success
                      );
                await IndexPage.InvokeAsync((1, null, 0, null));
            }
            else
            {
                isloading = false;
                StateHasChanged();
                await Swal.FireAsync(
                  "ยืนยีนการตรวจไม่สำเร็จ",
                      null,
                      SweetAlertIcon.Error
                      );

            }
        }
        DialogIsOpenSave = false;
    }


    public async void addItem()
    {
        _visible1 = true;
    }

    public class Todo
    {

        public int Id { get; set; }
        public string identification { get; set; }
        public string name { get; set; }

    }

    public async Task LoadFile(InputFileChangeEventArgs inputFileChangeEventArgs)
    {

        FileName = inputFileChangeEventArgs.File.Name;
        bannerFile = inputFileChangeEventArgs.File;
        // Handle CSV file
        if (inputFileChangeEventArgs.File.ContentType == "text/csv")
        {
            using Stream csvStream = inputFileChangeEventArgs.File.OpenReadStream();
            using StreamReader reader = new StreamReader(csvStream);
            string csvContent = await reader.ReadToEndAsync();
            var CsvContent = csvContent; // You can handle the CSV content as needed
            var CsvBase64 = Convert.ToBase64String(Encoding.UTF8.GetBytes(csvContent));
        }

        // Handle XLSX file
        if (inputFileChangeEventArgs.File.ContentType == "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")
        {
            using Stream xlsxStream = inputFileChangeEventArgs.File.OpenReadStream();
            using MemoryStream ms = new MemoryStream();
            await xlsxStream.CopyToAsync(ms);
            var XlsxBytes = ms.ToArray();
            var XlsxBase64 = Convert.ToBase64String(XlsxBytes);
        }

        StateHasChanged();
    }

}

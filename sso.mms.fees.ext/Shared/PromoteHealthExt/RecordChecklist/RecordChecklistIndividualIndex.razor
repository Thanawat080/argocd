@inject ModalService _modalService
@using Blazored.LocalStorage;
@inject ILocalStorageService _localstorage;
@using sso.mms.fees.ext.Providers.PromoteHealth.RecordChecklist;
@inject RecordChecklistServices recordChecklistServices;

<style>
    html, body {
        overflow-x: visible;
    }
</style>

<div class="site-layout-background" style="padding: 24px;">
    <div class="mms-nav-title">
        <div class="mms-text-title px-4 py-3">ค่าบริการทางการแพทย์ส่งเสริมสุขภาพและป้องกันโรค</div>
    </div>
    <div class="container py-4">    
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item" aria-current="page">
                    <span class="breadcum-process py-2">บันทึกรายการตรวจ/รายบุคคล</span>
                </li>
            </ol>
        </nav>
        <hr style="width:100%" />
        <div class="mms-media-start w-50">

            @*            <div>
            <Button Type="primary" OnClick="@(()=>{ _visible = true; })">
            <i class="fa-solid fa-magnifying-glass"></i> &nbsp; ค้นหา
            </Button>
            </div>*@
        </div>
        <div class="mms-media-between">
            <div>
                <Button Type="@ButtonType.Primary" @onclick=@(() => goEdit(2, 0)) style="padding: 4px 30px"><i class="fa-solid fa-circle-plus"></i> &nbsp; เพิ่ม</Button>
            </div>

            <Space Direction="@DirectionVHType.Vertical" Class="mms-btn-serch">
                <SpaceItem>
                    <Search Placeholder="ข้อมูลที่ต้องการค้นหา.." EnterButton="true" />
                </SpaceItem>
            </Space>

        </div>


        <Table DataSource='recordChecklistView.Where(x => x.UseStatus == "W" || x.UseStatus == "D").OrderByDescending(x => x.CheckupId)' TItem="GetRecordChecklistView" RowClassName="@(_=>"editable-row")" Bordered ScrollX="1000">
            <ChildContent Context="data">
                <Column TData="string" Title="ลำดับ" Width="7%" Style="text-align:center;">
                    @String.Format("{0:d}", recordChecklistView.Where(x => x.UseStatus == "W" || x.UseStatus == "D").OrderByDescending(x => x.CheckupId).ToList().IndexOf(data) + 1)
                </Column>
                <Column TData="string" Title="เลขประจำตัวประชาชน" Width="19%" Style="text-align:center;">
                    @data.PersonalId
                </Column>
                <Column TData="string" Title="ชื่อ-นามสกุล" Width="19%" Style="text-align:center;">
                    @data.PatientName @data.PatientSurname.
                </Column>
                <Column TData="string" Title="วันที่ตรวจ" Width="16%" Style="text-align:center;">
                    @data.CheckupDate?.AddYears(543).ToString("dd/MM/yyyy")
                </Column>
                <Column TData="string" Title="ตรวจแล้ว" Width="16%" Style="text-align:center;">
                    @data.CountIsCheck/@data.CountPrivileges
                </Column>
                <Column TData="string" Title="สถานะ" Width="16%" Style="text-align:center; color: black;">
                    
                    @if (data.UseStatus == "W")
                    {
                        <div>รอผลตรวจ</div>
                    }
                    else if (data.UseStatus == "D")
                    {
                        <div>บันทึกผลตรวจแล้ว</div>
                    }
                   
                </Column>
                <Column TData="string" Width="7%" Style="text-align:center;">

                    <img class="mx-2" title="แก้ไข" src="helper_shared/PortalAdminImage/edit.png" style="width:24px;height:24px; cursor:pointer;" @onclick=@(() => goEdit(4, data.CheckupId)) />

                </Column>
            </ChildContent>
        </Table>
    </div>
</div>
@if (isloading == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}
<Modal Title="@title"
       Visible="@_visible"
       OnOk="@HandleOk"
       OnCancel="@HandleCancel">
    <p>Some contents...</p>
    <p>Some contents...</p>
    <p>Some contents...</p>
</Modal>

@code {
    [Parameter]
    public EventCallback<(int, decimal, string)> IndexPage { get; set; }
    List<GetRecordChecklistView> recordChecklistView = new List<GetRecordChecklistView>();
    public async Task goEdit(int item, decimal checkupId)
    {
        await IndexPage.InvokeAsync((item, checkupId, "Individual"));
    }
    public string hosmCode { get; set; } = "";
    public bool isloading = false;
    RenderFragment _audioIcon =@<Icon Type="audio" Theme="outline" Style="color: #1890ff" />;


    protected async override void OnInitialized()
    {
        isloading = true;
        StateHasChanged();
        hosmCode = await _localstorage.GetItemAsync<String>("hospitalMCode");
        recordChecklistView = await recordChecklistServices.GetAllRecordChecklistByUser(hosmCode);
        isloading = false;
        StateHasChanged();

    }


    private void OnBlur()
    {
        Console.WriteLine("blur");
    }

    private void OnFocus()
    {
        Console.WriteLine("focus");
    }

    private void OnSearch(string value)
    {
        Console.WriteLine($"search: {value}");
    }


    public class ItemData
    {
        public int Id { get; set; }
        public string Identification { get; set; }
        public string name { get; set; }
        public string date { get; set; }
        public string count { get; set; }
        public string status { get; set; }
    };



    string title = "BasicModal";
    bool _visible = false;

    private void HandleOk(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible = false;
    }

    private void HandleCancel(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible = false;
    }

}

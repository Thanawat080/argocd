@using sso.mms.fees.ext.Shared._72Hours.RecordWithdrawal.Modals

<style>
    .table-modal-custom .ant-table-thead > tr > th {
        position: relative;
        color: #ffffff !important;
        font-weight: 600 !important;
        text-align: center !important;
        background: #3B6C43 !important;
        border-bottom: 1px solid #ffffff !important;
        transition: background 0.3s ease;
    }

</style>
<div class="row">
    <div class="col-sm-12 col-lg-8 mms-media-start align-items-end">
        <div class="mms-txt-headdetail">ค่าอุปกรณ์</div>
    </div>
    <div class="col-sm-12 col-lg-4 mms-media-end">
        <Space Direction="@DirectionVHType.Vertical" Class="mms-btn-serch w-100">
            <SpaceItem>
                <Search Placeholder="ข้อมูลที่ต้องการค้นหา..." EnterButton="true" />
            </SpaceItem>
        </Space>
    </div>
</div>
<hr />
<div class="row py-2">
    <div class="col-sm-12 col-md-6 pLayers-2">
        <div class="row align-items-center">
            <div class="col-6 mms-txt-headdetail text-end">รวมจำนวนเงินที่เบิกได้ (ตามประกาศ)</div>
            <div class="col-6 d-flex align-items-center">
                <Input Placeholder="Basic usage" @bind-Value="@txtValue" Disabled />
                <div class=" mms-text-gray text-start ps-4 w-auto">บาท</div>
            </div>
        </div>
    </div>
    <div class="col-sm-12 col-md-6 pLayers-2">
        <div class="row align-items-center">
            <div class="col-6 mms-txt-headdetail text-end">รวมจำนวนเงิน (ตามค่ารักษาจริง)</div>
            <div class="col-6 d-flex align-items-center">
                <Input Placeholder="Basic usage" @bind-Value="@txtValue" Disabled />
                <div class=" mms-text-gray text-start ps-4 w-auto">บาท</div>
            </div>
        </div>
    </div>
</div>
<div>
    <Table Class="table-modal-custom" DefaultExpandAllRows DataSource="GetData" @bind-SelectedRows="selectedRows" TreeChildren="item=>item.Children" Bordered HidePagination="false" ScrollX="1000">
        <ColumnDefinitions>
            <Selection Key="@context.Id" ColSpan="@GetColSpan(context.HosStauts)" Style="@GetColColor(context.HosStauts)" Align="@ColumnAlign.Center" Width="5%" />
            @if (context.ServeName == null)
            {
                <PropertyColumn Title="ลำดับ" Property="c=>c.Id" ColSpan="@GetColSpan(context.HosStauts , "name")" Style="@GetColColor(context.HosStauts , "name")" Width="5%" Align="@ColumnAlign.Left" />
            }
            else
            {
                <PropertyColumn Property="c=>c.ServeName" ColSpan="@GetColSpan(context.HosStauts , "name")" Style="@GetColColor(context.HosStauts , "name")" />
            }
            <PropertyColumn Title="รหัสการรักษา" Property="c=>c.MedCode" ColSpan="@GetColSpan(context.HosStauts)" Style="@GetColColor(context.HosStauts)" Align="@ColumnAlign.Center" />
            <PropertyColumn Title="ชื่อการรักษา" Property="c=>c.MedType" ColSpan="@GetColSpan(context.HosStauts)" Style="@GetColColor(context.HosStauts)" Align="@ColumnAlign.Center" />
            <PropertyColumn Title="จำนวน" Property="c=>c.MedType" ColSpan="@GetColSpan(context.HosStauts)" Style="@GetColColor(context.HosStauts)" Align="@ColumnAlign.Center">
                <div class="mms-media-center align-items-center">
                    <div class="mms-txt-headdetail pointer-hover" @onclick="() => DecrementCount(context.Id)"><i class=" fa-solid fa-circle-minus"></i></div>
                    <div class="mx-2">
                        <Input Placeholder="0" @bind-Value="@context.Count" Style="width:50px;" />
                    </div>
                    <div class="mms-txt-headdetail pointer-hover" @onclick="() => IncrementCount(context.Id)"><i class=" fa-solid fa-circle-plus"></i></div>
                </div>
            </PropertyColumn>
            <PropertyColumn Title="หน่วย" Property="c=>c.MedType" ColSpan="@GetColSpan(context.HosStauts)" Style="@GetColColor(context.HosStauts)" Align="@ColumnAlign.Center" />
            <PropertyColumn Title="จำนวนเงิน(ตามประกาศ)" Property="c=>c.Budjet" ColSpan="@GetColSpan(context.HosStauts)" Style="@GetColColor(context.HosStauts)" Align="@ColumnAlign.Center">
                @String.Format("{0:N}", context.Budjet)
            </PropertyColumn>
            <PropertyColumn Title="รวมจำนวนเงิน(เเต่ละอุปกรณ์)" Property="c=>c.BudjetReq" ColSpan="@GetColSpan(context.HosStauts)" Style="@GetColColor(context.HosStauts)" Align="@ColumnAlign.Center">
                <Input Type="number" @bind-Value="@context.BudjetReq" Disabled />
            </PropertyColumn>
            <PropertyColumn Title="จำนวนเงิน(ตามค่ารักษาจริง)" Property="c=>c.BudjetPay" ColSpan="@GetColSpan(context.HosStauts)" Style="@GetColColor(context.HosStauts)" Align="@ColumnAlign.Center">
                <Input Type="number" @bind-Value="@context.BudjetPay" />
            </PropertyColumn>
        </ColumnDefinitions>
        <PaginationTemplate>
            <Pagination Class="pt-2"
                        Total="context.Total"
                        PageSize="context.PageSize"
                        Current="context.PageIndex"
                            ShowSizeChanger
                        OnChange="context.HandlePageChange" />
        </PaginationTemplate>
            </Table>
        </div>

        @code {
    public string txtValue;
    [Parameter]
    public EventCallback<int> IndexPage { get; set; }
    /*-- Table --*/
    [Parameter]
    public List<AddListModel.Data> GetData { get; set; }
    [Parameter]
    public EventCallback<List<AddListModel.Data>> CallBack { get; set; }

    IEnumerable<AddListModel.Data> selectedRows;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await Task.Delay(500);

        await InvokeAsync(StateHasChanged);

        await Task.Delay(500);
    }
    private int GetColSpan(bool HosStauts, string columnTitle = "")
    {
        if (HosStauts == true)
            if (columnTitle == "name")
                return 9;
            else
                return 0;
        else
            return 1;
    }
    private string GetColColor(bool HosStauts, string columnTitle = "")
    {
        if (HosStauts == true)
            if (columnTitle == "name")
                return "background-color:#D8D6D6;";
            else
                return "";
        else
            return "";
    }

    private async void clickCheck()
    {
        List<AddListModel.Data> ListData = new List<AddListModel.Data>();
        if (selectedRows != null)
        {
            ListData = selectedRows.ToList();
            await CallBack.InvokeAsync(ListData);
        }
    }
    private int count = 1;
    private void IncrementCount(string id)
    {
        var obj = GetData.FirstOrDefault(w => w.Id == id);
        if (obj != null)
        {
            obj.Count++;
        }
        StateHasChanged();

    }

    private void DecrementCount(string id)
    {
        var obj = GetData.FirstOrDefault(w => w.Id == id);
        if (obj != null)
        {
            obj.Count--;
        }
        StateHasChanged();
    }
}
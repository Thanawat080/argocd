<div class="site-layout-background" style="padding: 24px;">
    <div class="mms-nav-title">
        <div class="mms-text-title px-4 py-3">ค่าบริการทางการแพทย์กรณีทุพพลภาพ >> งานวินิจฉัย >> รายละเอียดการประมวลผล</div>
    </div>
    <div class="container py-4">
        <div class="row pb-3" style="padding: 24px;">
            <div class="col-xl-3 mms-media-start">
                <div class="mms-txt-headdetail w-50">งวดที่</div>&nbsp;
                <Input Placeholder="Basic usage" @bind-Value="@txtValue" />
            </div>
            <div class="col-xl-4 mms-media-center">
                <div class="mms-txt-headdetail w-50">รหัสสถานพยาบาล</div>&nbsp;
                <Input Placeholder="Basic usage" @bind-Value="@txtValue" />
            </div>
            <div class="col-xl-4 mms-media-end">
                <Space Direction="@DirectionVHType.Horizontal">
                    <SpaceItem>
                        <Search Placeholder="เลขที่บัตรประจำตัวประชาชน" EnterButton="true" AllowClear />
                     </SpaceItem>
                 </Space>
             </div>
         </div>
         <hr />
     </div>
     <hr />
     <div class="site-layout-background" style="padding: 24px;">
         <Table Bordered DataSource=@data OnChange="OnChange" TItem="MockUpData" @ref="Table" @bind-PageSize="pageSize" Class="pb-5">
             <ChildContent>
                 <Selection Align="ColumnAlign.Center" Key="@(context.Id.ToString())" />
                 <PropertyColumn Title="ลำดับ" Property="c=>c!.Id" Align="ColumnAlign.Center" />
                 <PropertyColumn Title="งวด" Property="c=>c!.Installment" Align="ColumnAlign.Center" />
                 <PropertyColumn Title="เลขที่ประจำตัวประชาชน" Property="c=>c!.CitizenId" Width="100px" Align="ColumnAlign.Center" />
                 <PropertyColumn Title="ชื่อนามสกุล" Property="c=>c!.Name" Align="ColumnAlign.Center" />
                 <PropertyColumn Title="วันที่เข้ารักษา" Property="c=>c!.AdmitDate" Width="100px" Align="ColumnAlign.Center" />
                 <PropertyColumn Title="วันที่สิ้นสุดการรักษา" Property="c=>c!.TerminateDate" Align="ColumnAlign.Center" />
                 <PropertyColumn Title="จำนวนเงินค่ารักษา" Property="c=>c!.TreatmentFee" Width="100px" Align="ColumnAlign.Center" />
                 <PropertyColumn Title="สถานะ" Property="c=>c!.Status" Width="100px" Align="ColumnAlign.Center">

                     @if (@context.Status != "จ่ายแล้ว")
                    {
                        <div class="text-status" style="color:#F56C6C">@context.Status</div>
                    }
                    else
                    {
                        <div class="text-status" style="color:#009934">@context.Status</div>
                    }
                </PropertyColumn>
                 <PropertyColumn Title="" Width="100px" Property="c=>c!.ShowDetail">
                     <img class="mx-2" src="helper_shared/PortalAdminImage/eye.png"
                         style="width:24px;height:24px; cursor:pointer;" @onclick=@(()=>OpenViewWithdrawalModal(true)) />
                 </PropertyColumn>
             </ChildContent>
             <PaginationTemplate>
                <Pagination Class="pt-2" Total="context.Total"
                             PageSize="context.PageSize"
                             Current="context.PageIndex"
                                        ShowSizeChanger
                             OnChange="context.HandlePageChange" />
             </PaginationTemplate>
         </Table>
     </div>
 </div>
 <ViewWithdrawalModal _visible=@openViewWithdrawalModal OnClose="@OpenViewWithdrawalModal"></ViewWithdrawalModal>

 @inject IMessageService message;

 @using sso.mms.fees.ext.Shared.Disability.WithdrawalHistory.Modals
 @using System.ComponentModel.DataAnnotations;
 @using System.Text.Json;
 @using System.ComponentModel;

 @code {
    [Parameter]
    public EventCallback<int> IndexPage { get; set; }

    Table<MockUpData>? Table;

    int pageSize = 5;

    bool openViewWithdrawalModal { get; set; }


    class MockUpData
    {
        public MockUpData(
            int id,
            string installment,
            string citizenId,
            string name,
            string admitDate,
            string terminateDate,
            string hospitalName,
            string rwValue,
            string treatementFee,
            string calculateFee,
            string status,
            string showDetail)
        {
            Id = id;
            Installment = installment;
            CitizenId = citizenId;
            Name = name;
            AdmitDate = admitDate;
            TerminateDate = terminateDate;
            HospitalName = hospitalName;
            RWValue = rwValue;
            TreatmentFee = treatementFee;
            CalculateFee = calculateFee;
            Status = status;
            ShowDetail = showDetail;
        }
        public int Id { get; set; }
        public string Installment { get; set; }
        public string CitizenId { get; set; }
        public string Name { get; set; }
        public string AdmitDate { get; set; }
        public string TerminateDate { get; set; }
        public string HospitalName { get; set; }
        public string RWValue { get; set; }
        public string TreatmentFee { get; set; }
        public string CalculateFee { get; set; }
        public string Status { get; set; }
        public string ShowDetail { get; set; }

    }

    MockUpData[] data =
    {
        new(1,"6701","12467890","ดวงดี วิชัยวรศ์", "23 มิย 67","23 มิย 67","พญาไท","12","55000","45000", "จ่ายแล้ว",""),
        new(1,"6701","12467890","ดวงดี วิชัยวรศ์", "23 มิย 67","23 มิย 67","พญาไท","12","55000","45000","จ่ายแล้ว", "" ),
        new(1,"6701","12467890","ดวงดี วิชัยวรศ์", "23 มิย 67","23 มิย 67","พญาไท","12","55000","45000","จ่ายแล้ว", "" ),
        new(1,"6701","12467890","ดวงดี วิชัยวรศ์", "23 มิย 67","23 มิย 67","พญาไท","12","55000","45000","รอจ่าย", "" ),
        new(1,"6701","12467890","ดวงดี วิชัยวรศ์", "23 มิย 67","23 มิย 67","พญาไท","12","55000","45000","รอจ่าย", "" ),
    };


    void OnChange(AntDesign.TableModels.QueryModel<MockUpData> query)
    {
        Console.WriteLine(JsonSerializer.Serialize(query));
    }
    
    public void OpenViewWithdrawalModal(bool value)
    {
        openViewWithdrawalModal = value;
    }

    private string? txtValue { get; set; }
    private bool loading;

    private void Handle(string value)
    {
        Console.WriteLine(value);
    }

    public async Task goEdit(int item)
    {
        await IndexPage.InvokeAsync(item);
    }

    public async Task OnSearch()
    {
        await message.Loading($"searching {txtValue}", 2);
    }

    private async Task OnEnter(KeyboardEventArgs e)
    {
        Console.WriteLine("Enter pressed");
        loading = true;
        await Task.Delay(3000);
        loading = false;
    }

    string _size = ButtonSize.Large;

    void handleChange(string value)
    {
        Console.WriteLine(value);
    }

    void handleItemsChange(IEnumerable<string> value)
    {
        Console.WriteLine(value);
    }

    public class Model
    {
        public string? installment { get; set; }

        public string? hospitalID { get; set; }

    }
    private Model model = new Model();


}
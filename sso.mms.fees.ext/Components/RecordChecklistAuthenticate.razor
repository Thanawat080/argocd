@inject ModalService _modalService
@using sso.mms.fees.ext.Providers.PromoteHealth.BookHealthCheckup;
@using sso.mms.fees.ext.Providers.PromoteHealth.RecordChecklist;
@inject RecordChecklistServices recordChecklistServices;
@inject BookHealthCheckupServices bookHealthCheckupServices;
@using Blazored.LocalStorage;

@using sso.mms.helper.Utility;
@inject SweetAlertService Swal;
@inject ILocalStorageService _localstorage;

<style>


    .ant-select:not(.ant-select-customize-input) .ant-select-selector {
        border-radius: 6px;
        height: 40px
    }
</style>

<div class="site-layout-background" style="padding: 24px;">
    <div class="mms-nav-title">
        <div class="mms-text-title px-4 py-3">ค่าบริการทางการแพทย์ส่งเสริมสุขภาพและป้องกันโรค</div>
    </div>
    <div class="container py-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item " style="cursor: pointer;" aria-current="page" @onclick="()=> goBack()">
                    @if (Type == "Individual")
                    {
                        <span class="breadcum-sucress py-2">บันทึกรายการตรวจ/รายบุคคล</span>
                    }
                    else if (Type == "Dental")
                    {
                        <span class="breadcum-sucress py-2">กรณีทันตกรรม /บันทึกรายการตรวจ</span>
                    }
                    else
                    {
                        <span class="breadcum-sucress py-2">บันทึกรายการตรวจ/รายสถานประกอบการ</span>
                    }

                </li>
                <li class="breadcrumb-item" aria-current="page">
                    @if (Type == "Individual")
                    {
                        <span class="breadcum-process py-2">เพิ่มรายการ</span>
                    }
                    else if (Type == "Dental" && isChecked == false)
                    {
                        <span class="breadcum-process py-2">รายการผู้ใช้บริการ</span>

                    }
                    else if (Type == "Dental" && isChecked == true)
                    {
                        <span class="breadcum-process py-2">เพิ่ทผู้ใช้บริการ</span>

                    }
                    else
                    {
                        <span class="breadcum-process py-2">ตรวจสอบสิทธิ์</span>
                    }

                </li>
            </ol>
        </nav>
        <hr />
        <div class="mms-media-end">
            <Button Type="@ButtonType.Default" style="padding: 4px 30px"><i class="fa-solid fa-cloud-arrow-down"></i> &nbsp; ดาวน์โหลดโปรแกรมอ่านบัตร</Button>
        </div>
        @if (Type == "Dental")
        {
            <div class="mms-media-center" style="margin-bottom : 8%;margin-top : 5%">
              
                    <div class="container" align="center">
                        <div class="position-relative w-75">
                            <div class="progress" style="height: 6px;">
                                <div class="progress-bar w-50"></div>
                            </div>
                        </div>
                        <div class="container position-relative w-75">
                            <img class="step-img position-absolute top-0 start-0 translate-middle rounded-pill" src="helper_shared/FeesExtImage/step1-1.png" />
                            <img class="step-img position-absolute top-0 start-50 translate-middle rounded-pill" src="helper_shared/FeesExtImage/step2-2.png" />
                            <img class="step-img position-absolute top-0 start-100 translate-middle rounded-pill" src="helper_shared/FeesExtImage/step2-3.png" />
                        </div>
                        <div class="container position-relative w-75">
                            <div class="row">
                                <p class="step-tag active position-absolute top-0 start-0 translate-middle rounded-pill">ตรวจสอบสิทธิ์</p>
                                <p class="step-tag noneactive position-absolute top-0 start-50 translate-middle rounded-pill">บันทึกข้อมูลใช้บริการ</p>
                                <p class="step-tag noneactive position-absolute top-0 start-100 translate-middle rounded-pill">บันทึกรับเเจ้ง</p>
                            </div>
                        </div>
                    </div>
            </div>
        }
        else
                { <div class="mms-media-center mb-5">
                <div class="mms-txt-header py-2">ตรวจสอบสิทธิ์ผู้ประกันตนก่อนบันทึกรายการตรวจ</div>
                </div>
        }
         

        <div class="mms-media-center" style="margin-right: 6%;">
            <div class="mms-txt-headdetail" style="width: 18%; margin-right: 2%">
                เลขประจำตัวประชาชน /เลขบัตรประกันสังคม
                <span class="mms-txt-headdetail" style="color: red">*</span>
            </div>&nbsp;
            <Input @bind-Value="@personn.PersonalId" Style="width: 40%; margin-right: 2%;" />
            <Button Type="@ButtonType.Primary" style="padding: 4px 30px;">
                <i class="fa-regular fa-address-card" style="font-size: 16px"></i> &nbsp; อ่านบัตร
            </Button>
        </div>

        <div class="mms-media-center" style="padding-right: 17%;">
            <Checkbox @bind-Checked="isChecked">
            </Checkbox>
            <span style="padding-top: 0.5%; padding-left: 1%;">ต้องการกรอกเลข 13 หลักด้วยตนเอง</span>
        </div>
        @if (isChecked == false && Type == "Dental")
        {
            <div class="mms-media-start pb-4">

                <div class="mms-txt-headdetail" style="width: 31%; padding-left: 12%;">
                    วันที่ใช้สิทธิ์
                </div>&nbsp;
                <DatePicker TValue="DateTime?" Picker="@DatePickerType.Date" Format="dd/MM/yyyy" Disabled="true" @bind-Value="@TodayDental" Style="width: 37.5%;"></DatePicker>

            </div>


        }
        @if (isChecked == true)
        {
            <div class="mms-media-start pb-4">

                <div class="mms-txt-headdetail" style="width: 30.8%; padding-left: 12%;">
                    หมายเหตุ
                    <span class="mms-txt-headdetail" style="color: red">*</span>
                </div>&nbsp;

                <Select TItem="DropdownData"
                        TItemValue="string"
                        DataSource="@dropdownlist"
                        @bind-Value="@reson"
                        ValueName="@nameof(DropdownData.name)"
                        LabelName="@nameof(DropdownData.name)"
                        Style="width: 37.6%"
                        Placeholder="ระบุสาเหตุที่จะกรอกด้วยตนเอง"
                                AllowClear>
             </Select>
         </div>
            <div class="mms-media-start pb-4">
                <div class="mms-txt-headdetail" style="width: 31%; padding-left: 12%;">
                    Username Admin สถานพยาบาล
                    <span class="mms-txt-headdetail" style="color: red">*</span>
                </div>&nbsp;
                <Select TItem="AdminHos"
                        TItemValue="string"
                        DataSource="@admin"
                        @bind-Value="@AdminName"
                        ValueName="@nameof(AdminHos.username)"
                        LabelName="@nameof(AdminHos.username)"
                        Style="width: 37.6%"
                                AllowClear>
             </Select>
         </div>
            <div class="mms-media-start pb-4">
                <div class="mms-txt-headdetail" style="width: 24%; padding-left: 12%;">
                    Password Admin สถานพยาบาล
                    <span class="mms-txt-headdetail" style="color: red">*</span>
                </div>&nbsp;
                <Input @bind-Value="@passwordadmin" Style="width: 37.5%; margin-left: 7%" />
            </div>
        }
        <div class="mms-media-start pb-4">
            <div class="mms-txt-headdetail" style="width: 31%; padding-left: 12%;">
                เบอร์โทรศัพท์
                <span class="mms-txt-headdetail" style="color: red">*</span>
            </div>&nbsp;
            <Input @bind-Value="@personn.PatientTel" Style="width: 37.5%;" />
        </div>
        @if(Type == "Dental")
        {
            <div class="mms-media-start pb-4">

                <div class="mms-txt-headdetail" style="width: 31%; padding-left: 12%;">
                    ช่องทางการใช้บริการ
                    <span class="mms-txt-headdetail" style="color: red">*</span>
                </div>&nbsp;
                
                        <div class="col-4">
                    @foreach (var portalPort in options)
                    {
                        <div class="d-flex ">

                            <div class="form-check mms-media-center" style="width: 40%;" >
                                <input class="form-check-input" type="radio" id="@portalPort" name="selectedOption" value="@portalPort" @onchange="DentalChanged" checked="@isSelectedDental(portalPort)" />
                                <label class="mms-media-start" style="color:#909399" for="@portalPort">@portalPort</label>
                            </div>
                            @if (portalPort.Equals(options.Last()))
                            {

                                <Input Placeholder="ระบุรหัสรถ" @bind-Value="@txtValue" style="width:60%  ;margin-right: 2%;" />


                            }
                        </div>

                    }
               
                        </div>

            </div>
        }
        <div class="mms-media-center" style="padding-right: 17%;">
            @if (Type == "Dental")
            {
                <div>
                    <Button Type="@ButtonType.Default" @onclick="@goBack" style="padding: 4px 30px; margin-left: -10%;"><i class="fa-solid fa-circle-chevron-left"></i> &nbsp; ย้อนกลับ</Button>
                </div>
                <Button Type="@ButtonType.Default" style="padding: 4px 30px;  background: #3B6C43; border: none !important; color:white !important" @onclick=@(() => goEdit(2))>
                    <i class="fa-solid fa-magnifying-glass"></i> &nbsp; ตรวจสอบสิทธิ์
                </Button>

            }
            else
            {
                <div>
                    <Button Type="@ButtonType.Default" @onclick="@goBack" style="padding: 4px 30px; margin-left: -10%;"><i class="fa-solid fa-circle-chevron-left"></i> &nbsp; ย้อนกลับ</Button>
                </div>
                <Button Type="@ButtonType.Primary" style="padding: 4px 30px;" @onclick=@(() => goEdit(2))>
                    <i class="fa-solid fa-magnifying-glass"></i> &nbsp; ตรวจสอบสิทธิ์
                </Button>
            }
        </div>
    </div>
</div>
@if (isloading == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}


@code {
    [Parameter]
    public EventCallback<(int, AuthenPerson)> IndexPage { get; set; }

    [Parameter]
    public string Type { get; set; }
    [Parameter]
    public decimal CheckupId { get; set; }

    [Parameter]
    public string IdentificationNumber { get; set; }

    List<DropdownData> dropdownlist = new List<DropdownData>();
    apiview850 resFrom850 = new apiview850();
    person personn = new person();
    List<AdminHos> admin = new List<AdminHos>();
    AuthenPerson AuthenPerson = new AuthenPerson();
    string txtValue { get; set; } = "";
    bool isChecked = false;
    string? reson;
    string? AdminName;
    string? passwordadmin;
    public string hosmCode { get; set; } = "";
    public bool isloading = false;
    ManageRecordChecklistView recordChecklist = new ManageRecordChecklistView();

    //Dental
    List<string> options = new List<string> { "สถานพยาบาล", "รถทันตกรรม", };
    string portalPort;
    string Port;
    private DateTime? TodayDental = DateTime.Now;

    string phoneNumber;
    //
    public async void goBack()
    {
        if (Type == "Establishment")
        {
            await IndexPage.InvokeAsync((2, null));
        }
        else if (Type == "Dental")
        {
            await IndexPage.InvokeAsync((0, null));
        }
        else
        {
            await IndexPage.InvokeAsync((1, null));
        }
    }


    public async Task goEdit(int item)
    {
        isloading = true;
        StateHasChanged();
        AuthenPerson.Type = Type;
        AuthenPerson.Adminusername = AdminName;
        var res = await recordChecklistServices.CheckLoginAdmin(AdminName, passwordadmin);
        // by pass check password admin
        res = "success";
        //-----------------------------



        //for Establishment รายสถานประกอบการ
        if (Type == "Establishment")
        {
            recordChecklist = await recordChecklistServices.GetChecklistByCheckupId(CheckupId);
            if (IdentificationNumber == personn.PersonalId)
            {
                personn.Reson = reson;
                personn.UsernameAdmin = AdminName;
                personn.check850 = false;
                personn.CheckupId = CheckupId;
                personn.PatientName = recordChecklist.RecordCheckupHView.PatientName;
                personn.PatientSurname = recordChecklist.RecordCheckupHView.PatientSurname;
                personn.CheckChecklistM = false;
                AuthenPerson.Persons = personn;
                resFrom850 = await bookHealthCheckupServices.CheckPersonFrom850Api(AuthenPerson.Persons.PersonalId);

                if (res == "success" && resFrom850.personalId != null)
                {
                    if (resFrom850.status == false)
                    {
                        isloading = false;
                        AuthenPerson.Persons = new person();
                        StateHasChanged();
                        await Swal.FireAsync(
                                "ไม่มีสิทธ์ตรวจ",
                                null,
                                SweetAlertIcon.Error
                                );
                    }
                    else
                    {
                        isloading = false;
                        StateHasChanged();
                        await IndexPage.InvokeAsync((5, AuthenPerson));
                    }
                }
                else
                {
                    isloading = false;
                    AuthenPerson.Persons = new person();
                    StateHasChanged();
                    await Swal.FireAsync(
                            "รหัสผ่านAdminไม่ถูกต้อง",
                            null,
                            SweetAlertIcon.Error
                            );
                }
            }
            else
            {

                isloading = false;
                AuthenPerson.Persons = new person();
                StateHasChanged();
                await Swal.FireAsync(
                        "เลขบัตรประชาชนไม่ถูกต้อง",
                        null,
                        SweetAlertIcon.Error
                        );
            }
        }
        else if (Type == "Dental")
        {
            await IndexPage.InvokeAsync((item, null));
        }
        else
        {
            if (personn.PersonalId == null)
            {
                isloading = false;
                AuthenPerson.Persons = new person();
                StateHasChanged();
                await Swal.FireAsync(
                        "ไม่กรอกเลขบัตรประชาชน",
                        null,
                        SweetAlertIcon.Error
                        );
            }
            else
            {
                personn.Reson = reson;
                personn.UsernameAdmin = AdminName;
                personn.CheckChecklistM = false;
                AuthenPerson.Persons = personn;
                resFrom850 = await bookHealthCheckupServices.CheckPersonFrom850Api(AuthenPerson.Persons.PersonalId);

                if (res != null && resFrom850.personalId != null)
                {
                    if (resFrom850.status == false)

                    {
                        isloading = false;
                        AuthenPerson.Persons = new person();
                        StateHasChanged();
                        await Swal.FireAsync(
                                "ไม่มีสิทธ์ตรวจ",
                                null,
                                SweetAlertIcon.Error
                                );
                    }
                    else
                    {
                        AuthenPerson.Persons.default850 = true;
                        isloading = false;
                        StateHasChanged();
                        await IndexPage.InvokeAsync((item, AuthenPerson));
                    }
                }
                else
                {
                    isloading = false;
                    AuthenPerson.Persons = new person();
                    StateHasChanged();
                    await Swal.FireAsync(
                            "รหัสผ่านAdminไม่ถูกต้อง",
                            null,
                            SweetAlertIcon.Error
                            );
                }

            }

        }
        //await IndexPage.InvokeAsync(item);
    }

    RenderFragment _audioIcon =@<Icon Type="audio" Theme="outline" Style="color: #1890ff" />;


    protected async override void OnInitialized()
    {

        isloading = true;
        StateHasChanged();
        hosmCode = await _localstorage.GetItemAsync<String>("hospitalMCode");
        admin = await recordChecklistServices.GetAllRoleAdminByHosCode(hosmCode);
        dropdownlist = new List<DropdownData>()
        {
        new DropdownData()
            {
                Id = 1,
                name = "บัตรรุ่นเก่า ไม่สามารถอ่านบัตรได้"
            },
        new DropdownData()
            {
                Id = 2,
                name = "เครื่องอ่านบัตรเสีย"
            },
        new DropdownData()
            {
                Id = 3,
                name = "โปรแกรมอ่านบัตรไม่สามารถใช้งานได้"
            },
        new DropdownData()
            {
                Id = 4,
                name = "กรณีไม่มีหมายเลขบัตรประชาชน"
            },
        new DropdownData()
            {
                Id = 5,
                name = "ผู้ประกันจนต่างด้าว"
            },
        };


        isloading = false;
        StateHasChanged();


    }
    void DentalChanged(ChangeEventArgs e)
    {
        portalPort = e.Value.ToString();
        if (portalPort == "สถานพยาบาล")
        {
            Port = "H";
        }
        else
        {
            Port = "C";
        }
    }
    bool isSelectedDental(string option) => portalPort == option;


    private void OnBlur()
    {
        Console.WriteLine("blur");
    }

    private void OnFocus()
    {
        Console.WriteLine("focus");
    }

    private void OnSearch(string value)
    {
        Console.WriteLine($"search: {value}");
    }

    public class DropdownData
    {
        public int Id { get; set; }
        public string name { get; set; }
    };

    public class ItemData
    {
        public int Id { get; set; }
        public string Identification { get; set; }
        public string name { get; set; }
        public string date { get; set; }
        public string count { get; set; }
        public string status { get; set; }
    };



    string title = "BasicModal";
    bool _visible = false;

    private void HandleOk(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible = false;
    }

    private void HandleCancel(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible = false;
    }

}

@using System.ComponentModel.DataAnnotations;
@using sso.mms.fees.admin.Providers.VerifyAdminIdentify
@inject VerifyAdminIdentifyServices verifyAdminIdentifyServices

@{
    RenderFragment footer = @<Template>
        <div class="justify-content-center align-content-center" style="display: flex">
            <Button OnClick="Verify" @key="@( "submit" )" Type="primary" style="padding: 4px 30px">ยืนยัน</Button>
        </div>
    </Template>;
    RenderFragment closeIcon =@<div><i class="fa-regular fa-circle-xmark" style="font-size: 24px; color: #224183;"></i></div>;
}
<Modal Title="@("")"
       Visible="true"
       Closable
       CloseIcon="closeIcon"
       Footer="@footer">
    <div class="mms-media-center flex-column">
        <div class="mms-media-center" style="width:94px;height:94px;background:#C5CBE6;border-radius:50%;color:#334396;font-size:44px;">
            <i class="fa-solid fa-user"></i>
        </div>

        <label class="mms-txt-headdetail my-4">กรุณาใส่รหัสผ่านเพื่อดำเนินการ</label>
        <div class="my-2"><Input Style="width:300px !important" @bind-Value="@Password"></Input></div>

        @*<div class="my-2" @onclick=NavigateNext><Button Style="width:300px !important" Type="@ButtonType.Primary">ยืนยัน</Button></div>*@
    </div>
</Modal>


@code {

    [Parameter] 
    public EventCallback<bool> OnClose { get; set; }
    [Parameter]
    public string Username { get; set; }

    public string Password { get; set; }

    bool loading = false;

    public async Task Verify()
    {
        var result = await verifyAdminIdentifyServices.CheckLoginAdmin(Username, Password);
        if(result == "success")
        {
            Console.WriteLine(result);
            await OnClose.InvokeAsync(true);
        }
        else
        {
            Console.WriteLine("Error");
            await OnClose.InvokeAsync(false);
        }

    }
   
    
    
}

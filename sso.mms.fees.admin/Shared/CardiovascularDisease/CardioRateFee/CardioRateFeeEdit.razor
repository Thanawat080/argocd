
<div class="site-layout-background" style="padding: 24px;">
    <div class="mms-nav-title">
        <div class="mms-text-title px-4 py-3">ค่าบริการทางการแพทย์ กรณี Package โรคหัวใจและหลอดเลือด กับสถานพยาบาลในความตกลง</div>
    </div>
    <div class="container py-4">
        <div class="mms-txt-header py-2">รายการขอเบิก</div>
        <hr />
    </div>
    <div class="row py-2">
        <div class="col-sm-12 col-md-4">
            <div class="p-2 d-md-flex align-items-md-center">
                <div class="mms-txt-headdetail">
                    ปีงบประมาณ
                </div>
                <div class="ps-md-2">
                    <Input Placeholder="Basic usage" @bind-Value="@txtValue" readonly disabled />
                </div>
            </div>
        </div>
        <div class="col-sm-12 col-md-4">
            <div class="p-2 d-md-flex align-items-md-center">
                <div class="mms-txt-headdetail">
                    วันที่แก้ไขล่าสุด
                </div>
                <div class="ps-md-2">
                    <Input Placeholder="Basic usage" @bind-Value="@txtValue" readonly disabled />
                </div>
            </div>
        </div>
        <div class="col-sm-12 col-md-4">
            <div class="p-2 d-md-flex align-items-md-center">
                <div class="mms-txt-headdetail">
                    แก้ไขล่าสุดโดย
                </div>
                <div class="ps-md-2">
                    <Input Placeholder="Basic usage" @bind-Value="@txtValue" readonly disabled />
                </div>
            </div>
        </div>
    </div>
    <div class="row py-2">
        <div class="col-sm-12 col-md-4">
            <div class="p-2 d-md-flex align-items-md-center">
                <div class="mms-txt-headdetail">
                    วันที่เริ่มต้นการใช้งาน
                </div>
                <div class="col-4 mms-media-center">
                    <DatePicker TValue="DateTime?" Picker="@DatePickerType.Date" Format="dd/MM/yyyy"  />
                </div>
            </div>
        </div>
        <div class="col-sm-12 col-md-4">
            <div class="p-2 d-md-flex align-items-md-center">
                <div class="mms-txt-headdetail">
                    สาเหตุ
                </div>
                <div class="ps-md-2">
                    <Input Placeholder="Basic usage" @bind-Value="@txtValue" readonly disabled />
                </div>
            </div>
        </div>
     </div>
     <div class="d-flex justify-content-end" style="padding: 30px;">
        <Button Class="me-2" Type="@ButtonType.Primary" @onclick="AddNewRow"><i class="fa-solid fa-circle-plus"></i>&nbsp;เพิ่ม</Button>
     </div>
    <div class="mt-3" style="margin-left: 20px; margin-right: 20px;">
    <Table DataSource="listOfData" RowClassName="@(_ => "editable-row")" >
        <PropertyColumn Property="c => c.Id" Title="ลำดับ" Width="5%" Align="ColumnAlign.Center" Style="background: #EAE8EC;"></PropertyColumn>
             <PropertyColumn Property="c => c.ItemList" Title="รายการ" Width="20%" Align="ColumnAlign.Center" Style=" background: #EAE8EC;">
                 @if (editId == context.Id)
            {
                <Input Type="text" Placeholder="Basic usage"   @bind-Value="context.ItemList" OnBlur="stopEdit" style="background: #FFFFFF;" @onclick="()=>startEdit(context.Id)" />
            }
            else
            {
                <div  style="background: #EAE8EC; padding-right:24px" >
                    @context.ItemList
                </div>
            }
        </PropertyColumn>
             <PropertyColumn Property="c=>c.TotalAmount" Title="จำนวนเงิน" Width="10%" Align="ColumnAlign.Center" Style=" background: #EAE8EC;">
                 @if (editId == context.Id)
            {
                <Input Type="text" Placeholder="Basic usage" @bind-Value="context.TotalAmount" OnBlur="stopEdit" Style="background: #FFFFFF;" />
            }
            else
            {
                <div class="editable-cell-value-wrap" style="background: #FFFFFF; padding-right:24px" @onclick="()=>startEdit(context.Id)">
                    @context.TotalAmount
                </div>
            }
        </PropertyColumn>
        <PropertyColumn Property="c => c.Delete" Title="ลบข้อมูล" Width="5%" Align="ColumnAlign.Center" Style="background: #EAE8EC;"></PropertyColumn>
    </Table>
        <Pagination Class="py-3"
                            ShowSizeChanger
                     OnShowSizeChange="OnShowSizeChange"
                     DefaultCurrent="3"
                     Total="500" />
    </div>
    <div class="d-flex justify-content-end" style="padding: 30px;">
        <Button Class="me-2" Type="@ButtonType.Primary"><i class="fa-solid fa-floppy-disk"></i>&nbsp;บันทึก</Button>
    </div>
</div>

@code {

    string txtValue { get; set; }
    string editId;   

    [Parameter]
    public EventCallback<int> IndexPage { get; set; }

    public async Task goEdit(int item)
    {
        await IndexPage.InvokeAsync(item);
    }
    public class ItemData
    {
        public string Id { get; set; }
        public string ItemList { get; set; }
        public string TotalAmount { get; set; }
        public string Delete { get; set; }
    };
    List<ItemData> listOfData = new List<ItemData>
        {
            new ItemData
            {
            Id = "1",
            ItemList = "โรคหัวใจการฉีดที่หัวใจ Coronary Angiogram : (CAG) และหลอดเลือด",
            TotalAmount = "32,000",
            Delete = ""
            },
            new ItemData
            {
            Id = "2",
            ItemList = "โรคหัวใจการฉีดที่หัวใจ Coronary Angiogram : (CAG) และหลอดเลือด",
            TotalAmount = "98,000",
            Delete = ""
            },
            new ItemData
            {
            Id = "3",
            ItemList = "โรคหัวใจการฉีดที่หัวใจ Coronary Angiogram : (CAG) และหลอดเลือด",
            TotalAmount = "170,000",
            Delete = ""
            },
            new ItemData
            {
            Id = "4",
            ItemList = "โรคหัวใจการฉีดที่หัวใจ Coronary Angiogram : (CAG) และหลอดเลือด",
            TotalAmount = "170,000",
            Delete = ""
            },
            new ItemData
            {
            Id = "5",
            ItemList = "โรคหัวใจการฉีดที่หัวใจ Coronary Angiogram : (CAG) และหลอดเลือด",
            TotalAmount = "95,000",
            Delete = ""
            },
            new ItemData
            {
            Id = "6",
            ItemList = "โรคหัวใจการฉีดที่หัวใจ Coronary Angiogram : (CAG) และหลอดเลือด",
            TotalAmount = "80,000",
            Delete = ""
            },
            new ItemData
            {
            Id = "7",
            ItemList = "โรคหัวใจการฉีดที่หัวใจ Coronary Angiogram : (CAG) และหลอดเลือด",
            TotalAmount = "39,000",
            Delete = ""
            },
            new ItemData
            {
            Id = "8",
            ItemList = "โรคหัวใจการฉีดที่หัวใจ Coronary Angiogram : (CAG) และหลอดเลือด",
            TotalAmount = "39,000",
            Delete = ""
            }
        };

    void startEdit(string id)
    {
    editId = id;
    }

    void stopEdit()
    {
    var editedData = listOfData.FirstOrDefault(x => x.Id == editId);
    Console.WriteLine(JsonSerializer.Serialize(editedData));
    editId = null;
    }

    void AddNewRow()
    {
        var newItem = new ItemData
            {
                Id = (listOfData.Count + 1).ToString(), // Assign a unique ID
                ItemList = "", // Set default values or leave empty for the user to input
                TotalAmount = "",
                Delete = ""
            };

        listOfData.Add(newItem);

        // Start editing the newly added row
        startEdit(newItem.Id);
    }

    private void OnShowSizeChange(PaginationEventArgs args)
    {
        var (current, pageSize) = args;
        Console.WriteLine($"{current}, {pageSize}");
    }
}

}

@*<style>
    .tablestyle .ant-table-thead > tr > th {
        position: relative;
        color: #FFFFFF !important;
        font-weight: 600 !important;
        text-align: center !important;
        background: #3B6C43 !important;
        border-bottom: 1px solid #ffffff !important;
        transition: background 0.3s ease;
    }
</style>*@

@*<Modal Title="@title"
       Visible="@_visible"
       OnCancel="@HandleCancel"
       
       Class="mms-media-center mms-text-title"
       Width="1300"
       Footer="null">
       <div>@listOfData[0].Name</div>
    <Table DefaultExpandAllRows DataSource="listOfData" Bordered ScrollX="800" TreeChildren="item=>item.Children" Class="mms-txt-default mx-2 my-1 tablestyle" Style="font-size : 14px !important">
            @{
            var SumPrice1 = listOfData[0].Children.Sum(x => x.childPrice);
            var SumPrice2 = listOfData[0].Children.Sum(x => x.childPrice2);

        }

           
        @if (context.Status == false)
            {
            <PropertyColumn Width="10%" Title="ลำดับ" Property="c => c.childId" ColSpan="@GetColSpan(context.Status)" Align="@columnAlign" Style="@GetColColor(context.Status, "Name")"></PropertyColumn>
            <PropertyColumn Width="20%" Title="เลขประจำตัวประชาชน" Property="c => c.childIden" ColSpan="@GetColSpan(context.Status)" Align="@columnAlign" Style="@GetColColor(context.Status, "Name")"></PropertyColumn>

            }


        <PropertyColumn Width="15%" Title="ชื่อ-นามสกุล" Property="c => c.Name" ColSpan="@GetColSpan(context.Status,"Name")" Align="@columnAlign"  Style="@GetColColor(context.Status, "Name")"></PropertyColumn>
        @if (context.Status == false)
        {
        <PropertyColumn Width="15%" Title="Admit Date" Property="c => c.AdmitDate" ColSpan="@GetColSpan(context.Status)" Align="@columnAlign" Style="@GetColColor(context.Status, "Name")"> </PropertyColumn>
        <PropertyColumn Width="15%" Title="Discharge Date" Property="c => c.DischargeDate" ColSpan="@GetColSpan(context.Status)" Align="@columnAlign" Style="@GetColColor(context.Status, "Name")"> </PropertyColumn>
            <PropertyColumn Width="15%" Title="จำนวนเงินค่ารักษา" Property="c => c.childPrice" ColSpan="@GetColSpan(context.Status)" Align="@columnAlign" Style="@GetColColor(context.Status, "Name")"> </PropertyColumn>
            <PropertyColumn Width="15%" Title="จำนวนเงินที่จ่าย" Property="c => c.childPrice2" ColSpan="@GetColSpan(context.Status)" Align="@columnAlign" Style="@GetColColor(context.Status, "Name")"> </PropertyColumn>
            <PropertyColumn Width="10%" Title="สถานะ" Property="c => c.childstatus" ColSpan="@GetColSpan(context.Status)" Align="@columnAlign" Style="color :#67C23A"></PropertyColumn>
            <SummaryRow>
                <SummaryCell Align=ColumnAlign.Left ColSpan="5">รวมทั้งหมด</SummaryCell>
                <SummaryCell Align=ColumnAlign.Center ColSpan="1">
                    <Text>@SumPrice1</Text>
                </SummaryCell>
                <SummaryCell Align=ColumnAlign.Center ColSpan="1">
                    <Text>@SumPrice2</Text>
                </SummaryCell>
                <SummaryCell Align=ColumnAlign.Center ColSpan="1">
                    
                </SummaryCell>
            </SummaryRow>
            
        }
        </Table>
</Modal>*@
<ViewModal _visible=openViewModal OnClose="@OpenViewModal"></ViewModal>
@code {
    ColumnAlign columnAlign = ColumnAlign.Center;
    string title = "\0";
    [Parameter]
    public bool _visible { get; set; }
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }
    [Parameter]
    //public List<sso.mms.fees.admin.Shared.UCEP.DisbursementHistory.UCEPDisbursementIndex.ItemData2> listOfData { get; set; }
    //List<sso.mms.fees.admin.Shared.UCEP.DisbursementHistory.UCEPDisbursementIndex.ItemData2> L1 = new List<sso.mms.fees.admin.Shared.UCEP.DisbursementHistory.UCEPDisbursementIndex.ItemData2>();
    public bool openViewModal { get; set; }   
    private void OnFinish(EditContext editContext)
    {
        Console.WriteLine("e");
        _visible = false;
    }
    private void OnFinishFailed(EditContext editContext)
    {
        //Console.WriteLine($"Failed:{JsonSerializer.Serialize(model)}");
    }
    private void HandleCancel(MouseEventArgs e)
    {
        Console.WriteLine(e);
        OnClose.InvokeAsync(false);
    }
    protected override void OnInitialized()
    {

    }

    private int GetColSpan(bool HosStatus, string columnTitle = "")
    {

        if (HosStatus == true)
        {
            if (columnTitle == "Name")
            {
                columnAlign = ColumnAlign.Left;
                return 8;
            }
            else
            {
                return 0;
            }
        }
        else
        {
            columnAlign = ColumnAlign.Center;
            return 1;
        }

}
    private string GetColColor(bool HosStauts, string columnTitle = "")
    {
        if (HosStauts == true)
            if (columnTitle == "Name")
                return "background-color:#D8D6D6;";
            else
                return "";
        else
            return "";
    }
    public void OpenViewModal(bool value)
    {
        openViewModal = value;
    }
}
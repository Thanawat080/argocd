@using System.ComponentModel
@using System.Net.Http.Headers
@using Blazored.LocalStorage;
@inject ILocalStorageService _localstorage;
@inject HttpClient Http

@inject ModalService _modalService

<div class="site-layout-background" style="padding: 24px;">
    <div class="mms-nav-title">
        <div class="mms-text-title px-4 py-3">ค่าบริการทางการแพทย์ส่งเสริมสุขภาพและป้องกันโรค</div>
    </div>
    <div class="container py-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item" aria-current="page">
                    <span class="breadcum-sucress py-2">รายการรับเเจ้ง</span>
                </li>
                <li class="breadcrumb-item" aria-current="page">
                    <span class="breadcum-sucress py-2">เลือกงวด</span>
                </li>
                <li class="breadcrumb-item" aria-current="page">
                    <span class="breadcum-process py-2">แสดงรายการงวดที่เลือก</span>
                </li>
            </ol>
        </nav>
        <hr />

        <div class="row pb-3">
            <div class="col-md-12 col-lg-4 mms-media-start">
                <div class="mms-media-start">
                    <div class="mms-txt-headdetail">งวดที่ : </div> &nbsp;
                    <div>
                        <Input Placeholder="" @bind-Value="@periodName" />
                    </div>
                </div>
            </div>
            <div class="col-md-12 col-lg-4 mms-media-end" @onclick=@(() => goEdit(3))>
                <Button Type="@ButtonType.Primary"><i class="fa-solid fa-circle-play"></i>&nbsp; ประมวลผลรายการเบิก</Button>
            </div>
            <div class="col-md-12 col-lg-4 mms-media-end">
                <Space Direction="@DirectionVHType.Vertical" Class="mms-btn-serch w-100">
                    <SpaceItem>
                        <Search Placeholder="ข้อมูลที่ต้องการค้นหา..." EnterButton="true" />
                    </SpaceItem>
                </Space>
            </div>
        </div>
        <Table DataSource="dataList" TItem="periodList" RowClassName="@(_=>"editable-row")" Bordered ScrollX="1000">
            <ChildContent Context="data">
                <Column Width="10%" Align="ColumnAlign.Center" TData="int" Title="ลำดับ">@data.Id</Column>
                <Column Width="15%" Align="ColumnAlign.Center" TData="string" Title="เลขประจำตัวประชาชน">@data.identificationNumber</Column>
                <Column Width="20%" Align="ColumnAlign.Center" TData="string" Title="ชื่อ-นามสกุล"> @data.fullName</Column>
                <Column Width="10%" Align="ColumnAlign.Center" TData="DateTime" Title="วันที่ใช้สิทธิ"> @data.requestDate</Column>
                <Column Width="20%" Align="ColumnAlign.Center" TData="string" Title="ชื่อสถานพยาบาล"> @data.hospitalName</Column>
                <Column Width="10%" Align="ColumnAlign.Center" TData="string" Title="ชนิดวัคซีน"> @data.vaccineType</Column>
                 <Column Width="15%" Align="ColumnAlign.Center" TData="string" Title="จำนวนเงิน(บาท)">
                     @data.amount
                </Column>
            </ChildContent>
        </Table>


        <div class="container d-flex flex-column py-2">
            <div class="mms-media-start">
                <h6>วันที่ :</h6>&nbsp;
                <h6>30 เม.ย 2566</h6>
            </div>
            <div class="mms-media-start">
                <h6>จำนวนสถานพยาบาลทั้งหมด :</h6>&nbsp;
                <h6>@dataList.Count สถานพยาบาล</h6>
            </div>
            <div class="mms-media-start">
                <h6>เจ้าหน้าที่ผู้ประมวลผล :</h6>&nbsp;
                <h6>นายวงศ์ สว่าง</h6>
            </div>
        </div>
    </div>
</div>
 @if (_loading == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}

@code {
    [Parameter]
    public EventCallback<int> IndexPage { get; set; }

    public string? periodName;

    public List<periodList> dataList = new List<periodList>();

    public async Task goEdit(int item)
    {
        await IndexPage.InvokeAsync(item);
    }

    string txtValue { get; set; }

    record ItemData
    {
        public string Id { get; set; }
        public string Name { get; set; }
        public int Age { get; set; }
        public string Address { get; set; }
    }

    public class periodList
    {
        public int Id { get; set; }
        public string identificationNumber { get; set; }
        public string fullName { get; set; }
        public DateTime requestDate { get; set; }
        public string hospitalName { get; set; }
        public string vaccineType { get; set; }
        public string amount { get; set; }
    }

    IDictionary<string, (bool edit, ItemData data)> editCache = new Dictionary<string, (bool edit, ItemData data)>();
    List<ItemData> listOfData = new();

    int i = 0;
    string editId;


    protected override async void OnInitialized()
    {
        _loading = true;

        for (int i = 0; i < 10; i++)
        {
            dataList.Add(new periodList { Id = i, identificationNumber = i.ToString("D2"), fullName = $"test{i}", requestDate = DateTime.Now,  hospitalName = $"Hos{i}",
                                          vaccineType = $"vaccineType{i}", amount = $"{i+1000}"});
        }
        periodName = await _localstorage.GetItemAsync<string>("periodName");
        listOfData = Enumerable.Range(0, 100).Select(i => new ItemData { Id = $"{i}", Name = $"Edrward {i}", Age = 32, Address = $"London Park no. {i}" }).ToList();
        listOfData.ForEach(item =>
        {
            editCache[item.Id] = (false, item);
        });
        _loading = false;
        StateHasChanged();
    }

    /* MoDal Toggle */
    bool _visible = false;
    bool _loading = false;

    private void ShowModal()
    {
        _visible = true;
    }


    private async Task HandleOk(MouseEventArgs e)
    {
        _loading = true;
        await Task.Delay(3000);
        _visible = false;
        _loading = false;
        goEdit(2);
    }

    private void HandleCancel(MouseEventArgs e)
    {
        _visible = false;
    }
}

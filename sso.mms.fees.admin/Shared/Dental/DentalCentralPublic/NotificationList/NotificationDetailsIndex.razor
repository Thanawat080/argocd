<style>
    .ant-card-c {
        background: #fff;
        border-radius: 6px;
        box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;
        font-size: 18px;
        text-align: center;
    }

        .ant-card-c > .ant-card-head {
            width: 100%;
            background: #ffcc41 !important;
            border-radius: 6px 6px 0px 0px !important;
        }

            .ant-card-c > .ant-card-head > .ant-card-head-wrapper > .ant-card-head-title {
                font-size: 20px !important;
                text-align: center !important;
                color: #334396 !important;
            }
    /*

                    .ant-card-head {
                        min-height: 48px;
                        margin-bottom: -1px;
                        padding: 0 24px;
                        color: rgba(0, 0, 0, 0.85);
                        font-weight: 500;
                        font-size: 16px;
                        background: transparent;
                        border-bottom: 1px solid #ffffff;
                        border-radius: 2px 2px 0 0;
                    }

                    .ant-card-c {
                        box-sizing: border-box;
                        margin: 0;
                        padding: 0;
                        color: rgba(0, 0, 0, 0.85);
                        font-size: 18px ;
                        text-align: center ;
                        font-variant: tabular-nums;
                        line-height: 1.5715;
                        list-style: none;
                        font-feature-settings: 'tnum';
                        position: relative;
                        background: #fff;
                        border-radius: 6px;
                        box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;
                    }

                    .ant-card-head-title {
                        display: inline-block;
                        flex: 1;
                        padding: 16px 0;
                        overflow: hidden;
                        white-space: nowrap;
                        text-overflow: ellipsis;
                        font-size: 20px ;
                        text-align: center;
                        color: #334396;
                    }
                */

</style>
<div class="site-layout-background" style="padding: 24px;">
    <div class="mms-nav-title">
        <div class="mms-text-title px-4 py-3" style="color : black">ค่าบริการทางการแพทย์ทันตกรรม </div>
    </div>
    <div class="container py-4">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item" aria-current="page">
                        <span class="breadcum-success py-2">รายการรับเเจ้ง</span>
                    </li>    <li class="breadcrumb-item" aria-current="page">
                        <span class="breadcum-success py-2">ประมวลผลรายการรับเเจ้ง</span>
                    </li>
                    <li class="breadcrumb-item" aria-current="page">
                        <span class="breadcum-process py-2">รายละเอียดการประมวลผล</span>
                    </li>

                </ol>
            </nav>
        <div class="container p-2">
            <div class="row">
                <div class="col-md-6 col-lg-3">
                    <Card Bordered="false" Title=@("งวด") Class="ant-card-c">
                        <Body>
                            <span>6704</span>
                        </Body>
                    </Card>
                </div>
                <div class="col-md-6 col-lg-3">
                    <Card Bordered="false" Title=@("ประมวลผลทั้งหมด") Class="ant-card-c">
                        <Body>
                            <span>30</span>
                        </Body>
                    </Card>
                </div>
                <div class="col-md-6 col-lg-3">
                    <Card Bordered="false" Title=@("ผ่านการประมวลผล") Class="ant-card-c">
                        <Body>
                            <span>28</span>
                        </Body>
                    </Card>
                </div>
                <div class="col-md-6 col-lg-3">
                    <Card Bordered="false" Title=@("ไม่ผ่านการประมวลผล") Class="ant-card-c">
                        <Body>
                            <span>1</span>
                        </Body>
                    </Card>
                </div>
            </div>
        </div>
        <br />

        <br />
        <div class="row">
            <div class="d-flex  mms-media-center">
                <div class="col-8 ">
                    <div class="mms-media-start mms-txt-headdetail">รายการเบิกที่ผ่านการประมวลผล  </div>
                    @*<div class="row">
                    <div class="col-4 mms-media-center">
                    <DatePicker TValue="DateTime?" Picker="@DatePickerType.Date" Format="dd/MM/yyyy" Placeholder="Placeholder" />

                    </div>
                    <p class="mms-txt-headdetail mms-media-center col-1" style="width:60px; text-align:center;">ถึง : </p>
                    <div class="col-4 mms-media-center">

                    <DatePicker TValue="DateTime?" Picker="@DatePickerType.Date" Format="dd/MM/yyyy" Placeholder="Placeholder" />
                    </div>
                    </div>*@
                </div>
                <div class="col-4 ">
                    <Space Direction="@DirectionVHType.Vertical" Class="mms-btn-serch  col-12" Style="font-size:16px;">
                        <SpaceItem>
                            <Search Style="font-size:16px;" Placeholder="ชื่อสถานพยาบาล" EnterButton="true" />
                        </SpaceItem>
                    </Space>
                </div>
            </div>
        </div>
        <hr />
        <Table DefaultExpandAllRows DataSource="data" TreeChildren="item=>item.Children" Bordered>

            <ColumnDefinitions>
                <PropertyColumn Property="c=>c.Id" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus)" Width="8%" Style="@GetColColor(context.HosStatus)">

                </PropertyColumn>
                <PropertyColumn Property="c=>c.CardId" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus ,context.Key)" Width="15%" Style="@GetColColor(context.HosStatus )" />
                @if (context.HosStatus == true)
                {
                    <PropertyColumn Property="c=>c.Name" Align="ColumnAlign.Left" ColSpan="@GetColSpan(context.HosStatus , "name",context.Key)" Width="12%" Style="@GetColColor(context.HosStatus, "name")" />



                }
                else if (context.HosStatus == false)
                {


                    <PropertyColumn Property="c=>c.Name" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus , "name",context.Key)" Width="12%" Style="@GetColColor(context.HosStatus, "name")" />

                }
                <PropertyColumn Property="c=>c.NotiId" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus ,context.Key)" Width="12%" Style="@GetColColor(context.HosStatus)" />
                <PropertyColumn Property="c=>c.Date" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus ,context.Key)" Width="13%" Style="@GetColColor(context.HosStatus)" />
                @if (context.Key == "total")
                {
                    <PropertyColumn Align="ColumnAlign.Center" Property="c=>c.Age" ColSpan="4" Width="10%" Style="@GetColColor(context.HosStatus)" />
                }
                else
                {
                    <PropertyColumn Align="ColumnAlign.Center" Property="c=>c.Age" ColSpan="@GetColSpan(context.HosStatus )" Width="10%" Style="@GetColColor(context.HosStatus)" />
                }

                <PropertyColumn Property="c=>c.Id" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus ,context.Key)" Width="10%" Style="@GetColColor(context.HosStatus)">
                    <Checkbox @bind-Value="@context.promis" OnChange="()=>SwapCheckPromis(context)"  Disabled=true></Checkbox>
                </PropertyColumn>
                <PropertyColumn Property="c=>c.Id" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus ,context.Key)" Width="10%" Style="@GetColColor(context.HosStatus)">
                    <Checkbox @bind-Value="@context.unpromis" OnChange="()=>SwapCheckUnPromis(context)" Disabled=true></Checkbox>
                </PropertyColumn>

                <PropertyColumn Property="c=>c.Id" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus ,context.Key)" Width="10%" Style="@GetColColor(context.HosStatus)">
                    <img class="mx-2" title="ดู" src="helper_shared/PortalAdminImage/eye.png"
                         style="width:24px;height:24px; cursor:pointer;" @onclick=@(()=>OpenViewDataModal(true)) />

                </PropertyColumn>

            </ColumnDefinitions>
            <HeaderTemplate>
                <TableRow>
                    <TableHeader @bind-Field="context.Age" RowSpan="2">ลำดับ</TableHeader>
                    <TableHeader @bind-Field="context.Age" RowSpan="2">เลขประจำตัวประชาชน</TableHeader>
                    <TableHeader @bind-Field="context.Age" RowSpan="2">ชื่อ-นามสกุล</TableHeader>
                    <TableHeader @bind-Field="context.Age" RowSpan="2">เลขที่รับเเจ้ง</TableHeader>
                    <TableHeader @bind-Field="context.Age" RowSpan="2">วันที่ใช้สิทธิ</TableHeader>
                    <TableHeader @bind-Field="context.Age" RowSpan="2"> จำนวนเงิน </TableHeader>
                    <TableHeader @bind-Field="context.Age" ColSpan="2">วินิจฉัย</TableHeader>
                    <TableHeader @bind-Field="context.Age" RowSpan="2"></TableHeader>
                </TableRow>
                <TableRow>
                    <SimpleTableHeader>
                        <Checkbox OnChange="(e) => ChangeCheck(e)" Disabled=true></Checkbox>
                        อนุมัติ
                    </SimpleTableHeader>
                    <SimpleTableHeader>ไม่อนุมัติ</SimpleTableHeader>

                </TableRow>
            </HeaderTemplate>

        </Table>
        <br />
        <div class="mms-media-start mms-txt-headdetail">รายการเบิกที่ไม่ผ่านการประมวลผล </div>
        <hr />
        <Table DefaultExpandAllRows DataSource="data" TreeChildren="item=>item.Children" Bordered>

            <ColumnDefinitions>
                <PropertyColumn Property="c=>c.Id" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus)" Width="8%" Style="@GetColColor(context.HosStatus)">

                </PropertyColumn>
                <PropertyColumn Property="c=>c.CardId" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus ,context.Key)" Width="15%" Style="@GetColColor(context.HosStatus )" />

                @if (context.HosStatus == true)
                {
                    <PropertyColumn Property="c=>c.Name" Align="ColumnAlign.Left" ColSpan="@GetColSpan(context.HosStatus , "name",context.Key)" Width="12%" Style="@GetColColor(context.HosStatus, "name")" />



                }
                else if (context.HosStatus == false)
                {


                    <PropertyColumn Property="c=>c.Name" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus , "name",context.Key)" Width="12%" Style="@GetColColor(context.HosStatus, "name")" />

                }
                <PropertyColumn Property="c=>c.NotiId" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus ,context.Key)" Width="12%" Style="@GetColColor(context.HosStatus)" />
                <PropertyColumn Property="c=>c.Date" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus ,context.Key)" Width="13%" Style="@GetColColor(context.HosStatus)" />
                @if (context.Key == "total")
                {
                    <PropertyColumn Property="c=>c.Age" Align="ColumnAlign.Center" ColSpan="4" Width="10%" Style="@GetColColor(context.HosStatus)" />
                }
                else
                {
                    <PropertyColumn Property="c=>c.Age" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus )" Width="10%" Style="@GetColColor(context.HosStatus)" />
                }

                <PropertyColumn Property="c=>c.Id" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus ,context.Key)" Width="10%" Style="@GetColColor(context.HosStatus)">
                    <Checkbox @bind-Value="@context.status" Disabled=true></Checkbox>
                </PropertyColumn>
                <PropertyColumn Property="c=>c.Id" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus ,context.Key)" Width="10%" Style="@GetColColor(context.HosStatus)">
                    <Checkbox @bind-Value="@context.status" Disabled=true></Checkbox>
                </PropertyColumn>
                <PropertyColumn Property="c=>c.Id" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus ,context.Key)" Width="10%" Style="@GetColColor(context.HosStatus)">
                    <img class="mx-2" title="ดู" src="helper_shared/PortalAdminImage/eye.png"
                         style="width:24px;height:24px; cursor:pointer;" @onclick=@(()=>OpenViewDataModal(true)) />
                    <img class="mx-2" title="ดู" src="helper_shared/PortalAdminImage/alert.png"
                         style="width:24px;height:24px; cursor:pointer;" @onclick=@(()=>OpenAlertModal(true)) />
                </PropertyColumn>

            </ColumnDefinitions>
            <HeaderTemplate>
                <TableRow>
                    <TableHeader @bind-Field="context.Age" RowSpan="2">ลำดับ</TableHeader>
                    <TableHeader @bind-Field="context.Age" RowSpan="2">เลขประจำตัวประชาชน</TableHeader>
                    <TableHeader @bind-Field="context.Age" RowSpan="2">ชื่อ-นามสกุล</TableHeader>
                    <TableHeader @bind-Field="context.Age" RowSpan="2">เลขที่รับเเจ้ง</TableHeader>
                    <TableHeader @bind-Field="context.Age" RowSpan="2">วันที่ใช้สิทธิ</TableHeader>
                    <TableHeader @bind-Field="context.Age" RowSpan="2"> จำนวนเงิน </TableHeader>
                    <TableHeader @bind-Field="context.Age" ColSpan="2">วินิจฉัย</TableHeader>
                    <TableHeader @bind-Field="context.Name" RowSpan="2"></TableHeader>
                </TableRow>
                <TableRow>
                    <SimpleTableHeader>อนุมัติ</SimpleTableHeader>
                    <SimpleTableHeader>ไม่อนุมัติ</SimpleTableHeader>

                </TableRow>
            </HeaderTemplate>

        </Table>
        <br />
        <div class="mms-media-start mms-txt-headdetail">รายการที่ AI พบความผิดปกติ </div>
        <hr />
        <Table DefaultExpandAllRows DataSource="data" TreeChildren="item=>item.Children" Bordered>

            <ColumnDefinitions>
                <PropertyColumn Property="c=>c.Id" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus)" Width="8%" Style="@GetColColor(context.HosStatus)">

                </PropertyColumn>
                @if (context.HosStatus == true)
                {

                    <PropertyColumn Property="c=>c.Name" Align="ColumnAlign.Left" ColSpan="@GetColSpan(context.HosStatus , "name",context.Key)" Width="15%" Style="@GetColColor(context.HosStatus , "name")" />

                }
                else if (context.HosStatus == false)
                {

                    <PropertyColumn Property="c=>c.Name" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus , "name",context.Key)" Width="15%" Style="@GetColColor(context.HosStatus , "name")" />

                }
                <PropertyColumn Property="c=>c.Name" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus ,context.Key)" Width="12%" Style="@GetColColor(context.HosStatus)" />
                <PropertyColumn Property="c=>c.Name" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus ,context.Key)" Width="12%" Style="@GetColColor(context.HosStatus)" />
                <PropertyColumn Property="c=>c.Age" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus ,context.Key)" Width="13%" Style="@GetColColor(context.HosStatus)" />
                @if (context.Key == "total")
                {
                    <PropertyColumn Property="c=>c.Age" Align="ColumnAlign.Center" ColSpan="4" Width="10%" Style="@GetColColor(context.HosStatus)" />
                }
                else
                {
                    <PropertyColumn Property="c=>c.Age" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus )" Width="10%" Style="@GetColColor(context.HosStatus)" />
                }

                <PropertyColumn Property="c=>c.Id" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus ,context.Key)" Width="10%" Style="@GetColColor(context.HosStatus)">
                    <Checkbox @bind-Value="@context.status" Disabled=true></Checkbox>
                </PropertyColumn>
                <PropertyColumn Property="c=>c.Id" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus ,context.Key)" Width="10%" Style="@GetColColor(context.HosStatus)">
                    <Checkbox @bind-Value="@context.status" Disabled=true></Checkbox>
                </PropertyColumn>
                <PropertyColumn Property="c=>c.Id" Align="ColumnAlign.Center" ColSpan="@GetColSpan(context.HosStatus ,context.Key)" Width="10%" Style="@GetColColor(context.HosStatus)">
                    <img class="mx-2" title="ดู" src="helper_shared/PortalAdminImage/eye.png"
                         style="width:24px;height:24px; cursor:pointer;" @onclick=@(()=>OpenViewDataModal(true)) />
                    <img class="mx-2" title="ดู" src="helper_shared/PortalAdminImage/robot.png"
                         style="width:24px;height:24px; cursor:pointer;" @onclick=@(()=>OpenAIalertModal(true)) />
                </PropertyColumn>

            </ColumnDefinitions>
            <HeaderTemplate>
                <TableRow>
                    <TableHeader @bind-Field="context.Age" RowSpan="2">ลำดับ</TableHeader>
                    <TableHeader @bind-Field="context.Age" RowSpan="2">เลขประจำตัวประชาชน</TableHeader>
                    <TableHeader @bind-Field="context.Age" RowSpan="2">ชื่อ-นามสกุล</TableHeader>
                    <TableHeader @bind-Field="context.Age" RowSpan="2">เลขที่รับเเจ้ง</TableHeader>
                    <TableHeader @bind-Field="context.Age" RowSpan="2">วันที่ใช้สิทธิ</TableHeader>
                    <TableHeader @bind-Field="context.Age" RowSpan="2"> จำนวนเงิน </TableHeader>
                    <TableHeader @bind-Field="context.Age" ColSpan="2">วินิจฉัย</TableHeader>
                    <TableHeader @bind-Field="context.Age" RowSpan="2"></TableHeader>
                </TableRow>
                <TableRow>
                    <SimpleTableHeader>อนุมัติ</SimpleTableHeader>
                    <SimpleTableHeader>ไม่อนุมัติ</SimpleTableHeader>

                </TableRow>
            </HeaderTemplate>

        </Table>
    </div>
</div>
@if (isloading == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}
<ViewDataModal _visible=@openViewDataModal OnClose="@OpenViewDataModal"></ViewDataModal>
<AIalertModal _visible=@openAIalertModal OnClose="@OpenAIalertModal"></AIalertModal>
<AlertModal _visible=@openAlertModal OnClose="@OpenAlertModal"></AlertModal>
@using sso.mms.fees.admin.Shared.Dental.DentalCentralPublic.NotificationList.Modals
@using System.ComponentModel.DataAnnotations;
@using System.Text.Json;
@using System.ComponentModel;
@code {
    [Parameter]
    public EventCallback<int> IndexPage { get; set; }

    int page;
    bool openConfirmModal { get; set; }
    bool openViewDataModal { get; set; }
    bool openAIalertModal { get; set; }
    bool openAlertModal { get; set; }
    bool isloading { get; set; }
    string Placeholder = "วว/ดด/ปปปป";
    bool _visible = false;

    public bool YourCheckBoxProperty { get; set; }
    public class Data
    {
        public bool HosStatus { get; set; }
        public bool promis { get; set; }
        public bool unpromis { get; set; }
        public bool status { get; set; }

        public string Id { get; set; }

        public string Key { get; set; }
        public string CardId { get; set; }

        public string Name { get; set; }

        public int Age { get; set; }
        public string NotiId { get; set; }
        public string Date { get; set; }

        public string Address { get; set; }

        public List<Data> Children { get; set; }
    }
    protected override async Task OnInitializedAsync()
    {

        isloading = true;

        data = new List<Data>
    {
    new Data {
        HosStatus  = true,
        Id = "1",
        Key = "1",
        Name = "โรงพยาบาลลานนา1",
        Age = 60,
        Address = "New York No. 1 Lake Park",
        Children = new List<Data> {
            new Data {
                Id = "1",
                Key = "sum",
                CardId="123467890xxx",
                NotiId="11145678",
                Date="23 มิ.ย 67",
                Name = "นายดวงดี  วิชัยวงศ์",
                Age = 900,
                Address = "London No. 1 Lake Park",
                HosStatus  = false,
            },
            new Data {
                Id = "2",
                Key= "sum",
                 CardId="123467890xxx",
                 NotiId="11145678",
                  Date="23 มิ.ย 67",
                Name= "นางวันเพ็ญ  เด่นใจ",
                Age=900,
                Address= "New York No. 3 Lake Park",
                HosStatus  = false,

            },
             new Data
                 {
                     Id = "3",
                     Key = "sum",
                     CardId = "123467890xxx",
                     NotiId = "11145678",
                     Date = "23 มิ.ย 67",
                     Name = "นางวันเพ็ญ  เด่นใจ",
                     Age = 900,
                     Address = "New York No. 3 Lake Park",
                     HosStatus = false,

                 },
             new Data
                 {
                     Id = "4",
                     Key = "sum",
                     CardId = "123467890xxx",
                     NotiId = "11145678",
                     Date = "23 มิ.ย 67",
                     Name = "นางวันเพ็ญ  เด่นใจ",
                     Age = 900,
                     Address = "New York No. 3 Lake Park",
                     HosStatus = false,

                 },
        }
    },
    new Data
        {
            HosStatus = true,
            Id = "1",
            Key = "2",
            Name = "โรงพยาบาลลานนา2",
            Age = 32,
            Address = "Sidney No. 1 Lake Park",
            Children = new List<Data>  {
                 new Data {
                    Id = "1",
                    Key = "sum",
                    CardId="123467890xxx",
                    NotiId="11145678",
                    Date="23 มิ.ย 67",
                    Name = "นายดวงดี  วิชัยวงศ์",
                    Age = 900,
                    Address = "London No. 1 Lake Park",
                    HosStatus  = false,
                },
                new Data {
                    Id = "2",
                    Key= "sum",
                     CardId="123467890xxx",
                     NotiId="11145678",
                      Date="23 มิ.ย 67",
                    Name= "นางวันเพ็ญ  เด่นใจ",
                    Age=900,
                    Address= "New York No. 3 Lake Park",
                    HosStatus  = false,

                },
                 new Data {
                    Id = "3",
                    Key= "sum",
                     CardId="123467890xxx",
                     NotiId="11145678",
                      Date="23 มิ.ย 67",
                    Name= "นางวันเพ็ญ  เด่นใจ",
                    Age=900,
                    Address= "New York No. 3 Lake Park",
                    HosStatus  = false,

                },
                 new Data {
                    Id = "4",
                    Key= "sum",
                     CardId="123467890xxx",
                     NotiId="11145678",
                      Date="23 มิ.ย 67",
                    Name= "นางวันเพ็ญ  เด่นใจ",
                    Age=900,
                    Address= "New York No. 3 Lake Park",
                    HosStatus  = false,

                },

            }
        },
    };
        isloading = false;
        StateHasChanged();
    }

    private async Task ChangeCheck(bool e)
    {
        if(e){
            foreach (var item in data)
            {
                foreach (var subitem in item.Children)
                {
                    subitem.promis = true;
                    subitem.unpromis = false;
                }
            }
        }
        else
        {
            foreach (var item in data)
            {
                foreach (var subitem in item.Children)
                {
                    subitem.promis = false;
                }
            }
        }
    }
    private async Task SwapCheckPromis(Data item)
    {
        if (item.promis)
        {
            item.unpromis = false;
        }
    }
    private async Task SwapCheckUnPromis(Data item)
    {
        if (item.unpromis)
        {
            item.promis = false;
        }
    }
    List<Data>data = new List<Data>();
        public class Todo
        {
        public int UserId { get; set; }
        public int Id { get; set; }
        public string Title { get; set; }
        public bool Completed { get; set; }

        public Todo()
        {
        }
        }
        public class ItemData
        {
        public int Id { get; set; }
        public string Name { get; set; }
        public int Age { get; set; }
        public int count { get; set; }
        public string Address { get; set; }
        };
        Todo[] todos;
        List<Data>
            _data;
            string _selectedValue;
            private int GetColSpan(bool HosStatus, string columnTitle = "", string key = "")
            {

            if (HosStatus == true)
            {
            if (columnTitle == "name")
            {
            return 10;
            }
            else
            {
            return 0;
            }
            }
            else
            {
            if (key == "total")
            {
            return 4;
            }
            else
            {
            if (columnTitle == "total")
            {
            return 0;
            }
            else
            {
            return 1;
            }
            }
            }
            }
            private int CalculateTotalChildrenAge(List<Data>
                children)
                {
                int totalAge = 0;
                foreach (var child in children)
                {
                totalAge += child.Age;
                }
                return totalAge;
                }

                private string GetColColor(bool HosStatus, string columnTitle = "")
                {
                if (HosStatus == true)
                if (columnTitle == "name")
                return "background-color:#D8D6D6;";
                else
                return "";
                else
                return "";
                }
                private string GetRowColor(int index)
                {
                if (index == 1)
                if (index == 1)
                return "background-color:#D8D6D6;";
                else
                return "";
                else
                return "";
                }
                protected override void OnInitialized()
                {
                _data = data;

                foreach (var item in data)
                {

                int totalAge = CalculateTotalChildrenAge(item.Children.ToList());

                Data total = new Data()
                {
                Id = "",
                Key = "total",
                Name = "รวม Total",
                Age = totalAge,
                Address = "",
                };
                item.Children.Add(total);
                }
                //_data = data;
                StateHasChanged();
                }


                public void OpenConfirmModal(bool value)
                {
                openConfirmModal = value;
                }
                public void OpenViewDataModal(bool value)
                {
                openViewDataModal = value;
                }
                public void OpenAIalertModal(bool value)
                {
                openAIalertModal = value;
                }
                public void OpenAlertModal(bool value)
                {
                openAlertModal = value;
                }
                public async Task Indexpage(int usepage)
                {
                //this.page = usepage;
                //if (this.page == 2)
                //{
                //    IndexPage.InvokeAsync(2);
                //}
                }
                }

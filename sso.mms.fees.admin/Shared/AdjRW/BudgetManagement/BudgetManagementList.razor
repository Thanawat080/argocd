@using System.Text.Json;

<style>
    .editable-cell {
        position: relative;
    }

    .editable-cell-value-wrap {
        padding: 5px 12px;
        cursor: pointer;
        height: 32px;
    }

    .editable-row:hover .editable-cell-value-wrap {
        padding: 4px 11px;
        border: 1px solid #d9d9d9;
        border-radius: 4px;
    }

    [data-theme='dark'] .editable-row:hover .editable-cell-value-wrap {
        border: 1px solid #434343;
    }
</style>

<div class="site-layout-background" style="padding: 24px;">
    <div class="mms-nav-title">
        <div class="mms-text-title px-4 py-3">ค่าบริการทางการแพทย์ AdjRW</div>
    </div>
    <div class="container pt-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item" aria-current="page" @onclick=@(() => goEdit(1))>
                    <span class="breadcum-sucress py-2">จัดการวงเงินงบประมาณ</span>
                </li>
                <li class="breadcrumb-item" aria-current="page">
                    <span class="breadcum-process py-2">ตั้งค่าวงเงินงบประมาณ</span>
                </li>
            </ol>
        </nav>
        <hr />

        <div class="row py-4"> 
                <div class="mms-media-start">
                    <div class="mms-txt-headdetail">ยอดเงินที่เรียกคืน<span class="star-comment">*</span></div>
                    <div class="ps-2">
                        <Input Placeholder="Basic usage" @bind-Value="@txtValue" />
                    </div>
                </div>
        </div>
        <div class="row py-4">
            <div class="col-sm-12 col-md-5">
                <div class="mms-media-start" @onclick=@(() => goEdit(3))>
                    <Button Type="@ButtonType.Primary"><i class="fa-solid fa-clock-rotate-left"></i>&nbsp; เรียกดูประวัติเรียกคืน</Button>
                </div>
            </div>
            <div class="col-sm-12 col-md-7">
                <div class="row mms-media-center">
                    <div class="col-md-12 col-lg-5 d-lg-flex justify-content-lg-end py-1">
                        <Button Type="@ButtonType.Primary" OnClick="addRow"><i class="fa-solid fa-circle-plus"></i> &nbsp; เพิ่ม</Button>
                    </div>
                    <div class="col-md-12 col-lg-7 py-1">
                        <Space Direction="@DirectionVHType.Vertical" Class="mms-btn-serch w-100">
                            <SpaceItem>
                                <Search Placeholder="ข้อมูลที่ต้องการค้นหา.." EnterButton="true" />
                            </SpaceItem>
                        </Space>
                    </div>
                </div>
            </div>
        </div>
        <Table DataSource="listOfData" RowClassName="@(_=>"editable-row")" Bordered ScrollX="1000">
            <PropertyColumn Property="c=>c.Id" Title="ลำดับ" Width="5%" Align="ColumnAlign.Center"></PropertyColumn>
            <PropertyColumn Property="c=>c.StartDate" Width="20%" Title="วันที่เริ่ม" Align="ColumnAlign.Center">
                @if (editId == context.Id)
                {
                    <DatePicker TValue="DateTime" Picker="@DatePickerType.Date" @bind-Value="context.StartDate" OnChange="stopEdit" />
                }
                else
                {
                    <div class="editable-cell-value-wrap" style="padding-right:24px" @onclick="()=>startEdit(context.Id)">
                        @context.StartDate
                    </div>
                }
            </PropertyColumn>
            <PropertyColumn Property="c=>c.EndDate" Title="วันที่สิ้นสุด" Width="20%" Align="ColumnAlign.Center">
                @if (editId == context.Id)
                {
                    <DatePicker TValue="DateTime" Picker="@DatePickerType.Date" @bind-Value="context.EndDate" OnChange="stopEdit" />
                }
                else
                {
                    <div class="editable-cell-value-wrap" style="padding-right:24px" @onclick="()=>startEdit(context.Id)">
                        @context.EndDate
                    </div>
                }
            </PropertyColumn>
            <PropertyColumn Property="c=>c.BudGet" Title="งบประมาณต่อคน (บาท)" Width="15%" Align="ColumnAlign.Center">
                @if (editId == context.Id)
                {
                    <Input Type="text" @bind-Value="context.BudGet" OnBlur="stopEdit" />
                }
                else
                {
                    <div class="editable-cell-value-wrap" style="padding-right:24px" @onclick="()=>startEdit(context.Id)">
                        @if (context.BudGet == 0)
                        {
                            <div> ... </div>
                        }
                        else
                        {
                            @String.Format("{0:n0}",context.BudGet)
                        }
                    </div>
                }
            </PropertyColumn>
            <PropertyColumn Property="c=>c.People" Title="จำนวนผู้ประกันตน" Width="15%" Align="ColumnAlign.Center"></PropertyColumn>
            <PropertyColumn Property="c=>c.BudGetYear" Title="วงเงินงบประมาณต่อปี (บาท)" Width="15%" Align="ColumnAlign.Center">
                @if (context.BudGetYear == 0)
                {
                    <div> ... </div>
                }
                else
                {
                    @String.Format("{0:n0}",context.BudGetYear)
                }
            </PropertyColumn>
            @* <ActionColumn Title="Action">
            <Popconfirm Title="Sure to delete?"
            OnConfirm="()=> deleteRow(context.Id)"
            OkText="Yes"
            CancelText="No">
            <a>Delete</a>
            </Popconfirm>
            </ActionColumn>*@
        </Table>
        <div class="mms-media-end">
            <div>
                <Button Class="ant-btn-distable" @onclick=@(() => goEdit(1))><i class="fa-solid fa-circle-chevron-left"></i> &nbsp; ย้อนกลับ</Button>

                <Button Type="@ButtonType.Primary"><i class="fa-solid fa-floppy-disk"></i> &nbsp; บันทึก</Button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<int> IndexPage { get; set; }
    string txtValue { get; set; }

    public async Task goEdit(int item)
    {
        await IndexPage.InvokeAsync(item);
    }

    int i = 0;
    string editId;
    public class ItemData
    {
        public string Id { get; set; }
        public string Name { get; set; }
        public string Age { get; set; }
        public int BudGet { get; set; }
        public string People { get; set; }
        public int BudGetYear { get; set; }
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
    };

    List<ItemData> listOfData = new List<ItemData>
        {
            new ItemData
            {
            Id = "1",
            Name = "xxxxxxx",
            Age = "Test Ter",
            StartDate = DateTime.Now,
            EndDate = DateTime.Now,
            BudGet = 500,
            People = "10000",
            BudGetYear = 800000
            },
            new ItemData
            {
            Id = "2",
            Name = "xxxxxxx",
            Age = "Test Ter2",
            StartDate = DateTime.Now,
            EndDate = DateTime.Now,
            BudGet = 200,
            People = "5000",
            BudGetYear = 100000
            }
        };

    void addRow()
    {
        i = listOfData.Count() + 1;

        listOfData.Add(new ItemData
            {
                Id = $"{i}",
                Name = "",
                Age = "",
                StartDate = DateTime.Now,
                EndDate = DateTime.Now,
                BudGet = 0,
                People = "...",
                BudGetYear = 0
            });
    }

    //void deleteRow(string id)
    //{
    //    listOfData.Where(d => d.Id != id).ToArray();
    //}

    void startEdit(string id)
    {
        editId = id;
    }

    void stopEdit()
    {
        var editedData = listOfData.FirstOrDefault(x => x.Id == editId);
        Console.WriteLine(JsonSerializer.Serialize(editedData));
        editId = null;
    }

    protected override void OnInitialized()
    {
        addRow();
        addRow();
    }
}
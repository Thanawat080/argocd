@using System.ComponentModel

<div class="site-layout-background" style="padding: 24px;">
    <div class="mms-nav-title">
        <div class="mms-text-title px-4 py-3">ค่าบริการทางการแพทย์ HIV</div>
    </div>
    <div class="container py-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item " style="cursor: pointer;" aria-current="page">
                    <span class="breadcum-sucress py-2">รายการขอเบิก</span>
                </li>
                <li class="breadcrumb-item" aria-current="page">
                    <span class="breadcum-process py-2">2566</span>
                </li>
                <li class="breadcrumb-item" aria-current="page">
                    <span class="breadcum-process py-2">8</span>
                </li>
            </ol>
        </nav>
        <hr />
        <div class="row py-4 align-items-center">
            <div class="col-sm-12 col-md-9 mms-media-start">
                @*
                <div class="mms-media-end">
                <Button Type="@ButtonType.Primary" @onclick=@(() => goEdit())><i class="fa-solid fa-circle-plus"></i> &nbsp; เพิ่ม</Button>
                </div>*@
            </div>
            <div class="col-sm-12 col-md-3">
                <Space Direction="@DirectionVHType.Vertical" Class="mms-btn-serch w-100">
                    <SpaceItem>
                        <Search Placeholder="ข้อมูลที่ต้องการค้นหา.." EnterButton="true" />
                    </SpaceItem>
                </Space>
            </div>
        </div>
        <Table DataSource="@data" Bordered PageSize="50">
                <ColumnDefinitions>
                    <PropertyColumn Title="ลำดับ" Property="c=>c.Key" />
                    <PropertyColumn Title="เลขที่ NAP+" Property="c=>c.Name" />
                    <PropertyColumn Title="ชื่อ LAB" Property="c=>c.Age" />
                    <PropertyColumn Title="ผล LAB" Property="c=>c.Street" />
                    <PropertyColumn Title="วันที่ตรวจ LAB " Property="c=>c.Building" />
                    <PropertyColumn Title="จำนวนขอเบิก(บาท)" Property="c=>c.Number" />
                    <PropertyColumn Title="จำนวนอนุมัติจ่าย(บาท)" Property="c=>c.CompanyAddress" />


                </ColumnDefinitions>
             
            </Table>
            <div class="mms-media-end">
                <div>
                    <Button Class="ant-btn-distable" @onclick=@(() => goBack())><i class="fa-solid fa-circle-chevron-left"></i> &nbsp; ย้อนกลับ</Button>
                </div>
            </div>

        </div>
    </div>




    @if (isloading == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}

@code {
    [Parameter]
    public EventCallback<int> IndexPage { get; set; }

    Data[] data;
    TableFilter<string>[] filters;

    public bool isloading = false;
    List<ItemData> todos = new List<ItemData>();
    public class Data
    {
        public int Key { get; set; }

        public string Name { get; set; }

        public int Age { get; set; }

        public string Street { get; set; }

        public string Building { get; set; }

        public int Number { get; set; }

        public string CompanyAddress { get; set; }

        public string CompanyName { get; set; }

        public string Gender { get; set; }
    }

    public async Task goEdit()
    {
        await IndexPage.InvokeAsync(2);
    }

    RenderFragment _audioIcon =@<Icon Type="audio" Theme="outline" Style="color: #1890ff" />;


    protected override async Task OnInitializedAsync()
    {
        isloading = true;
        StateHasChanged();
        data = Enumerable.Range(0, 100).Select(x => new Data
            {
                Key = x,
                Name = "John Brown",
                Age = x + 1,
                Street = "Lake Park",
                Building = "C",
                Number = 2035,
                CompanyAddress = "Lake Street 42",
                CompanyName = "SoftLake Co",
                Gender = "M",
            }).ToArray();

        filters = new TableFilter<string>[]
        {
            new TableFilter<string>
            {
                Text = "Joe",
                Value = "Joe"
            },
            new TableFilter<string>
            {
                Text = "John",
                Value = "John"
            },
        };
        todos = Enumerable.Range(0, 10).Select(i => new ItemData
            {
                Id = $"{i}",
                inject = $"2566/0{i}",
                datein = $"2555-06-02",
                dateprocess = "2555-07-22",
            }).ToList();

        isloading = false;
        StateHasChanged();


    }

    public class ItemData
    {
        public string Id { get; set; }

        public string? inject { get; set; }

        public string datein { get; set; }

        public string dateprocess { get; set; }

    };

    public async Task goBack()
    {
        await IndexPage.InvokeAsync(1);
    }



}

@inject ModalService _modalService
@using sso.mms.fees.admin.Providers.PromoteHealth.AssignHealthChecklist;
@inject AssignHealthChecklistServices AssignHealthChecklistServices;


<div class="site-layout-background" style="padding: 24px;">
    <div class="mms-nav-title">
        <div class="mms-text-title px-4 py-3">ค่าบริการทางการแพทย์ส่งเสริมสุขภาพและป้องกันโรค</div>
    </div>
    <div class="container py-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item" aria-current="page">
                    <span class="breadcum-process py-2">กำหนดรายการตรวจสุขภาพ</span>
                </li>
            </ol>
        </nav>
        <hr />
            <div class="row py-4">
                <div class="col-md-12 col-lg-9"></div>
                <div class="col-md-12 col-lg-3">
                    <Space Direction="@DirectionVHType.Vertical" Class="mms-btn-serch w-100">
                        <SpaceItem>
                            <Search Placeholder="ข้อมูลที่ต้องการค้นหา.." EnterButton="true" />
                        </SpaceItem>
                    </Space>
                </div>
            </div>
        <Table DataSource="listOfData" TItem="AaiHealthBudgetYearM" RowClassName="@(_=>"editable-row")" Bordered ScrollX="1000">
            <ChildContent Context="data">
                <Column TData="string" Title="ลำดับ" Width="7%" Style="text-align:center;">
                    @String.Format("{0:d}", listOfData.IndexOf(data) + 1)
                </Column>
                <Column TData="string" Title="ปีงบประมาณ" Width="44%" Style="text-align:center;">
                    @data.BudgetYear
                </Column>
                <Column TData="string" Title="วันที่แก้ไข" Width="44%" Style="text-align:center;">
                    @data.UpdateDate.Value.AddYears(543).ToString("dd/MM/yyyy")
                </Column>
                <Column TData="string" Width="5%" Style="text-align:center;">
                    @if (@data.BudgetYear.ToString() == (DateTime.Now.Year + 543).ToString())
                    {
                        <img title="แก้ไข" src="helper_shared/PortalAdminImage/edit.png" style="width:24px;height:24px; cursor:pointer;" @onclick=@(() => goEdit(2, true, data.BudgetYear)) />
                    }
                    else
                    {
                        <img title="ดู" src="helper_shared/PortalAdminImage/eye.png" style="width:24px;height:24px; cursor:pointer;" @onclick=@(() => goEdit(2, false, data.BudgetYear)) />
                    }
                </Column>
            </ChildContent>
        </Table>
    </div>
</div>

<Modal Title="@title"
       Visible="@_visible"
       OnOk="@HandleOk"
       OnCancel="@HandleCancel">
    <p>Some contents...</p>
    <p>Some contents...</p>
    <p>Some contents...</p>
</Modal>

@if (isloading == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}


@code {
    [Parameter]
    public EventCallback<(int, bool, string)> IndexPage { get; set; }
    List<AaiHealthBudgetYearM> listOfData = new List<AaiHealthBudgetYearM>();

    public bool isloading = false;
    public async Task goEdit(int item, bool edit, string year)
    {
        await IndexPage.InvokeAsync((item, edit, year));
    }

    RenderFragment _audioIcon =@<Icon Type="audio" Theme="outline" Style="color: #1890ff" />;


    protected override async void OnInitialized()
    {
        isloading = true;
        StateHasChanged();
        listOfData = await AssignHealthChecklistServices.GetAllBudYearM();
        
        isloading = false;
        StateHasChanged();
    }


    private void OnBlur()
    {
        Console.WriteLine("blur");
    }

    private void OnFocus()
    {
        Console.WriteLine("focus");
    }

    private void OnSearch(string value)
    {
        Console.WriteLine($"search: {value}");
    }



    string title = "BasicModal";
    bool _visible = false;

    private void HandleOk(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible = false;
    }

    private void HandleCancel(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible = false;
    }

}

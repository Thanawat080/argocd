@using MatBlazor
@inject HttpClient httpClient
@using Newtonsoft.Json;
@inject SweetAlertService Swal;
@using sso.mms.fees.admin.Providers.PromoteHealth.AssignHealthChecklist;
@inject AssignHealthChecklistServices AssignHealthChecklistServices;

<style>
    input {
        color: black !important;
    }
</style>
<div class="site-layout-background" style="padding: 24px;">
    <div class="mms-nav-title">
        <div class="mms-text-title px-4 py-3">ค่าบริการทางการแพทย์ส่งเสริมสุขภาพและป้องกันโรค</div>
    </div>
    <div class="container py-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item " style="cursor: pointer;" aria-current="page" @onclick="()=> goBack(1)">
                    <span class="breadcum-sucress py-2">กำหนดรายการตรวจสุขภาพ</span>
                </li>
                <li class="breadcrumb-item " style="cursor: pointer;" aria-current="page" @onclick="()=> goBack(2)">
                    <span class="breadcum-sucress py-2">ปี @Year</span>
                </li>
                <li class="breadcrumb-item" aria-current="page">
                    @if (Type == "add")
                    {
                        <span class="breadcum-process py-2">เพิ่มรายการ</span>
                    }
                    else
                    {
                        <span class="breadcum-process py-2">@checklistm.ChecklistName</span>
                    }

                </li>
            </ol>
        </nav>
        <hr />
        <div class="row pb-3">
            <div class="col-xl-3 mms-media-start">
                <div class="mms-txt-headdetail w-50">ปีงบประมาณ</div>&nbsp;
                <Input Placeholder="Basic usage" @bind-Value="@budgetyearm.BudgetYear" Disabled="true" />
            </div>
            <div class="col-xl-4 mms-media-center">
                <div class="mms-txt-headdetail w-50">วันที่แก้ไขล่าสุด</div>&nbsp;
                <DatePicker @bind-Value="@budgetyearm.UpdateDate" Format="dd/MM/yyyy" Disabled="true" />
            </div>
            <div class="col-xl-5 mms-media-end">
                <div class="mms-txt-headdetail w-50">แก้ไขล่าสุดโดย</div>&nbsp;
                <Input Placeholder="Basic usage" @bind-Value="@budgetyearm.UpdateBy" Disabled="true" />
            </div>
        </div>
        <div class="row pb-3">
            <div class="col-xl-7 mms-media-start">
                <div class="mms-txt-headdetail" style="width:20% !important;">รายการตรวจ</div>&nbsp;
                <Input Placeholder="Basic usage" @bind-Value="@checklistm.ChecklistName" Disabled='Type == "view" ? true : false' />
            </div>
            @*            <div class="col-xl-4 mms-media-center">
            </div>*@
            <div class="col-xl-5 mms-media-end">
                <div class="mms-txt-headdetail w-50">อัตราค่าบริการ</div>&nbsp;
                <Input Style="text-align: end" @bind-Value="@checklistPrice" Disabled='Type == "view" ? true : false' />
            </div>
        </div>
        <div class="row pb-3">
            <div class="col-xl-5 mms-media-start">
                <div class="mms-txt-headdetail" style="width:32%;">ชื่อ Code</div>&nbsp;
                <Input Placeholder="Basic usage" @bind-Value="@checklistm.ChecklistCode" Disabled='Type == "view" ? true : false' />
            </div>
            <div class="col-xl-5 mms-media-center">
                <div class="mms-txt-headdetail" style="width:24%;">ชื่อย่อ</div>&nbsp;
                <Input Placeholder="Basic usage" @bind-Value="@checklistm.ChecklistShortname" Disabled='Type == "view" ? true : false' />
            </div>

        </div>
        <div class="row pb-3">
            <div class="col-xl-3 mms-media-start">
                <div class="mms-txt-headdetail" style="width:55% !important;">สถานะการใช้งาน</div>&nbsp;
                <RadioGroup @bind-Value="@checklistm.ChecklistStatus" Disabled='Type == "view" ? true : false'>
                    <Radio Value="@("A")">ใช้</Radio>
                    <Radio Value="@("I")">ไม่ใช้</Radio>
                </RadioGroup>
            </div>
            <div class="col-xl-5 mms-media-center">
                <div class="mms-txt-headdetail" style="width:60% !important;">สถานพยาบาลต้องกำหนดค่าอ้างอิง</div>&nbsp;
                <RadioGroup @bind-Value="@checklistm.IsSetRef" Disabled='Type == "view" ? true : false'>
                    <Radio Value=@true>ใช้</Radio>
                    <Radio Value=@false>ไม่ใช้</Radio>
                </RadioGroup>
            </div>
            
        </div>
        
        <div class="row py-4">
            <div class="mms-txt-headdetail set-tab-title-style my-4">รายการที่กำหนด</div>
            <div class="col-9">
                @if (@Type != "view")
                {
                    <Button Type="@ButtonType.Primary" @onclick=@(() => addMainItemTop())><i class="fa-solid fa-circle-plus"></i> &nbsp; เพิ่ม</Button>
                }
            </div>
            <div class="col-md-3">
                <Space Direction="@DirectionVHType.Vertical" Class="mms-btn-serch w-100">
                    <SpaceItem>
                        <Search Placeholder="ข้อมูลที่ต้องการค้นหา.." EnterButton="true" />
                    </SpaceItem>
                </Space>
            </div>
        </div>
        <Table DataSource="checklistd" TItem="AaiHealthCheckListDView" RowClassName="@(_=>"editable-row")" Bordered>
            <ChildContent Context="data">
                <Column TData="string" Title="ลำดับ" Width="7%" Style="text-align:center;">
                    @String.Format("{0:d}", checklistd.IndexOf(data) + 1)
                </Column>
                <Column TData="string" Title="รายการ" Width="48%" Style="text-align:center;">
                    @if (@data.ChecklistDtId == 0)

                    {
                        <div class="mms-media-end">
                            <Input Type="text" @bind-Value="data.ChecklistDtName"
                                              AutoFocus Style="border-top-right-radius:0px !important; border-bottom-right-radius:0px !important" />
                            <div class="mms-media-end">
                                @*                                <div style="border-radius:0px, 4px, 4px, 0px; width:40px; height:41px; background-color:#FFCC41; cursor:pointer;" @onclick=@(() => addItemTop())>
                            <i class="fa-regular fa-floppy-disk" style="background-color:#FFCC41;color:white;font-size: 25px;padding-top: 6px;"></i>
                            </div>*@
                                <div style="border-radius:0px, 4px, 4px, 0px; width:40px; height:41px; background-color:#F56C6C; border-top-right-radius:6px; border-bottom-right-radius:6px; cursor:pointer;" @onclick=@(() => deleteItemTop(@String.Format("{0:d}", checklistd.IndexOf(data))))>
                                    <i class="fa-regular fa-trash-can" style="background-color: #F56C6C;font-size: 22px;padding-top: 7px;color: white;"></i>
                                </div>
                            </div>
                        </div>

                    }
                    else if (data.Edit)
                    {
                        <div class="mms-media-end">
                            <Input Type="text" @bind-Value="data.ChecklistDtName"
                                              AutoFocus Style="border-top-right-radius:0px !important; border-bottom-right-radius:0px !important" />
                            @*                            <div style="border-radius:0px, 4px, 4px, 0px; width:40px; height:41px; background-color:#FFCC41; cursor:pointer;" @onclick=@(() => stopEditTop())>
                        <i class="fa-regular fa-floppy-disk" style="background-color:#FFCC41;color:white;font-size: 25px;padding-top: 6px;"></i>
                        </div>*@
                        </div>
                    }
                    else
                    {
                        <div>
                            @data.ChecklistDtName
                        </div>
                    }
                </Column>
                <Column TData="string" Width="13%" Style="text-align:center;" Title="สถานะการใช้งาน">
                    <Switch @bind-Value="data.ChecklistDtStatus" Disabled='Type != "view" ? false : true' />
                    <label>
                        @(
                            data.ChecklistDtStatus ? "เปิด" : "ปิด"
                            )
                    </label>
                </Column>
                @if (Type != "view")
                {
                    <Column TData="string" Width="6%" Style="text-align:center;" Title="">
                        <img title="แก้ไข" src="helper_shared/PortalAdminImage/edit.png" style="width:24px;height:24px; cursor:pointer;" @onclick=@(() => editTop(data.ChecklistDtId)) />
                    </Column>
                }

            </ChildContent>
        </Table>
        <div class="row py-4">
            <div class="mms-txt-headdetail set-tab-title-style my-4">รายการที่สามารถเพิ่มได้</div>
            <div class="col-9">
                @if (@Type != "view")
                {
                    <Button Type="@ButtonType.Primary" @onclick=@(() => addMainItemBottom())><i class="fa-solid fa-circle-plus"></i> &nbsp; เพิ่ม</Button>
                }
            </div>
            <div class="col-md-3">
                <Space Direction="@DirectionVHType.Vertical" Class="mms-btn-serch w-100">
                    <SpaceItem>
                        <Search Placeholder="ข้อมูลที่ต้องการค้นหา.." EnterButton="true" />
                    </SpaceItem>
                </Space>
            </div>

        </div>
        <Table DataSource="checklistdBottom" TItem="AaiHealthCheckListDView" RowClassName="@(_=>"editable-row")" Bordered ScrollX="1000">
            <ChildContent Context="data">
                <Column TData="string" Title="ลำดับ" Width="7%" Style="text-align:center;">
                    @String.Format("{0:d}", checklistdBottom.IndexOf(data) + 1)
                </Column>
                <Column TData="string" Title="รายการ" Width="48%" Style="text-align:center;">
                    @if (@data.ChecklistDtId == 0)

                    {
                        <div class="mms-media-end">
                            <Input Type="text" @bind-Value="data.ChecklistDtName"
                                              AutoFocus Style="border-top-right-radius:0px !important; border-bottom-right-radius:0px !important" />
                            <div class="mms-media-end">
                                <div style="border-radius:0px, 4px, 4px, 0px; width:40px; height:41px; background-color:#F56C6C; border-top-right-radius:6px; border-bottom-right-radius:6px; cursor:pointer;" @onclick=@(() => deleteItemBottom(@String.Format("{0:d}", checklistdBottom.IndexOf(data))))>
                                    <i class="fa-regular fa-trash-can" style="background-color: #F56C6C;font-size: 22px;padding-top: 7px;color: white;"></i>
                                </div>
                            </div>
                        </div>

                    }
                    else if (data.Edit)
                    {
                        <div class="mms-media-end">
                            <Input Type="text" @bind-Value="data.ChecklistDtName"
                                              AutoFocus Style="border-top-right-radius:0px !important; border-bottom-right-radius:0px !important" />
                        </div>
                    }
                    else
                    {
                        @data.ChecklistDtName
                    }
                </Column>
                <Column TData="string" Width="13%" Style="text-align:center;" Title="สถานะการใช้งาน">
                    <Switch @bind-Value="data.ChecklistDtStatus" Disabled='Type != "view" ? false : true' />
                    <label>
                        @(
                            data.ChecklistDtStatus ? "เปิด" : "ปิด"
                            )
                    </label>
                </Column>
                @if (Type != "view")
                {
                    <Column TData="string" Width="6%" Style="text-align:center;" Title="">
                        <img title="แก้ไข" src="helper_shared/PortalAdminImage/edit.png" style="width:24px;height:24px; cursor:pointer;" @onclick=@(() => editBottom(data.ChecklistDtId)) />
                    </Column>
                }
            </ChildContent>
        </Table>

        <div class="mms-media-end pt-4">
            <Button Type="@ButtonType.Dashed" Class="ant-btn-distable" @onclick=@(() => goBack(2))><i class="fa-solid fa-circle-chevron-left"></i> &nbsp; ย้อนกลับ</Button>
            &nbsp;&nbsp;
            @if (Type != "view")
            {
                <Button Type="@ButtonType.Primary" @onclick=@(() => save())><i class="fa-solid fa-floppy-disk"></i> &nbsp; บันทึก</Button>
            }
        </div>

    </div>
</div>

@if (DialogIsOpen)
{
    <ModalSaveChange OnClose="@OnDialogClose" title="ยืนยันการบันทึกข้อมูลใช่หรือไม่" description="">
    </ModalSaveChange>
}
@if (isloading == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}

@code {
    [Parameter]
    public EventCallback<(int, string)> IndexPage { get; set; }

    [Parameter]
    public string Type { get; set; }


    [Parameter]
    public decimal? Checklistid { get; set; }

    [Parameter]
    public string? Year { get; set; }

    bool status;
    bool active = true;
    string _okText = "ยืนยัน";
    string _cancelText = "ยกเลิก";
    bool _visible1 = false;
    private void HandleOk(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible1 = false;
    }

    private void HandleCancel(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible1 = false;
    }
    public bool isloading = false;
    public string textforedit;
    string txtValue { get; set; }
    AaiHealthBudgetYearM budgetyearm = new AaiHealthBudgetYearM();
    AaiHealthChecklistM checklistm = new AaiHealthChecklistM();
    List<AaiHealthCheckListDView> checklistd = new List<AaiHealthCheckListDView>();
    List<AaiHealthCheckListDView> checklistdBottom = new List<AaiHealthCheckListDView>();
    ManageAssignHealthCheckListView datasend = new ManageAssignHealthCheckListView();
    private bool DialogIsOpen = false;
    public string? checklistPrice;
    public async Task goEdit(int item, string edit)
    {
        await IndexPage.InvokeAsync((item, edit));
    }

    public async Task goBack(int item)
    {
        await IndexPage.InvokeAsync((item, Type));
    }


    RenderFragment _audioIcon =@<Icon Type="audio" Theme="outline" Style="color: #1890ff" />  ;


    protected override async Task OnInitializedAsync()
    {
        isloading = true;
        StateHasChanged();
        budgetyearm = await AssignHealthChecklistServices.GetByBudYear(Year);
        budgetyearm.UpdateDate.Value.AddYears(543);
        if (Type != "add")
        {
            checklistm = await AssignHealthChecklistServices.GetById(Checklistid);
            checklistPrice = checklistm.ChecklistPrice.ToString("N0");
            checklistd = await AssignHealthChecklistServices.GetByCheckListId(Checklistid);
            checklistdBottom = checklistd.Where(x => x.IsOption == true).ToList();
            checklistd = checklistd.Where(x => x.IsOption != true).ToList();
        }


        isloading = false;
        StateHasChanged();


    }

    public async void addMainItemTop()
    {
        if (Checklistid != null)
        {
            checklistd.Insert(0, new AaiHealthCheckListDView()
                {
                    ChecklistDtId = 0,
                    ChecklistDtName = null,
                    ChecklistId = (decimal)Checklistid,
                    IsOption = false,
                    ChecklistDtStatus = true,
                    CreateDate = DateTime.Now,
                    CreateBy = "system",
                    UpdateDate = DateTime.Now,
                    UpdateBy = "system",
                    Edit = false,
                });
        }
        else
        {
            checklistd.Insert(0, new AaiHealthCheckListDView()
                {
                    ChecklistDtId = 0,
                    ChecklistDtName = null,
                    ChecklistId = 0,
                    IsOption = false,
                    ChecklistDtStatus = true,
                    CreateDate = DateTime.Now,
                    CreateBy = "system",
                    UpdateDate = DateTime.Now,
                    UpdateBy = "system",
                    Edit = false,
                });
        }

    }
    public async void editTop(decimal id)
    {
        if (id != 0)
        {
            checklistd.Where(x => x.ChecklistDtId == id).FirstOrDefault().Edit = true;
        }

    }

    public async void deleteItemTop(string index)
    {
        int index1 = Int32.Parse(index);
        var itemToRemove = checklistd[index1];
        checklistd.Remove(itemToRemove);
    }






    public async void editBottom(decimal id)
    {
        if (id != 0)
        {
            checklistdBottom.Where(x => x.ChecklistDtId == id).FirstOrDefault().Edit = true;
        }

    }

    public async void deleteItemBottom(string index)
    {
        int index1 = Int32.Parse(index);
        var itemToRemove = checklistdBottom[index1];
        checklistdBottom.Remove(itemToRemove);
    }


    public async void addMainItemBottom()
    {

        if (Checklistid != null)
        {
            checklistdBottom.Insert(0, new AaiHealthCheckListDView()
                {
                    ChecklistDtId = 0,
                    ChecklistDtName = null,
                    ChecklistId = (decimal)Checklistid,
                    IsOption = true,
                    ChecklistDtStatus = true,
                    CreateDate = DateTime.Now,
                    CreateBy = "system",
                    UpdateDate = DateTime.Now,
                    UpdateBy = "system",
                    Edit = false,
                });
        }
        else
        {
            checklistdBottom.Insert(0, new AaiHealthCheckListDView()
                {
                    ChecklistDtId = 0,
                    ChecklistDtName = null,
                    ChecklistId = 0,
                    IsOption = true,
                    ChecklistDtStatus = true,
                    CreateDate = DateTime.Now,
                    CreateBy = "system",
                    UpdateDate = DateTime.Now,
                    UpdateBy = "system",
                    Edit = false,
                });
        }
    }
    private async Task OnDialogClose(bool isOk)
    {
        if (isOk)
        {
            isloading = true;
            if (Type == "edit")
            {

                datasend.dataD = checklistd.Concat(checklistdBottom).ToList();
                checklistm.ChecklistPrice = Convert.ToDecimal(checklistPrice);
                datasend.dataM = checklistm;
                
                // craete
                var res1 = await AssignHealthChecklistServices.saveEditType(datasend);
                if (res1 == "success")
                {
                    isloading = false;
                    StateHasChanged();
                    await Swal.FireAsync(
                          "บันทึกข้อมูลสำเร็จ",
                          null,
                          SweetAlertIcon.Success
                          );
                    await IndexPage.InvokeAsync((2, Type));
                }
                else
                {
                    isloading = false;
                    StateHasChanged();
                    await Swal.FireAsync(
                          "บันทึกข้อมูลไม่สำเร็จ",
                          null,
                          SweetAlertIcon.Error
                          );
                    
                }


            }
            else if (Type == "add")
            {
                checklistm.BudgetYear = Year;
                checklistm.CreateBy = "system";
                checklistm.ChecklistPrice = Convert.ToDecimal(checklistPrice);
                datasend.dataM = checklistm;
                
                datasend.dataD = checklistd.Concat(checklistdBottom).ToList();
                var res2 = await AssignHealthChecklistServices.saveAddType(datasend);
                if (res2 == "success")
                {
                    isloading = false;
                    StateHasChanged();
                    await Swal.FireAsync(
                          "บันทึกข้อมูลสำเร็จ",
                          null,
                          SweetAlertIcon.Success
                          );
                    await IndexPage.InvokeAsync((2, Type));
                }
                else
                {
                    isloading = false;
                    StateHasChanged();
                    await Swal.FireAsync(
                          "บันทึกข้อมูลไม่สำเร็จ",
                          null,
                          SweetAlertIcon.Error
                          );
                    
                }
            }
        }
        DialogIsOpen = false;
    }
    public async void save()
    {
        isloading = true;
        DialogIsOpen = true;
        isloading = false;

        StateHasChanged();


    }

}

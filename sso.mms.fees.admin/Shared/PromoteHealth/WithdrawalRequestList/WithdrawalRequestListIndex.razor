@using sso.mms.fees.admin.Providers.PromoteHealth.PaymentOrderList;
@inject PaymentOrderListService PaymentOrderListService;

<style>


    .mdc-table td {
        padding: 20px !important;
    }

    .mdc-table th {
        padding: 20px !important;
    }
</style>

<div class="site-layout-background" style="padding: 24px;">
    <div class="mms-nav-title">
        <div class="mms-text-title px-4 py-3">ค่าบริการทางการแพทย์ส่งเสริมสุขภาพและป้องกันโรค</div>
    </div>
    <div class="container py-4">
        
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item" aria-current="page">
                    <span class="breadcum-process py-2">รายการขอเบิก</span>
                </li>
            </ol>
        </nav>
        <hr />
        <Table DataSource="listOfData" TItem="GetPaymentOrderList" RowClassName="@(_=>"editable-row")" Bordered ScrollX="1000">
            <ChildContent Context="data">
                <Column TData="string" Title="ลำดับ" Width="7%" Style="text-align:center;">
                    @String.Format("{0:d}", listOfData.IndexOf(data) + 1)
                </Column>
                <Column TData="string" Title="งวดการจ่าย" Style="text-align:center;">
                    @data.WithdrawalNo
                </Column>
                <Column TData="string" Title="ยอดเงินรวม (บาท)" Style="text-align:center;">
                    @data.SumPrice?.ToString("N0")
                </Column>
                <Column TData="string" Width="7%" Style="text-align:center; border-top-right-radius:8px;">
                    <img class="mx-2" title="ดู" src="helper_shared/PortalAdminImage/eye.png" style="width:24px;height:24px; cursor:pointer;" @onclick=@(() => goView(2 ,data.WithdrawalNo, data.SumPrice)) />
                </Column>
            </ChildContent>
        </Table>

    </div>
</div>

@if (isloading == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}
@code {
    [Parameter]
    public EventCallback<int> IndexPage { get; set; }
    [Parameter]
    public EventCallback<(string , decimal?)> WithdrawalNo { get; set; }

    public bool isloading = false;

    public async Task goView(int item, string wdNo, decimal? SumPrice)
    {

        await IndexPage.InvokeAsync(item);
        await WithdrawalNo.InvokeAsync((wdNo, SumPrice));
    }

    RenderFragment _audioIcon =@<Icon Type="audio" Theme="outline" Style="color: #1890ff" />;

    public class Todo
    {
        public string Year { get; set; }
        public int Id { get; set; }
        public int allprice { get; set; }

    }
    List<GetPaymentOrderList> listOfData = new List<GetPaymentOrderList>();
    protected override async void OnInitialized()
    {
        isloading = true;
        StateHasChanged();
        listOfData = await PaymentOrderListService.GetAllBudYearM();
        isloading = false;
        StateHasChanged();
    }
}

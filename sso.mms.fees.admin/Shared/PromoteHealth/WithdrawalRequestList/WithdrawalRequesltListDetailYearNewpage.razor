@using sso.mms.fees.admin.Providers.PromoteHealth.PaymentOrderList;
@inject PaymentOrderListService PaymentOrderListService;
<style>
    .hover-custom:hover, .hover-custom:hover > td {
        background-color: #EAE8EC !important;
    }
</style>

@if (Person != null)
{
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item" aria-current="page">
                <span class="breadcum-process py-2">รายละเอียด</span>
            </li>
        </ol>
    </nav>
    <hr style="width:100%" />
    <Table DataSource="@Person" TItem="AaiHealthCheckupHViewModel" RowClassName="@(_=>"editable-row")" Bordered ScrollX="1000">
        <ChildContent Context="data">
            <Column TData="Boolean" Title="" Style="text-align:center;" Width="5%">
                <Checkbox @bind-Value="data.ischeck" CheckedChange="() => funischeck(data.ischeck , data.Hospitalcode)" Disabled="!data.isShowRequest"></Checkbox>

            </Column>
            <Column TData="string" Title="ลำดับ" Style="text-align:center;">
                @String.Format("{0:d}",Person.IndexOf(data) + 1)
            </Column>
            <Column TData="string" Title="ประมวลผลด้วย Ai" Style="text-align:center;">
                @{
                    var color = "";
                    if (data.statusAi == 3)
                    {
                        color = "red";
                    }
                    else
                    {
                        color = "#334396";
                    }

                }
                @if (@data.isShowAi && (data.statusAi == 1 || data.statusAi == 3))
                {

                    <div class="" @onclick="() => opendModal(data.desAi)" style="align-items: center;justify-content: sticky;display: flex;flex-direction: column;">
                        <svg xmlns="http://www.w3.org/2000/svg" width="34" height="34" viewBox="0 0 34 34" fill="none">
                            <path d="M29.75 15.5833V12.75H26.9167V9.91667C26.9144 9.16591 26.6152 8.44654 26.0843 7.91567C25.5535 7.38481 24.8341 7.08558 24.0833 7.08333H21.25V4.25H18.4167V7.08333H15.5833V4.25H12.75V7.08333H9.91667C9.16591 7.08558 8.44654 7.38481 7.91567 7.91567C7.38481 8.44654 7.08558 9.16591 7.08333 9.91667V12.75H4.25V15.5833H7.08333V18.4167H4.25V21.25H7.08333V24.0833C7.08558 24.8341 7.38481 25.5535 7.91567 26.0843C8.44654 26.6152 9.16591 26.9144 9.91667 26.9167H12.75V29.75H15.5833V26.9167H18.4167V29.75H21.25V26.9167H24.0833C24.8341 26.9144 25.5535 26.6152 26.0843 26.0843C26.6152 25.5535 26.9144 24.8341 26.9167 24.0833V21.25H29.75V18.4167H26.9167V15.5833H29.75ZM24.0833 24.0833H9.91667V9.91667H24.0833V24.0833Z" fill="@color" />
                            <path d="M16.0947 11.3335H14.1893L11.3418 22.6668H12.7967L13.454 20.0106H16.735L17.3754 22.6668H18.8799L16.0947 11.3335ZM13.6453 18.8758L15.0875 12.6793H15.1526L16.5452 18.8758H13.6453ZM20.179 11.3335H21.5956V22.6668H20.179V11.3335Z" fill="@color" />
                        </svg>
                    </div>

                }
            </Column>
            <Column TData="string" Title="หมายเลขประจำตัวประชาชน" Style="text-align:center;">
                @data.PersonalId
            </Column>
            <Column TData="string" Title="ชื่อ-นามสกุล" Style="text-align:center;">

                @data.PatientName @data.PatientSurname
            </Column>
            <Column TData="string" Title="จำนวนรายการตรวจสอบ" Style="text-align:center;">
                @data.Useprivilege /  @data.Allprivilege
            </Column>
            <Column TData="string" Title="ยอดเบิก (บาท)" Style="text-align:center;">
                @data.Sumprice?.ToString("N0")
            </Column>
            <Column TData="string" Style="text-align:center; border-top-right-radius:8px;">
                <img class="mx-2" title="ดู" src="helper_shared/PortalAdminImage/eye.png" style="width:24px;height:24px; cursor:pointer;" @onclick=@(() => goView(Decimal.ToInt32(data.CheckupId),data.CheckupId)) />
            </Column>
        </ChildContent>
    </Table>
}

<Modal Visible="@_visible1"
       OnOk="@HandleOk"
       OnCancel="@HandleCancel"
       OkText="@_okText"
       CancelText="@_cancelText">
    <div>
        <div class="row">
            <div class="mms-txt-headdetail w-50">ผลการตรวจจาก Ai</div>&nbsp;
           
            <TextArea Placeholder="Basic usage" @bind-Value="@desAi" Disabled  Style="color: black"/>
        </div>
        <br />
    </div>
</Modal>


@code {

    [Parameter]
    public EventCallback<(int, decimal?)> IdPagenew { get; set; }
    [Parameter]
    public string InjectwdNo { get; set; }
    [Parameter]
    public string InjectHosCode { get; set; }
    [Parameter]
    public string Id { get; set; }
    [Parameter]
    public List<AaiHealthCheckupHViewModel> Person { get; set; }
    [Parameter]
    public List<GetPaymentOrderList> HospByWitdraw { get; set; }


    public bool isloading = false;
    public int iditem;
    public int idpage;
    string _okText = "ยืนยัน";
    string desAi = "";
    string _cancelText = "ยกเลิก";
    bool _visible1 = false;

    public async void opendModal(string desAii)
    {
        desAi = desAii;
        _visible1 = true;
    }


    private void HandleOk(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible1 = false;
    }

    private void HandleCancel(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible1 = false;
    }
    protected override async Task OnInitializedAsync()
    {
        isloading = true;
        if (Person != null)
        {
            isloading = false;
        }
        //GetPerson = await PaymentOrderListService.GetPerson(InjectwdNo, InjectHosCode);
        StateHasChanged();
    }
    //protected override async Task OnParametersSetAsync()
    //{
    //    GetPerson = await PaymentOrderListService.GetPerson(InjectwdNo, InjectHosCode);
    //    OnParametersSetAsync();
    //}


    private async Task funischeck(bool checkeds, string hoscode)
    {
        if (checkeds == false)
        {
            foreach (var item in HospByWitdraw.Where(x => x.HospCode == hoscode).ToList())
            {
                item.ischeck = false;
            }

        }
        else
        {
            if (Person.Where(x => x.ischeck == false).Count() == 0)
            {
                foreach (var item in HospByWitdraw.Where(x => x.HospCode == hoscode).ToList())
                {
                    item.ischeck = true;
                }

            }
        }
    }


    public async Task goView(int item, decimal? id)
    {
        await IdPagenew.InvokeAsync((item, id));
    }

}

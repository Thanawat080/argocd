@using MatBlazor
@using sso.mms.fees.admin.Providers.PromoteHealth.ReportsPromoteAIList
@using sso.mms.fees.admin.ViewModels.Responses;

@using sso.mms.fees.admin.Shared.PromoteHealth
@inject NavigationManager navigationManager
@using sso.mms.helper.Configs;

@inject ReportsPromoteAIListServices reportsPromoteAIListServices
<style>

    .mdc-table td {
        padding: 20px !important;
    }

    .mdc-table th {
        padding: 20px !important;
    }

    input {
        color: black !important;
    }
</style>

<div class="site-layout-background" style="padding: 24px;">
    <div class="mms-nav-title">
        <div class="mms-text-title px-4 py-3">ค่าบริการทางการแพทย์ส่งเสริมสุขภาพและป้องกันโรค</div>
    </div>
    <div class="container py-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item " style="cursor: pointer;" aria-current="page" @onclick="()=> goBack(1)">
                    <span class="breadcum-sucress py-2">ผลการประมวลผลด้วย AI</span>
                </li>
                <li class="breadcrumb-item" aria-current="page">
                    @if (WithdrawnoH != "" && WithdrawnoH != null)
                    {
                        <span class="breadcum-process py-2">@WithdrawnoH.Split("/")[0]/@WithdrawnoH.Split("/")[1]</span>
                    }
                    else if(WithdrawNo != null && WithdrawNo != "")
                    {
                        <span class="breadcum-process py-2">@WithdrawNo.Split("/")[0]/@WithdrawNo.Split("/")[1]</span>
                    }
                    
                </li>
            </ol>
        </nav>
        
        <hr />
        <br/>
        <br />
        <div class="row pb-3">
            <div class="col-xl-4 mms-media-start">
                <div class="mms-txt-headdetail w-50">จำนวนโรงพยาบาลทั้งหมด</div>&nbsp;
                <Input Placeholder="Basic usage" @bind-Value="@listWithdrawal.AllHospital" Disabled="true"  Style="width:30%;"/>
            </div>
            <div class="col-xl-4 mms-media-center">
                <div class="mms-txt-headdetail" style="width:40%;">จำนวนผู้ป่วยจาก AI</div>&nbsp;
                <Input Placeholder="Basic usage" @bind-Value="@listWithdrawal.Allperson" Disabled="true" Style="width:30%;" />
            </div>
            <div class="col-xl-4 mms-media-end">
                <Space Direction="@DirectionVHType.Vertical" Class="mms-btn-serch w-100">
                    <SpaceItem>
                        <Search Placeholder="ข้อมูลที่ต้องการค้นหา.." EnterButton="true" />
                    </SpaceItem>
                </Space>
            </div>
        </div>
        <br />
        <Table DataSource="@listWithdrawal.hospitalAiList" TItem="HospitalAiList" RowClassName="@(_=>"editable-row")" Bordered ScrollX="1000">
            <ChildContent Context="data">
                <Column TData="string" Title="ลำดับ" Width="7%" Style="text-align:center;">
                    @String.Format("{0:d}", listWithdrawal.hospitalAiList.IndexOf(data) + 1)
                </Column>
                <Column TData="string" Title="รหัสสถานพยาบาล" Width="15%" Style="text-align:center;">
                    @data.Hoscode
                </Column>
                <Column TData="string" Title="ชื่อสถานพยาบาล" Width="40%" Style="text-align:center;">
                    @data.Hosname
                </Column>
                <Column TData="int" Title="จำนวนรายการตรวจ" Width="15%" Style="text-align:center;">
                    @data.AllChecklist
                </Column>
                <Column TData="string" Title="ยอดเบิก(บาท)" Width="15%" Style="text-align:center;">
                    @data.Allprice
                </Column>
                <Column TData="string" Width="8%" Style="text-align:center; border-top-right-radius:8px;">
                    <img title="ดู" src="helper_shared/PortalAdminImage/eye.png" style="width:24px;height:24px; cursor:pointer;" @onclick="(() => goEdit(data.Hoscode, data.Hosname))" />
                </Column>
            </ChildContent>
        </Table>

        <div class="mms-media-end">
            <Button Class="ant-btn-distable" @onclick=@(() => goBack(1))><i class="fa-solid fa-circle-chevron-left"></i> &nbsp; ย้อนกลับ</Button>
        </div>

    </div>
</div>


<Modal Title="รายการผู้ประกันตน"
       Visible="@_visible1"
       OnOk="@HandleOk"
       OnCancel="@HandleCancel"
       Width="1500"
       Footer="null">

    <ReportsPromoteAIListSubDetail HosCode="@hoscode" HosName="@hosname" Persons="@person"></ReportsPromoteAIListSubDetail>
</Modal>




@if (isloading == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}

@code {
    [Parameter]
    public EventCallback<int> IndexPage { get; set; }
    [Parameter]
    public string WithdrawNo { get; set; }
    [Parameter]
    public string WithdrawnoH { get; set; } = "";
    [Parameter]
    public string HoscodeH { get; set; } = "";
    [Parameter]
    public string HosnameH { get; set; } = "";
    
    string desAi = "";
    bool active = true;
    string _okText = "ยืนยัน";
    public string hosname = "ยืนยัน";
    public string hoscode = "ยืนยัน";
    string _cancelText = "ยกเลิก";
    PersonForAi person = new PersonForAi();
    bool _visible1 = false;
    private void HandleOk(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible1 = false;
    }

    private void HandleCancel(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible1 = false;
    }
    public bool isloading = false;
    string txtValue { get; set; }
    HospitalAi listWithdrawal = new HospitalAi();
    public async Task goEdit(string hoscode, string hosname)
    {
        this.hoscode = hoscode;
        this.hosname = hosname;
        person = await reportsPromoteAIListServices.GetAllPersonForAI(WithdrawNo, hoscode);
        _visible1 = true;
    }

    RenderFragment _audioIcon =@<Icon Type="audio" Theme="outline" Style="color: #1890ff" />;

    public async void CsvAi(string? desAii)
    {
        desAi = desAii;
        _visible1 = true;
    }

    public async Task goBack(int item)
    {
        if (WithdrawnoH != "" && WithdrawnoH != null)
        {
            WithdrawNo = WithdrawnoH;
            navigationManager.NavigateTo($"{ConfigureCore.redirectFeesAdmin}/promoteHealth/reportsAI");
            await IndexPage.InvokeAsync(item);
        }
        else
        {
            await IndexPage.InvokeAsync(item);
        }
    }


    protected override async Task OnInitializedAsync()
    {
        isloading = true;
        StateHasChanged();
        if (WithdrawnoH != "" && WithdrawnoH != null)
        {
            this.hoscode = HoscodeH;
            this.hosname = HosnameH;
            WithdrawNo = WithdrawnoH;
            listWithdrawal = await reportsPromoteAIListServices.GetAllHosForAI(WithdrawnoH);
            person = await reportsPromoteAIListServices.GetAllPersonForAI(WithdrawnoH, HoscodeH);
            _visible1 = true;
        }
        else
        {
            listWithdrawal = await reportsPromoteAIListServices.GetAllHosForAI(WithdrawNo);
        }

        isloading = false;
        StateHasChanged();


    }



}

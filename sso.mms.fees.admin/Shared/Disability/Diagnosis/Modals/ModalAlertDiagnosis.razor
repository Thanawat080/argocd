@using System.ComponentModel.DataAnnotations;
@{
    RenderFragment okbutton =@<div style="color:#fff;">
        <Icon Type="save" Theme="outline" />
        บันทึก
    </div>;
    RenderFragment canclebutton =@<div>
        <Icon Type="close-circle" Theme="outline" />
        ยกเลิก
    </div>;
}
<style>

    .modalStyle .ant-modal-header {
        background: #F56C6C !important;
    }
</style>
<Modal Title="@title"
       Visible="@_visible"
       OnOk="@HandleOk"
       OnCancel="@HandleCancel"
       OkText="@okbutton"
       CancelText="@canclebutton"
       Width="1000"
       WrapClassName="modalStyle">

    <div class="container">

        <div class="mms-media-between">
            <div class="col-6">
                <div class="row mb-2">
                    <div class="col-sm-5 mms-txt-headdetail" style="font-size : 16px;">รายละเอียด </div>
                    <div class="col-sm">กรุณาเลือกกดปุ่มข้อมูลที่มีค่า RW สูงสุด 10% ให้เสร็จสิ้นก่อน</div>
                </div>

            </div>


        </div>
    </div>
</Modal>
@code {
    string title = "ท่านไม่สามารถทำรายการนี้ได้";
    private Model model = new Model();
    bool loading = false;
    List<ItemData> listOfData = new List<ItemData>();
    ColumnAlign columnAlign = ColumnAlign.Left;
    [Parameter]
    public bool _visible { get; set; }
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    public class ItemData
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public int Age { get; set; }
        public int count { get; set; }
        public string Address { get; set; }
    };
    protected override void OnInitialized()
    {
        listOfData = Enumerable.Range(0, 3).Select(i => new ItemData { Id = i, Name = $"Edrward {i}", Age = 102, count = i, Address = $"London Park no. {i}" }).ToList();
    }

    private void HandleCancel(MouseEventArgs e)
    {
        Console.WriteLine(e);
        OnClose.InvokeAsync(false);
    }
    private void HandleOk(MouseEventArgs e)
    {
        OnClose.InvokeAsync(false);
    }



    public class Model
    {
        [Required]
        public string Username { get; set; }
        [Required]
        public string Password { get; set; }
        public bool RememberMe { get; set; } = true;
    }
}


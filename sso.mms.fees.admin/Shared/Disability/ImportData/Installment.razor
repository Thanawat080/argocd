
<style>
    .text-ref {
        color: #7B7B7B;
        text-align: center;
        font-family: Noto Sans Thai;
        font-size: 14px;
        font-style: normal;
        font-weight: 500;
        line-height: 20px; /* 100% */
        letter-spacing: 0.2px;
    } 

    .alink {
        color: #3879FA;
        text-align: center;
        font-family: Noto Sans Thai;
        font-size: 14px;
        font-style: normal;
        font-weight: 500;
        line-height: 20px;
        letter-spacing: 0.2px;
    }
</style>

<div class="site-layout-background" style="padding: 24px;">
    <div class="mms-nav-title">
        <div class="mms-text-title px-4 py-3">ค่าบริการทางการแพทย์กรณีทุพพลภาพ / นำเข้าข้อมูล / ค้นหารายการตามงวด</div>
    </div>
    <div class="container py-4">
        <div class="d-flex justify-content-end">
            <Space Direction="@DirectionVHType.Horizontal">
                <SpaceItem>
                    <Search Placeholder="ข้อมูลที่ต้องการค้นหา.." EnterButton="true" AllowClear />
                 </SpaceItem>
             </Space>
         </div>
         <hr />
         <div class="mt-3" style="padding: 24px;">
             <Table DataSource="data" OnChange="OnChange" TItem="Data" Bordered>
                 <Column Title="ลำดับ" DataIndex="ID" TData="int" Width="80px" Align="ColumnAlign.Center" />
                 <Column Title="งวด" DataIndex="installment" TData="int" Align="ColumnAlign.Center">
                    <a @onclick=@(() => goEdit(2,@context.installment)) class="alink">@context.installment</a>
                 </Column>
             </Table>
         </div>

         <div class="text-ref d-flex justify-content-start ps-3">*กรุณาเลือกงวดที่ต้องการทำเบิก</div>
     </div>
 </div>

 @inject IMessageService message;

 @code {
    [Parameter]
    public EventCallback<(int, int)> IndexPage { get; set; }

    public record Data(int ID, int installment);

    public Data[] data =
    {
        new(2,6702),
        new(3,6701)
    };

    void OnChange(QueryModel<Data> query)
    {
        Console.WriteLine(JsonSerializer.Serialize(query));
    }

    private string? txtValue { get; set; }
    private bool loading;

    private void Handle(string value)
    {
        Console.WriteLine(value);
    }

    public async Task goEdit(int index, int item)
    {
        await IndexPage.InvokeAsync((index, item));
    }

    public async Task OnSearch()
    {
        await message.Loading($"searching {txtValue}", 2);
    }

    private async Task OnEnter(KeyboardEventArgs e)
    {
        Console.WriteLine("Enter pressed");
        loading = true;
        await Task.Delay(3000);
        loading = false;
    }

    string _size = ButtonSize.Large;

    void handleChange(string value)
    {
        Console.WriteLine(value);
    }

    void handleItemsChange(IEnumerable<string> value)
    {
        Console.WriteLine(value);
    }



    private RenderFragment _overlayMenu =@<Menu>
        <MenuItem>
            <a target="_blank" rel="noopener noreferrer" href="http://www.alipay.com/">
                1st menu item
            </a>
        </MenuItem>
        <MenuItem>
            <a target="_blank" rel="noopener noreferrer" href="http://www.taobao.com/">
                2nd menu item
            </a>
        </MenuItem>
        <MenuItem>
            <a target="_blank" rel="noopener noreferrer" href="http://www.tmall.com/">
                3rd menu item
            </a>
        </MenuItem>
    </Menu>;

    private RenderFragment ButtonsRender(RenderFragment leftButton, RenderFragment rightButton)
    {
        return @<Template>
        <span>@leftButton</span>
        @rightButton
    </Template>;
    }




}





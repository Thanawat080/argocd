@inject NavigationManager NavigationManager
<style>
    .anticon > .anticon {
        line-height: 0;
        vertical-align: 0;
        color: #ffffff !important;
    }

    .ant-form-item-control-input {
        position: relative;
        display: flex;
        align-items: center;
        min-height: 32px;
        padding-left: 2rem;
    }
</style>
@{
    RenderFragment footer = @<Template>
    </Template>;
}

<Modal Title="บันทึกค่าบำรุงรักษาอวัยวะ"
       Visible="@_visible"
       OnCancel="@HandleCancel"
       Footer="@footer"
       Width="1300">

    <Form Model="@model"
          LabelColSpan="8"
          WrapperColSpan="16">
        <div class="row">
            <div class="col-sm-12 col-md-6">
                <FormItem LabelTemplate="@lacheck">
                    <RadioGroup @bind-Value="@_value" Style="display: flex;flex-direction: column;">
                        <Radio Value="1">ศูนย์รับบริจากอวัยวะสภากาชาดไทย</Radio><br />
                        <Radio Value="2">ศูนย์ดวงตาสภากาชาดไทย</Radio>
                    </RadioGroup>
                </FormItem>
            </div>
            <div class="col-sm-12 col-md-6"></div>

            <div class="col-sm-12 col-md-6">
                <FormItem LabelTemplate="@lauid">
                    <Input @bind-Value="@context.Input" Placeholder="xxx-xxx-xxx-x" />
                </FormItem>
                <FormItem LabelTemplate="@laname">
                    <Input @bind-Value="@context.Input" Placeholder="xxx-xxx-xxx-x" />
                </FormItem>
                <FormItem LabelTemplate="@latype">
                    <Select @bind-Value="@_selectedValue"
                            DefaultValue="@("jack")"
                            TItemValue="string"
                            TItem="string"
                            LabelInValue="true"
                            Placeholder="--กรุณาเลือกประเภทบริการ--"
                            OnSelectedItemChanged="@(item => _selectedItem = item)">
                        <SelectOptions>
                            <SelectOption TItemValue="string" TItem="string" Value="@("jack")" Label="Jack (100)" />
                            <SelectOption TItemValue="string" TItem="string" Value="@("lucy")" Label="Jack (101)" />
                        </SelectOptions>
                    </Select>
                </FormItem>
                <FormItem LabelTemplate="@lapass">
                    <Input @bind-Value="@context.Input" ReadOnly Disabled />
                </FormItem>
            </div>
            <div class="col-sm-12 col-md-6">
                <FormItem LabelTemplate="@lahos">
                    <Input @bind-Value="@context.Input" />
                </FormItem>
                <FormItem LabelTemplate="@ladate">
                    <DatePicker TValue="DateTime?" Picker="@DatePickerType.Date" />
                </FormItem>
                <FormItem LabelTemplate="@ladonor">
                    <Input @bind-Value="@context.Input" Placeholder="xxxxx" />
                </FormItem>
                <FormItem LabelTemplate="@labut">
                    <div class="d-flex align-items-center">
                        <Input @bind-Value="@context.Input" ReadOnly Disabled /><span class="mms-txt-headdetail px-4">บาท</span>
                    </div>
                </FormItem>
            </div>
        </div>
    </Form>
    <hr />
    <div class="row">
        <div class="col-sm-12 col-md-6 pb-4">
            <label class="mms-txt-headdetail p-2">แนบไฟล์ใบขอรับค่าบริการ<span class="star-comment">*</span></label>
            <div class="banner-box-upload">
                <div class="div-file-upload">
                    <InputFile accept=".csv,.xlsx" class="custom-input-file " type="file" OnChange="@LoadImage" required />
                    <div class="container mms-media-center">
                        <div class="py-4 d-flex flex-column mms-media-center">
                            <i class="fa-solid fa-file-arrow-up pb-2" style="font-size:40px; color:#334396;"></i>
                            <span class="mms-txt-headdetail pb-2">อัปโหลด</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-12 col-md-6 pb-4">
            <label class="mms-txt-headdetail p-2">แนบไฟล์หนังสืออนุมัติสิทธิ์<span class="star-comment">*</span></label>
            <div class="banner-box-upload">
                <div class="div-file-upload">
                    <InputFile accept=".csv,.xlsx" class="custom-input-file " type="file" OnChange="@LoadImage" required />
                    <div class="container mms-media-center">
                        <div class="py-4 d-flex flex-column mms-media-center">
                            <i class="fa-solid fa-file-arrow-up pb-2" style="font-size:40px; color:#334396;"></i>
                            <span class="mms-txt-headdetail pb-2">อัปโหลด</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="mms-media-end pt-5">
        <Button Class="ant-btn-distable" @onclick=@(() => GoBack(1))>
            <i class="fa-solid fa-circle-chevron-left"></i>&nbsp; ย้อนกลับ
        </Button> &nbsp; &nbsp;
        <Button Type="@ButtonType.Primary" @onclick=@(() => GoNext(1))>
            <i class="fa-solid fa-floppy-disk"></i>&nbsp; บันทึก
        </Button>
    </div>
</Modal>

@code {
    [Parameter]
    public EventCallback<int> IndexPage { get; set; }

    [Parameter]
    public bool _visible { get; set; }

    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    string txtValue { get; set; }

    /*--  CallPage Back AND Next--*/
    public async Task GoNext(int usepage)
    {
        IndexPage.InvokeAsync(1);
    }
    public async Task GoBack(int usepage)
    {
        IndexPage.InvokeAsync(1);
    }
    /* Radio */
    int _value = 1;

    /* modal */
    bool _loading = false;

    private void ShowModal()
    {
        _visible = true;
    }

    private void HandleOk(MouseEventArgs e)
    {
        _loading = false;
        OnClose.InvokeAsync(false);
    }

    private void HandleCancel(MouseEventArgs e)
    {
        _loading = false;
        OnClose.InvokeAsync(false);
    }
    /*-- select --*/
    string _selectedValue;
    string _selectedItem;
    /* -- Date Picker -- */
    string dateformat = "วว/ปป/ดด";
    /* -- Frist Render Name Label -- */
    RenderFragment lauid =>@<div class="mms-txt-headdetail">เลขประจำตัวประชาชน์<span class="star-comment">*</span></div>;
    RenderFragment lacheck =>@<div class="mms-txt-headdetail">หน่วยงาน<span class="star-comment">*</span></div>;
    RenderFragment laname =>@<div class="mms-txt-headdetail">ชื่อ-นามสกุล<span class="star-comment">*</span></div>;
    RenderFragment latype =>@<div class="mms-txt-headdetail">ประเภทบริการ<span class="star-comment">*</span></div>;
    RenderFragment lapass =>@<div class="mms-txt-headdetail">รหัส claim<span class="star-comment">*</span></div>;
    RenderFragment lahos =>@<div class="mms-txt-headdetail">สถานพยาบาลอนุมัติสิทธิ์<span class="star-comment">*</span></div>;
    RenderFragment ladate =>@<div class="mms-txt-headdetail">วันที่ผ่าตัด<span class="star-comment">*</span></div>;
    RenderFragment ladonor =>@<div class="mms-txt-headdetail">ID Donor<span class="star-comment">*</span></div>;
    RenderFragment labut =>@<div class="mms-txt-headdetail">จำนวนเงิน<span class="star-comment">*</span></div>;
    /* -- Model -- */
    public class Model
    {

        public string Size { get; set; } = AntSizeLDSType.Small;
        public string Input { get; set; } = "";
        public string InputArea { get; set; } = "inputArea";
        public string Cascader { get; set; } = "11";
        public DateTime? DatePicker { get; set; } = DateTime.Now;
        public DateTime?[] RangePicker { get; set; } = new DateTime?[] { DateTime.Now, DateTime.Now.AddDays(10) };
        public double Number { get; set; } = 1;
        public bool Switch { get; set; } = true;
        public string Radio { get; set; } = "Beijing";
        public string AutoComplete { get; set; }
        public string Name { get; set; }
        public IEnumerable<string> Names { get; set; } = Array.Empty<string>();
    }
    private Model model = new Model();
    /* -- Upload File --*/
    public string FileName = "";
    public string ImageUri = "";
    public string imgpreview = "";
    List<UploadFileItem> fileList = new List<UploadFileItem>();
    public IBrowserFile bannerFile;

    public async Task LoadImage(InputFileChangeEventArgs inputFileChangeEventArgs)
    {

        FileName = inputFileChangeEventArgs.File.Name;
        bannerFile = inputFileChangeEventArgs.File;
        // Handle CSV file
        if (inputFileChangeEventArgs.File.ContentType == "text/csv")
        {
            using Stream csvStream = inputFileChangeEventArgs.File.OpenReadStream();
            using StreamReader reader = new StreamReader(csvStream);
            string csvContent = await reader.ReadToEndAsync();
            var CsvContent = csvContent; // You can handle the CSV content as needed
            var CsvBase64 = Convert.ToBase64String(Encoding.UTF8.GetBytes(csvContent));
        }

        // Handle XLSX file
        if (inputFileChangeEventArgs.File.ContentType == "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")
        {
            using Stream xlsxStream = inputFileChangeEventArgs.File.OpenReadStream();
            using MemoryStream ms = new MemoryStream();
            await xlsxStream.CopyToAsync(ms);
            var XlsxBytes = ms.ToArray();
            var XlsxBase64 = Convert.ToBase64String(XlsxBytes);
        }

        StateHasChanged();
    }
}

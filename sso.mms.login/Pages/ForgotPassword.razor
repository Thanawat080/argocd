@page "/forgotpassword"
@using sso.mms.helper.Configs;
@using sso.mms.helper.Data;
@using sso.mms.login.Services;
@using sso.mms.login.ViewModels;
@inject UserService userService
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
@inject SweetAlertService Swal

<style>
    .txt-class-title {
        color: #334396;
        font-family: Noto Sans Thai;
        font-style: normal;
        font-weight: 600;
    }

    .btn-xmark {
        font-family: Noto Sans Thai;
        font-style: normal;
        font-weight: 600;
        border-radius: 4px;
        border: 2px solid #334396;
        background: #FFF;
        color: #334396;
        height: 42px;
    }

    .btn-accept {
        font-family: Noto Sans Thai;
        font-style: normal;
        font-weight: 600;
        border-radius: 4px;
        background: #334396;
        height: 42px;
    }
</style>

@*@if (isLoading == true)
{
    <style>body { overflow: hidden; }</style><LoadingPage></LoadingPage>
}*@

<nav class="bg-white shadow-sm d-flex justify-content-between align-items-center">
    <div>
        <img class="m-4 px-4" style="width:286px; height:45px;" src="/img/mms-logo.png" />
    </div>
</nav>
<body class="container">
    <div class="d-flex justify-content-center align-items-center mt-5">
        <div class="shadow-sm" style="width:625px; height:726px;border-radius: 16px; border:1px solid #D4D2D5">
            <div class="d-flex justify-content-start p-2 px-5" style="border-radius: 16px 16px 0px 0px;background: #FFCD41;">
                <div class="txt-class-title h2 pt-2"> ยืนยันรหัสผ่าน </div>
            </div>
            <div class="container py-4 px-5">
                <form class="txt-class-title">
                    <div class="form-group my-4">
                        <label for="exampleInputEmail1">Username</label>
                        <input type="text" class="form-control" value="@resHospitalUserM.UserName" readonly>
                    </div>
                    <div class="form-group my-4">
                        <label for="exampleInputEmail1">Email</label>
                        <input type="text" class="form-control" value="@resHospitalUserM.Email" readonly>
                    </div>
                    <div class="form-group my-4">
                        <label for="exampleInputEmail1">รหัสผ่านใหม่</label>
                        <input type="password" class="form-control" placeholder="กรุณากรอกรหัสผ่านใหม่" @bind="@newPassword">
                    </div>
                    <div class="form-group my-4">
                        <label for="exampleInputEmail1">ยืนยันรหัสผ่านใหม่</label>
                        <input type="password" class="form-control" placeholder="กรุณายืนยันรหัสผ่านใหม่" @bind="@confirmPassword">
                    </div>
                </form>
                <div class="d-flex justify-content-end pt-5 mt-5">
                    <div>
                        <button class="btn btn-secondary btn-xmark p-2 px4 d-flex align-items-center" @onclick="OnBackToLogin">
                            <i class="fa-solid fa-circle-xmark"></i>&nbsp; ยกเลิก
                        </button>
                    </div>&nbsp;&nbsp;
                    <div>
                        <button class="btn btn-primary btn-accept p-2 px4 d-flex align-items-center" @onclick="OnChangePassword">
                            <i class="fa-solid fa-circle-check"></i>&nbsp; ยืนยันการเปลี่ยนรหัสผ่านใหม่
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "email")]
    public string? email { get; set; } = "";

    private bool isLoading = false;

    [Parameter]
    public string? userName { get; set; }


    public string? env = ConfigureCore.ConfigENV;
    public string? SecretKey = ConfigureCore.SecretKey;
    public string? url;


    HospitalUserM resHospitalUserM = new HospitalUserM();

    public string? newPassword { get; set; }
    public string? confirmPassword { get; set; }
    public string? urlLogin;


    protected override async Task OnInitializedAsync()
    {
        urlLogin = ConfigureCore.redirectLogin;

        resHospitalUserM = await userService.GetUserByEmail(email!);

    }

    public async Task OnChangePassword()
    {
        if (newPassword == confirmPassword)
        {
            var decryptedOldPassword = AesOperation.DecryptString(SecretKey, resHospitalUserM.Password);
            ResponseChangePasswordModel response = await userService.ChangePassword(newPassword, resHospitalUserM.UserName, decryptedOldPassword, resHospitalUserM.Id, "sso-mms-hospital");

            if (response != null)
            {
                if (response.isStatus == true)
                {
                    await Swal.FireAsync(
                     "เปลี่ยนรหัสผ่านสำเร็จ",
                     null,
                     SweetAlertIcon.Success
                     );
                    await OnBackToLogin();
                }
                //await JsRuntime.InvokeVoidAsync("alert", "เปลี่ยนรหัสผ่านสำเร็จ");
            }
            else
            {
                Console.WriteLine("response", response);
            }
        }
        else
        {
            await Swal.FireAsync(
                       "ตรวจสอบรหัสผ่านใหม่อีกครั้ง",
                       null,
                       SweetAlertIcon.Error

                       );
            //await JsRuntime.InvokeVoidAsync("alert", "กรอกรหัสผ่านไม่ถูกต้องกรุณากรอกใหม่อีกครั้ง");
        }

    }

    public async Task OnBackToLogin()
    {
        NavigationManager.NavigateTo(urlLogin);
    }


}

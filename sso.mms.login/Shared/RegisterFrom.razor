@using System.Text;
@using System.Security.Cryptography;
@using sso.mms.helper.Configs;
@using sso.mms.helper.Data;
@using sso.mms.helper.PortalModel;
@using sso.mms.helper.ViewModels;
@using sso.mms.login.Services;
@using sso.mms.login.ViewModels;
@using sso.mms.login.ViewModels.Master;
@inject NavigationManager NavigationManager;
@inject MasterProvinceService masterService
@inject KeyCloakService keyCloakService
@inject UserService userService
@inject IJSRuntime JsRuntime
@inject SweetAlertService Swal

<style>
    .swal2-container.swal2-center > .swal2-popup {
        grid-column: 2;
        grid-row: 2;
        align-self: center;
        justify-self: center;
        border-radius: 16px;
    }

    .swal2-title {
        position: relative;
        max-width: 100%;
        margin: 0;
        padding: 0.8em 1em 0;
        color: inherit;
        font-size: 1.875em;
        font-weight: 600;
        text-align: center;
        text-transform: none;
        word-wrap: break-word;
        color: #334396;
        font-family: Noto Sans Thai;
    }

    .swal2-styled.swal2-confirm {
        border: 0;
        color: #fff;
        font-size: 1em;
        border-radius: 4px;
        background: #334396;
        width: 150px;
    }
</style>
@if (isLoading == true)
{
    <style>
        body {
            overflow: hidden;
        }</style>

    <LoadingPage></LoadingPage>
}
<div class="bg-reg-color">
    <MediaStyle></MediaStyle>
    <form @onsubmit=NextButton>
        <div class="container" style="padding-top:45px;padding-bottom:45px;">
            <div class="row">
                <div class="text-title">
                    <p>สมัครสมาชิก</p>
                </div>
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 col-2xl-6">
                    <div class="data-detail-1">
                        <div class="from-header">
                            <p class="text-header p-2" style="margin-bottom: 0rem;">
                                ข้อมูลผู้ติดต่อ
                            </p>
                        </div>
                        <div class="from-body">
                            <div class="container">
                                <div class="p-2">
                                    <div class="mb-3">
                                        <label class="text-content float-start" for="uid">เลขบัตรประจำตัวประชาชน</label>
                                        <p class="float-start" style="color:red">*</p>
                                        <input type="text" class="form-control" maxlength="13" @bind="IdenficationNumber" placeholder="X-XXXX-XXXXX-XX-X"
                                               oninput="this.value = this.value.replace(/[^0-9]/g, '').slice(0, 13);"
                                               pattern="[0-9]{13,13}" required>

                                    </div>
                                    <div class="mb-3">
                                        <label for="" class="text-content float-start">คำนำหน้าชื่อ</label>
                                        <p class="float-start" style="color:red">*</p>
                                        @*    <input class="form-control " list="datalistOptions" id="exampleDataList" placeholder="นาย" @onchange=@((item) => selectPrefixM(item.Value.ToString())) required>
                                        <datalist id="datalistOptions">
                                        @if (prefixMs != null)
                                        {
                                        @foreach (var item in prefixMs)
                                        {
                                        <option value="@item.Name" ></option>
                                        }
                                        }
                                        </datalist>*@

                                        <select class="form-select" aria-label="Default select example" @bind=@Prefix required>
                                            <option disabled selected value="">เลือกคำนำหน้าชื่อ</option>
                                            @if (prefixMs != null)
                                            {
                                                @foreach (var item in prefixMs)
                                                {
                                                    <option value="@item.Code">@item.Name</option>
                                                }
                                            }
                                        </select>

                                    </div>
                                    <div class="mb-3">
                                        <label class="text-content float-start" for="">ชื่อ</label>
                                        <p class="float-start" style="color:red">*</p>
                                        <input type="text" class="form-control" @bind=Fristname
                                               oninput="this.value = this.value.replace(/[^a-zA-Zก-๙]/g, '');" required>
                                    </div>
                                    <div class="mb-3">
                                        <label class="text-content float-start" for="">ชื่อกลาง</label>
                                        @*   <p class="float-start" style="color:red">*</p>*@
                                        <input type="text" class="form-control" @bind=MiddleName
                                               oninput="this.value = this.value.replace(/[^a-zA-Zก-๙]/g, '');">
                                    </div>
                                    <div class="mb-3">
                                        <label class="text-content float-start" for="">นามสกุล</label>
                                        <p class="float-start" style="color:red">*</p>
                                        <input type="text" class="form-control" @bind=Lastname
                                               oninput="this.value = this.value.replace(/[^a-zA-Zก-๙]/g, '');" required>
                                    </div>
                                    <div class="mb-3">
                                        <label class="text-content float-start" for="">ตำแหน่ง</label>
                                        <p class="float-start" style="color:red">*</p>
                                        <input type="text" class="form-control" @bind=PositionName
                                               oninput="this.value = this.value.replace(/[^a-zA-Zก-๙]/g, '');" required>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="data-detail-2 mt-4">
                        <div class="from-header">
                            <p class="text-header p-2" style="margin-bottom: 0rem;">
                                ประเภทสถานพยาบาล
                            </p>
                        </div>
                        <div class="from-body mb-4">
                            <div class="container py-1">
                                <div class="p-2 px-5">
                                    <div class=" row d-flex justify-content-center">
                                        <div class="form-check col">
                                            <input class="form-check-input" type="radio" name="exampleRadios" id="type1" @onclick=@(()=>checkTypeHosp(1)) checked>
                                            <label class="form-check-label" for="type1">
                                                โรงพยาบาล , คลินิก
                                            </label>
                                        </div>
                                        <div class="form-check col">
                                            <input class="form-check-input" type="radio" name="exampleRadios" id="type3" @onclick=@(()=>checkTypeHosp(3))>
                                            <label class="form-check-label" for="type3">
                                                ร้านขายยา
                                            </label>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    @if (showType == 1)
                    {
                        <div class="data-detail-2 mt-4">
                            <div class="from-header">
                                <p class="text-header p-2" style="margin-bottom: 0rem;">
                                    ข้อมูลสถานพยาบาล
                                </p>
                            </div>
                            <div class="from-body mb-4">
                                <div class="container">
                                    <div class="p-2">
                                        <div class="mb-3">
                                            <label class="text-content float-start" for="">รหัสสถานพยาบาล</label>
                                            <p class="float-start" style="color:red">*</p>
                                            <input type="text" class="form-control" value=@MedicalCode placeholder="XXXXX หรือ XXXXXXXXX" @onchange=@inputHospitalCode maxlength="9"
                                                   oninput="this.value = this.value.replace(/[^0-9]/g, '').slice(0, 9);"
                                                   pattern="^\d{5}$|^\d{9}$" required>
                                        </div>
                                        <div class="mb-3">
                                            <label class="text-content float-start" for="">ชื่อสถานพยาบาล</label>

                                            <input type="text" class="form-control" @bind=MedicalName
                                                   required disabled="@ReadHospName" readonly="@ReadHospName">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="data-detail-2 mt-4">
                            <div class="from-header">
                                <p class="text-header p-2" style="margin-bottom: 0rem;">
                                    ข้อมูลร้านขายยา
                                </p>
                            </div>
                            <div class="from-body mb-4">
                                <div class="container">
                                    <div class="p-2">
                                        <div class="mb-3">
                                            <label class="text-content float-start" for="">เลขนิติบุคคล</label>
                                            <p class="float-start" style="color:red">*</p>
                                            <input type="text" class="form-control" placeholder="XXXXXXXXXXXXX" value=@MedicalCode @onchange=@inputHospitalCode maxlength="13"
                                                   oninput="this.value = this.value.replace(/[^0-9]/g, '').slice(0, 13);"
                                                   pattern="[0-9]{0,13}" required>
                                        </div>
                                        <div class="mb-3">
                                            <label class="text-content float-start" for="">ชื่อร้านขายยา</label>

                                            <input type="text" class="form-control" @bind=MedicalName
                                                   required>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 col-2xl-6">
                    <div class="data-detail-3">
                        <div class="from-header">
                            <p class="text-header p-2" style="margin-bottom: 0rem;">
                                ข้อมูลการติดต่อสถานพยาบาล
                            </p>
                        </div>
                        <div class="from-body">
                            <div class="container">
                                <div class="p-2">
                                    <div class="mb-3">
                                        <label class="text-content float-start" for="">เบอร์โทรศัพท์</label>
                                        <p class="float-start" style="color:red">*</p>
                                        <input type="text" class="form-control" maxlength="10" @bind=Mobile placeholder="กรอกเบอร์โทรศัพท์"
                                               oninput="this.value = this.value.replace(/[^0-9]/g, '').slice(0, 10);"
                                               pattern="[0-9]{10,10}"
                                               required>
                                    </div>
                                    <div class="mb-3">
                                        <label class="text-content float-start" for="">อีเมล</label>
                                        <p class="float-start" style="color:red">*</p>
                                        <input type="email" class="form-control" @bind=Email pattern="[A-Za-z\._\-0-9]*[@@][A-Za-z]*[\.][A-Za-z.]{2,}" placeholder="กรอกอีเมล"
                                               required>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="data-detail-3 mt-4">
                        <div class="from-body submenu">
                            <div class="container">
                                <div class="p-2">
                                    <div class="mb-3 pt-2">
                                        <label class="text-content float-start" for="">ที่อยู่</label>
                                        <input type="text" class="form-control" @bind=Address placeholder="บ้านเลขที่, ถนน, หมู่">
                                    </div>
                                    <div class="mb-3">
                                        <label for="" class="text-content float-start">จังหวัด</label>

                                        @*@bind=ProvinceCode*@
                                        <select value="@ProvinceCode" class="form-select" @onchange="District"
                                                aria-label="Default select example">
                                            <option>เลือกจังหวัด...</option>
                                            @if (provinceList != null)
                                            {
                                                @foreach (var data in provinceList!)
                                                {


                                                    <option value="@data.Code">@data.NameTh</option>

                                                }
                                            }
                                        </select>
                                    </div>

                                    <div class="mb-3">
                                        <label for="" class="text-content float-start">เขต/อำเภอ</label>
                                        <select value="@DistrictCode" class="form-select" @onchange="SubDistrict"
                                                aria-label="Default select example">
                                            <option>เลือกเขต/อำเภอ...</option>
                                            @if (districtList != null)
                                            {
                                                @foreach (var data in districtList)
                                                {

                                                    <option value="@data.Code">@data.NameTh</option>

                                                }
                                            }
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label for="" class="text-content float-start">แขวง/ตำบล</label>
                                        <select class="form-select" @bind=SubdistrictCode
                                                aria-label="Default select example">

                                            <option>เลือกแขวง/ตำบล...</option>
                                            @if (subDistrictList != null)
                                            {
                                                @foreach (var data in subDistrictList)
                                                {
                                                    <option value="@data.Code">@data.NameTh</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label class="text-content float-start" for="">รหัสไปรษณีย์</label>
                                        <input type="text" class="form-control" maxlength="5" @bind=ZipCode placeholder="รหัสไปรษณีย์"
                                               oninput="this.value = this.value.replace(/[^0-9]/g, '').slice(0, 5);" pattern="[0-9]{5,5}">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="d-flex justify-content-end" style="margin-top:15%;margin-bottom:10%">
                            <div class="end-bt">
                                <button class="btn btn-outline-secondary p-2 bd-highlight bt-back-c" @onclick=BackButton type="button">
                                    <i class="fa-solid fa-circle-chevron-left"></i>
                                    &nbsp; ย้อนกลับ
                                </button>
                                &nbsp;
                                <button class="btn btn-primary p-2 bd-highlight bt-con-c" type="submit">
                                    &nbsp; ต่อไป
                                    <i class="fa-solid fa-circle-chevron-right"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>


    @if (isLoading == true)
    {
        <LoadingPage></LoadingPage>
    }
    <div class="footer">
        <Footer />
    </div>
</div>
@code {
    public string? env = ConfigureCore.ConfigENV;
    public string? url;
    public bool isloading = false;

    [Parameter]
    public HospitalUserM RegisData { get; set; }

    private string? IdenficationNumber;
    private string? Prefix;
    private string? Fristname;
    private string? MiddleName;
    private string? Lastname;
    private string? MedicalCode;
    private string? MedicalName;
    private string? Mobile;
    private string? Email;
    private string? Address;
    private string? DistrictCode;
    private string? SubdistrictCode;
    private string? ProvinceCode;
    private string? ZipCode;
    private int? hospMId;
    private int? showType = 1;
    private string? PositionName;
    private bool ReadHospName = true;
    private bool isLoading = false;
    [Parameter]
    public int page { get; set; }

    [Parameter]
    public EventCallback<int> OnBackButton { get; set; }

    public async Task BackButton()
    {
        NavigationManager.NavigateTo(url + "/");
    }

    [Parameter]
    public EventCallback<int> OnNextButton { get; set; }

    [Parameter]
    public EventCallback<(HospitalUserM, int)> OnRegis { get; set; }

    private List<ProvinceM>? provinceList = null;
    private List<DistrictM>? districtList { get; set; }
    private List<SubdistrictM>? subDistrictList { get; set; }
    private List<PrefixM> prefixMs { get; set; }


    public async Task NextButton()
    {
        isLoading = true;
        StateHasChanged();
        var getHospData = await keyCloakService.CheckHospCode(MedicalCode);
        if (getHospData == null)
        {
            HospitalM hosData = new HospitalM
                {
                    Code = MedicalCode,
                    Name = MedicalName,
                    IsActive = true,
                    IsStatus = 1,
                    CreateBy = MedicalName,
                    UpdateBy = MedicalName,

                };
            var resAddHosp = await keyCloakService.AddHospData(hosData);
        }
        var hospId = await keyCloakService.GetHospId(MedicalCode);
        if (hospId.issucessStatus == true)
        {
            hospMId = Int32.Parse(hospId.statusMessage);
        }
        string data = MedicalCode.Trim() + ".admin";
        byte[] toBytes = Encoding.UTF8.GetBytes(data);
        byte[] hashBytes;
        using (MD5 md5 = MD5.Create())
        {
            hashBytes = md5.ComputeHash(toBytes);
        }
        string toString = BitConverter.ToString(hashBytes).Replace("-", "").ToLower();
        string firstpass = toString.Substring(0, 7);

        HospitalUserM hospitalUser = new HospitalUserM()
            {
                PrefixMCode = Prefix,
                FirstName = Fristname,
                MiddleName = MiddleName,
                LastName = Lastname,
                PositionName = PositionName,
                IdenficationNumber = IdenficationNumber,
                SsoBranchCode = "",
                MedicalName = MedicalName,
                MedicalCode = MedicalCode,
                HospitalMId = hospMId,
                Email = Email,
                Mobile = Mobile,
                ImagePath = "",
                ImageName = "",
                GroupId = 1,
                Address = Address,
                Moo = null,
                DistrictCode = DistrictCode,
                SubdistrictCode = SubdistrictCode,
                ProvinceCode = ProvinceCode,
                ZipCode = ZipCode,
                LazerCode = "",
                IsStatus = 1,
                CreateDate = DateTime.Now,
                CreateBy = "",
                UpdateDate = DateTime.Now,
                UpdateBy = "",
                UserName = data,
                Password = firstpass,
                IsActive = true,
            };
        ResponseModel responseModel = await keyCloakService.CheckUserName(data);
        //ResponseModel responseCheck = await userService.checkRegis(hospitalUser.Mobile, hospitalUser.IdenficationNumber);

        if (responseModel.issucessStatus != true)
        {

            isLoading = false;
            StateHasChanged();
            Console.WriteLine(responseModel.statusMessage);
            IdenficationNumber = "";
            Prefix = "";
            Fristname = "";
            MiddleName = "";
            Lastname = "";
            PositionName = "";
            MedicalCode = "";
            MedicalName = "";
            Mobile = "";
            Email = "";
            Address = "";
            DistrictCode = "";
            SubdistrictCode = "";
            ProvinceCode = "";
            ZipCode = "";
            ReadHospName = true;
            await Swal.FireAsync(
                   "เลขประจำตัวประชาชน มีอยู่แล้ว & รหัสสถานพยาบาลมีอยู่แล้ว",
                   null,
                   SweetAlertIcon.Warning
                   );
        }
        else
        {
            isLoading = false;
            StateHasChanged();
            this.page = this.page + 1;
            //     await this.OnNextButton.InvokeAsync(this.page);
            await OnRegis.InvokeAsync((hospitalUser, this.page));

        }
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {

        if (env == "Development")
        {
            url = "";
        }
        else
        {
            url = "/login";
        }
        prefixMs = await userService.getPrefix();
        provinceList = await masterService.GetProvince();
        if (RegisData != null)
        {
            IdenficationNumber = RegisData.IdenficationNumber;
            Prefix = RegisData.PrefixMCode;
            Fristname = RegisData.FirstName;
            MiddleName = RegisData.MiddleName;
            Lastname = RegisData.LastName;
            PositionName = RegisData.PositionName;
            MedicalCode = RegisData.MedicalCode;
            MedicalName = RegisData.MedicalName;
            Mobile = RegisData.Mobile;
            Email = RegisData.Email;
            Address = RegisData.Address;
            DistrictCode = RegisData.DistrictCode;
            SubdistrictCode = RegisData.SubdistrictCode;
            ProvinceCode = RegisData.ProvinceCode;
            ZipCode = RegisData.ZipCode;
            ReadHospName = true;




            districtList = await masterService.GetDistrict(ProvinceCode!);
            subDistrictList = await masterService.GetSubDistrict(DistrictCode!);
        }
        StateHasChanged();
    }

    public async Task<List<DistrictM>> District(ChangeEventArgs e)
    {
        districtList = null;
        subDistrictList = null;
        this.ProvinceCode = null;
        this.DistrictCode = null;
        this.SubdistrictCode = null;

        var ProvinceCode = e.Value!.ToString();
        this.ProvinceCode = ProvinceCode;
        districtList = await masterService.GetDistrict(ProvinceCode!);
        StateHasChanged();
        return districtList;
    }

    public async Task<List<SubdistrictM>> SubDistrict(ChangeEventArgs e)
    {
        subDistrictList = null;
        this.DistrictCode = null;
        this.SubdistrictCode = null;

        var DistrictCode = e.Value!.ToString();
        this.DistrictCode = DistrictCode;
        subDistrictList = await masterService.GetSubDistrict(DistrictCode!);
        StateHasChanged();
        return subDistrictList;
    }
    public async void selectPrefixM(string name)
    {
        var prefixselect = prefixMs.FirstOrDefault(f => f.Name == name);
        if (prefixselect != null)
        {
            Prefix = prefixselect.Code;
        }

    }
    public async void inputHospitalCode(ChangeEventArgs e)
    {
        var getHospData = await keyCloakService.CheckHospCode(e.Value.ToString());
        if (getHospData != null)
        {
            ReadHospName = true;
            MedicalCode = e.Value.ToString();
            MedicalName = getHospData.Name;
            StateHasChanged();
        }
        else
        {
            MedicalCode = e.Value.ToString();
            MedicalName = "";
            ReadHospName = false;
            StateHasChanged();
        }
    }
    public async void checkTypeHosp(int type)
    {
        if (type == 3)
        {
            showType = 3;
            MedicalCode = "";
            MedicalName = "";
            StateHasChanged();
        }
        else
        {

            showType = 1;
            MedicalCode = "";
            MedicalName = "";
            StateHasChanged();
        }

    }

}

@using sso.mms.portal.ext.ViewModels;
@inject IJSRuntime JSRuntime;
@inject NavigationManager Navigation;

<style>
    .circleOrange {
        background: red;
        border-radius: 3em;
        -moz-border-radius: 3em;
        -webkit-border-radius: 3em;
        color: #ffffff;
        height: 2.5em;
        width: 2.5em;
        display: inline-block;
        font-family: 'Roboto', Helvetica, Sans-serif;
        font-size: 11px;
        line-height: 2em;
        text-align: center;
    }

    .btn-s {
        background: #c5cbe675;
        border-radius: 24px;
        Width: 10rem;
        Height: 10rem;
        display: flex;
        align-items: center;
        justify-content: space-around;
        box-shadow: 3px 2px 2px rgb(0 0 0 / 8%);
    }

    .res-p {
        width: 100%;
        height: 100%;
    }

    .font-style {
        font-weight: 600;
        font-size: 16px;
        line-height: 30px;
        text-align: center;
        color: #334396;
    }


    .fa-solid, .fas {
        font-size: 60px;
        margin-top: 15px;
    }

    .btn-outline-primary {
        --bs-btn-color: #f8f8f7;
        --bs-btn-border-color: #dfe1f0;
        --bs-btn-hover-color: #fff;
        --bs-btn-hover-bg: #f8f8f7;
        --bs-btn-hover-border-color: #e0e0e0;
        --bs-btn-focus-shadow-rgb: 13,110,253;
        --bs-btn-active-color: #fff;
        --bs-btn-active-bg: #ffffff;
        --bs-btn-active-border-color: #334396;
        --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
        --bs-btn-disabled-color: #334396;
        --bs-btn-disabled-bg: transparent;
        --bs-btn-disabled-border-color: #334396;
        --bs-gradient: none;
    }

        .mb-05 {
            margin: 0.5rem !important;
        }

    @@media screen and (min-width: 391px) {
        .mb4 {
            margin: 1.5rem !important;
        }
    }

    .btn-s:hover{
        background-color: #FFFFFF;
        color: #334396;
        font-weight: 600;
        box-shadow: 0px 0px 0px 1px #B8C3F9;
        background: #ffffff;
    }
</style>

<div class="btn-group mb-05 mb4" role="group" aria-label="" @onclick=ClickMenu>

    <div class="media-mobile-style">
        <button type="button" class="btn btn-outline-primary btn-s button-box">
            @if (DetailImagePath == "การแจ้งเตือน")
            {
                if (NotiNo == 0)
                {

                }
                else
                {
                    <a style="padding-left: 20px;position: absolute;padding-bottom: 90px;">
                        <span class="circleOrange" style="position:absolute;padding-top:3px;">@NotiNo</span>
                    </a>
                }


            }
            else if (DetailImagePath == "Online Chat")
            {
                if (ChatNotiNo == 0)
                {

                }
                else
                {
                    <a style="padding-left: 20px;position: absolute;padding-bottom: 90px;">
                        <span class="circleOrange" style="position:absolute;padding-top:3px;">@ChatNotiNo</span>
                    </a>
                }
            }
            <i class="@ImagePath" style="color:#334396"></i>
            @* <img src=@ImagePath class="d-block" alt="..." style="width:@Width; height:@Height">*@

            <div class="font-style"> @DetailImagePath  </div>
        </button>
    </div>

</div>

@code {
    [Parameter]
    public string? ImagePath { get; set; }
    [Parameter]
    public string? DetailImagePath { get; set; }
    [Parameter]
    public string? Width { get; set; }
    [Parameter]
    public string? Height { get; set; }
    [Parameter]
    public string? Path { get; set; }
    [Parameter]
    public int? NotiNo { get; set; }  
    [Parameter]
    public int? ChatNotiNo { get; set; }

    [Parameter]
    public EventCallback<bool> OnClickMenuList { get; set; }
    [Parameter]
    public EventCallback<bool> OnClickToChat { get; set; }
    [Parameter]
    public EventCallback<bool> OnClickCerReg { get; set; }
    [Parameter]
    public EventCallback<bool> OnClickAddNewUser { get; set; }
    [Parameter]
    public EventCallback<bool> OnClickHospitalData { get; set; } 
    [Parameter]
    public EventCallback<bool> OnClickHospitalUser { get; set; }
    [Parameter]
    public EventCallback<(bool , string)> OnClickPayStatus { get; set; }
    [Parameter]
    public EventCallback<bool> OnClickDigital { get; set; }
    [Parameter]
    public EventCallback<bool> OnClickElectronicSignature { get; set; }
    [Parameter]
    public EventCallback<bool> OnClickPdpaDsar { get; set; }

    public async void ClickMenu()
    {
        //await JSRuntime.InvokeVoidAsync("open", Path );

        if (DetailImagePath == "การแจ้งเตือน")
        {
            await this.OnClickMenuList.InvokeAsync(true);
        }
        if (DetailImagePath == "Online Chat")
        {
            await this.OnClickToChat.InvokeAsync(true);
        }
        if (DetailImagePath == "บัตรรับรองการขึ้นทะเบียน")
        {
            await this.OnClickCerReg.InvokeAsync(true);
        }
        if (DetailImagePath == "การจัดการผู้ใช้งาน")
        {
            await this.OnClickAddNewUser.InvokeAsync(true);
        }
        if (DetailImagePath == "ข้อมูลสถานพยาบาล")
        {
            await this.OnClickHospitalData.InvokeAsync(true);
        }
        if (DetailImagePath == "จำนวนผู้ประกันตนที่เลือกสถานพยาบาล")
        {
            await this.OnClickPayStatus.InvokeAsync((true, "จำนวนผู้ประกันตนที่เลือกสถานพยาบาล"));
        }
        if (DetailImagePath == "ขอใช้สิทธิ์เข้าถึงข้อมูลความยินยอม")
        {
            await this.OnClickPdpaDsar.InvokeAsync(true);
        }
        if (DetailImagePath == "จัดการเอกสารอิเล็กทรอนิกส์")
        {
            await this.OnClickDigital.InvokeAsync(true);
        }
        if (DetailImagePath == "สถานะการเบิกจ่าย")
        {
            await this.OnClickPayStatus.InvokeAsync((true, "สถานะการเบิกจ่าย"));
        }
        if (DetailImagePath == "จัดการลายมือ ชื่อดิจิตอล")
        {
            await this.OnClickElectronicSignature.InvokeAsync(true);
        }

    }
}
@using sso.mms.helper.ViewModels;
@using sso.mms.notification.ViewModel;
@using sso.mms.helper.Utility;
<style>
    .scrollbar {
        float: left;
        height: 809px;
        width: 100%;
        background: #fff;
        overflow-y: scroll;
        margin-bottom: 25px;
    }

    .scrollbar-primary::-webkit-scrollbar {
        width: 12px;
        background-color: #F5F5F5;
    }

    .scrollbar-primary::-webkit-scrollbar-thumb {
        border-radius: 10px;
        -webkit-box-shadow: inset 0 0 6px rgb(255 255 255 / 0%);
        background-color: #ffffff;
    }

    .scrollbar-primary::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 0px rgb(0 0 0 / 0%);
        background-color: #ffffff;
        border-radius: 10px;
    }

    .dot {
        background: red;
        border-radius: 3em;
        -moz-border-radius: 3em;
        -webkit-border-radius: 3em;
        color: #ffffff;
        height: 1.8em;
        width: 1.8em;
        display: inline-block;
        font-family: 'Roboto', Helvetica, Sans-serif;
        font-size: 11px;
        line-height: 2em;
        text-align: center;
    }
    .card-list{
    margin-left: 1rem;
    height: 809px;
    border: 1px solid #d4d2d53b;
    box-shadow: 4px 3px 4px rgba(0, 0, 0, 0.05);
    border-radius: 10px 10px 10px 10px;
    width:100%;
    }

    .truncate {
        width: 100%;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .row-elipe {
        display: flex;
        flex-wrap: nowrap;
        align-items: center;
        width:100%;
    }

</style>


<div class="card card-list">
    <div class="card-header-m">
        <h3 class="px-3"style="color: #334396;">
            รายการ
        </h3>
    </div>
    <div class="scrollbar scrollbar-primary mt-1" id="scroll">
        <div class="card-body-m-w">

            @foreach (var item in responseNotiT)
            {
                    <div class="d-flex @item.DivClass" @onclick="@(() => ChangeColor(item))">
                        <div class="noti-box">
                            <div class="d-flex justify-content-start">

                            <div class="row row-elipe">
                                    <div class="col-1">
                                    </div>
                                    <div class="col-9">
                                    <p class="text-color-cutom fw-bold truncate">@item.Title</p>
                                    </div>
                                @if (item.IsStatus == 1)
                                {
                                            <div class="col">

                                                <span class="dot"></span>

                                            </div>
                                }
                                </div>
                            </div>
                            <div class="d-flex justify-content-end">
                                <div class="text-datetimes fw-bold">@ThaiDateFormat.FormattedDate(item.CreateDate)</div>
                            </div>

                        </div>
                    </div>
            }
        </div>
    </div>
</div>



@code {

    [Parameter]
    public List<NotiT> responseNotiT { get; set; }

    [Parameter]
    public EventCallback<int> OnChangeListNotiT { get; set; }

    [Parameter]
    public int notiMId { get; set; }

    private async void ChangeColor(NotiT item)
    {
        foreach (var i in responseNotiT)
        {
            i.DivClass = "";
        }

        item.DivClass = "clicked";

        if (item.DivClass == "clicked")
        {
            item.IsStatus = 0;
            StateHasChanged();
            await OnChangeListNotiT.InvokeAsync(item.Id);

        }
    }
}
